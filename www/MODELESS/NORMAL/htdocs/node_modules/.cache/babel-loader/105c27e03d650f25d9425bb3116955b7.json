{"remainingRequest":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/UpgradeDiagnosis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/UpgradeDiagnosis.vue","mtime":1600155105014},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js","mtime":1600155105338},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js","mtime":1600155105414}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UpgradeDiagnosis.vue"],"names":[],"mappings":";;;;AAKA,OAAA,UAAA,MAAA,6BAAA;AACA,SACA,kBADA,EAEA,SAFA,EAGA,aAHA,EAIA,YAJA,EAKA,MALA,QAMA,gBANA;AAQA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,EADA;AAEA,MAAA,aAAA,EAAA,EAFA;AAGA,MAAA,UAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA,EAJA;AAKA,MAAA,SAAA,EAAA,EALA;AAMA,MAAA,IAAA,EAAA;AACA,QAAA,cAAA,EAAA;AADA;AANA,KAAA;AAUA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AACA,IAAA,OAAA,CAAA,IAAA,CAAA;AACA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,sBAAA,EAAA,gCAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,OAAA,IAAA,gCAAA,EAAA;AACA,aAAA,cAAA,CAAA,KAAA,CAAA,OAAA,IAAA,KAAA,CAAA,MAAA;AACA,QAAA,oBAAA,CAAA,IAAA,CAAA;AACA,OAHA,MAIA,IAAA,KAAA,CAAA,OAAA,IAAA,uCAAA,EAAA;AACA,aAAA,cAAA,CAAA,KAAA,CAAA,OAAA,IAAA,KAAA,CAAA,MAAA;AACA,QAAA,0BAAA,CAAA,IAAA,CAAA;AACA,OAHA,MAIA;AACA,aAAA,cAAA,CAAA,KAAA,CAAA,OAAA,IAAA,KAAA,CAAA,MAAA;AACA;AACA;AAbA;AAnBA,CAAA;;AAoCA,SAAA,OAAA,CAAA,EAAA,EAAA;AACA,EAAA,EAAA,CAAA,MAAA,CAAA,GAAA,CAAA,2BAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,IAAA,EAAA,CAAA,cAAA,GAAA,IAAA;AACA,IAAA,EAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA;AACA,IAAA,EAAA,CAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,IAAA,EAAA,CAAA,cAAA,GAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAEA,IAAA,cAAA,CAAA,EAAA,CAAA;AACA,IAAA,0BAAA,CAAA,EAAA,CAAA;;AAEA,QAAA,EAAA,CAAA,SAAA,CAAA,KAAA,CAAA,SAAA,IAAA,CAAA,EAAA;AACA,MAAA,eAAA,CAAA,EAAA,CAAA;AACA,KAFA,MAEA;AACA,MAAA,cAAA,CAAA,EAAA,CAAA;AACA;AACA,GAdA;AAeA;;AAEA,SAAA,UAAA,CAAA,EAAA,EAAA;AACA,EAAA,EAAA,CAAA,IAAA,CAAA,aAAA,GAAA,IAAA;AAEA,MAAA,WAAA,GAAA;AACA,IAAA,MAAA,EAAA,kBADA;AAEA,IAAA,MAAA,EAAA,KAFA;AAGA,IAAA,UAAA,EAAA,EAAA,CAAA;AAHA,GAAA;AAKA,EAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,WAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,IAAA,kBAAA,CAAA,EAAA,CAAA;AACA,IAAA,EAAA,CAAA,IAAA,CAAA,aAAA,GAAA,KAAA;AACA,GAHA;AAIA;;AAEA,SAAA,aAAA,CAAA,EAAA,EAAA;AACA,EAAA,EAAA,CAAA,aAAA,GAAA,EAAA;;AACA,OAAA,IAAA,UAAA,IAAA,EAAA,CAAA,cAAA,EAAA;AACA,QAAA,EAAA,CAAA,OAAA,CAAA,UAAA,CAAA,UAAA,KAAA,EAAA,CAAA,cAAA,CAAA,UAAA,CAAA,EAAA;AACA,MAAA,EAAA,CAAA,aAAA,CAAA,UAAA,IAAA,EAAA,CAAA,cAAA,CAAA,UAAA,CAAA;AACA;AACA;AACA;;AAEA,SAAA,oBAAA,CAAA,EAAA,EAAA;AACA,MAAA,WAAA,GAAA;AACA,IAAA,MAAA,EAAA,kBADA;AAEA,IAAA,MAAA,EAAA,KAFA;AAGA,IAAA,UAAA,EAAA;AACA,wCAAA,EAAA,CAAA,cAAA,CAAA,gCAAA;AADA;AAHA,GAAA;AAOA,EAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,WAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,IAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AACA,GAFA;AAGA;;AAEA,SAAA,0BAAA,CAAA,EAAA,EAAA;AACA,MAAA,IAAA,GAAA,YAAA,CACA,EAAA,CAAA,IADA,EAEA,WAFA,EAGA,uCAHA,CAAA;;AAKA,MAAA,EAAA,CAAA,cAAA,CAAA,uCAAA,KAAA,CAAA,EAAA;AACA,IAAA,IAAA,CAAA,QAAA,GAAA,IAAA;AACA,GAFA,MAEA;AACA,IAAA,IAAA,CAAA,QAAA,GAAA,KAAA;AACA;AACA;;AAEA,SAAA,SAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AACA,MAAA,WAAA,GAAA;AACA,IAAA,MAAA,EAAA,kBADA;AAEA,IAAA,MAAA,EAAA,QAFA;AAGA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AAHA,GAAA;AAOA,EAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,WAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,IAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,eAAA,CAAA,CAAA;AACA,QAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,OAAA;AACA,GAJA;AAKA;;AAEA,SAAA,eAAA,CAAA,EAAA,EAAA;AACA,MAAA,OAAA,GAAA,IAAA,CADA,CAEA;;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,uCAAA,KAAA,CAAA,IAAA,EAAA,CAAA,cAAA,CAAA,uCAAA,KAAA,EAAA,EAAA;AACA,QAAA,IAAA,GAAA,YAAA,CACA,EAAA,CAAA,IADA,EAEA,WAFA,EAGA,uCAHA,CAAA;AAKA,IAAA,IAAA,CAAA,MAAA,GAAA,IAAA;AACA,IAAA,OAAA,GAAA,KAAA;AACA,GAXA,CAaA;;;AACA,MAAA,eAAA,OAAA,EAAA,CAAA,aAAA,CAAA,mCAAA,CAAA,EAAA;AACA,QAAA,EAAA,CAAA,aAAA,CAAA,mCAAA,EAAA,MAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,EAAA,CAAA,aAAA,CAAA,mCAAA,CAAA,CAAA,EAAA;AACA,UAAA,KAAA,GAAA,YAAA,CACA,EAAA,CAAA,IADA,EAEA,MAFA,EAGA,mCAHA,CAAA;;AAKA,MAAA,KAAA,CAAA,MAAA,GAAA,IAAA;AACA,MAAA,OAAA,GAAA,KAAA;AACA;AACA;;AACA,SAAA,OAAA;AACA;;AAEA,SAAA,cAAA,CAAA,EAAA,EAAA;AACA,EAAA,EAAA,CAAA,IAAA,GAAA;AACA,IAAA,cAAA,EAAA,IADA;AAEA,IAAA,UAAA,EAAA;AACA,MAAA,UAAA,EAAA,EAAA,CAAA,EAAA,CAAA,SAAA,CADA;AAEA,MAAA,WAAA,EAAA,EAAA,CAAA,EAAA,CAAA,WAAA;AAFA,KAFA;AAMA,IAAA,QAAA,EAAA,oBAAA;AACA,MAAA,aAAA,CAAA,EAAA,CAAA;;AACA,UAAA,CAAA,eAAA,CAAA,EAAA,CAAA,EAAA;AACA;AACA;;AACA,MAAA,UAAA,CAAA,EAAA,CAAA;AACA,KAZA;AAaA,IAAA,QAAA,EAAA,oBAAA;AACA,MAAA,EAAA,CAAA,IAAA,CAAA,aAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,EAAA,CAAA;AACA,KAhBA;AAiBA,IAAA,aAAA,EAAA,KAjBA;AAkBA,IAAA,aAAA,EAAA,KAlBA;AAmBA,IAAA,QAAA,EAAA;AAnBA,GAAA;AAqBA,EAAA,EAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,EAAA,CAAA;AACA,EAAA,EAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,EAAA,CAAA;AACA;;AAEA,SAAA,sBAAA,CAAA,EAAA,EAAA;AACA,MAAA,OAAA,GAAA;AACA,IAAA,GAAA,EAAA,WADA;AAEA,IAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,WAAA,CAFA;AAGA,IAAA,gBAAA,EAAA,EAAA,CAAA,EAAA,CAAA,WAAA,CAHA;AAIA,IAAA,KAAA,EAAA,CACA;AACA,MAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,UAAA,CADA;AAEA,MAAA,IAAA,EAAA,QAFA;AAGA,MAAA,GAAA,EAAA,gCAHA;AAIA,MAAA,KAAA,EAAA,EAAA,CAAA,OAAA,CAAA,UAAA,CAAA,gCAAA,CAJA;AAKA,MAAA,WAAA,EAAA,CACA;AAAA,eAAA,CAAA;AAAA,iBAAA;AAAA,OADA,EAEA;AAAA,eAAA,CAAA;AAAA,iBAAA;AAAA,OAFA,EAGA;AAAA,eAAA,CAAA;AAAA,iBAAA;AAAA,OAHA,EAIA;AAAA,eAAA,CAAA;AAAA,iBAAA;AAAA,OAJA,EAKA;AAAA,eAAA,CAAA;AAAA,iBAAA;AAAA,OALA,EAMA;AAAA,eAAA,CAAA;AAAA,iBAAA;AAAA,OANA,EAOA;AAAA,eAAA,CAAA;AAAA,iBAAA;AAAA,OAPA,EAQA;AAAA,eAAA,CAAA;AAAA,iBAAA;AAAA,OARA;AALA,KADA,EAiBA;AACA,MAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,WAAA,CADA;AAEA,MAAA,IAAA,EAAA,QAFA;AAGA,MAAA,GAAA,EAAA,WAHA;AAIA,MAAA,OAAA,EAAA,mBAAA;AACA,QAAA,SAAA,CAAA,EAAA,EAAA,WAAA,CAAA;AACA,OANA;AAOA,MAAA,aAAA,EAAA,IAPA;AAQA,MAAA,UAAA,EAAA,EAAA,CAAA,EAAA,CAAA,QAAA;AARA,KAjBA,EA2BA;AACA,MAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,iBAAA,CADA;AAEA,MAAA,IAAA,EAAA,UAFA;AAGA,MAAA,GAAA,EAAA,uCAHA;AAIA,MAAA,KAAA,EAAA,EAAA,CAAA,OAAA,CAAA,UAAA,CAAA,uCAAA;AAJA,KA3BA,EAiCA;AACA,MAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CADA;AAEA,MAAA,IAAA,EAAA,OAFA;AAGA,MAAA,QAAA,EAAA,KAHA;AAIA,MAAA,MAAA,EAAA,KAJA;AAKA,MAAA,SAAA,EAAA,GALA;AAMA,MAAA,SAAA,EAAA,EAAA,CAAA,EAAA,CAAA,OAAA,CANA;AAOA,MAAA,GAAA,EAAA,uCAPA;AAQA,MAAA,KAAA,EAAA,EAAA,CAAA,OAAA,CAAA,UAAA,CAAA,uCAAA;AARA,KAjCA;AAJA,GAAA;AAiDA,SAAA,OAAA;AACA;;AAEA,SAAA,iBAAA,CAAA,EAAA,EAAA;AACA,MAAA,OAAA,GAAA;AACA,IAAA,GAAA,EAAA,MADA;AAEA,IAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAFA;AAGA,IAAA,gBAAA,EAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAHA;AAIA,IAAA,KAAA,EAAA,CACA;AACA,MAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CADA;AAEA,MAAA,IAAA,EAAA,OAFA;AAGA,MAAA,QAAA,EAAA,IAHA;AAIA,MAAA,QAAA,EAAA,KAJA;AAKA,MAAA,MAAA,EAAA,KALA;AAMA,MAAA,WAAA,EAAA,EAAA,CAAA,EAAA,CAAA,WAAA,CANA;AAOA,MAAA,SAAA,EAAA,EAAA,CAAA,EAAA,CAAA,SAAA,CAPA;AAQA,MAAA,GAAA,EAAA,mCARA;AASA,MAAA,KAAA,EAAA,EAAA,CAAA,OAAA,CAAA,UAAA,CAAA,mCAAA;AATA,KADA,EAYA;AACA,MAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CADA;AAEA,MAAA,IAAA,EAAA,kBAFA;AAGA,MAAA,GAAA,EAAA,SAHA;AAIA,MAAA,aAAA,EAAA,KAJA;AAKA,MAAA,YAAA,EAAA,IALA;AAMA,MAAA,cAAA,EAAA,KANA;AAOA,MAAA,YAAA,EAAA,EAAA,CAAA,EAAA,CAAA,OAAA,CAPA;AAQA,MAAA,WAAA,EAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CARA;AASA,MAAA,aAAA,EAAA,EAAA,CAAA,EAAA,CAAA,QAAA,CATA;AAUA,MAAA,OAAA,EAAA,mBAAA;AACA,QAAA,WAAA,CAAA,EAAA,CAAA;AACA,OAZA;AAaA,MAAA,MAAA,EAAA,kBAAA;AACA,QAAA,UAAA,CAAA,EAAA,CAAA;AACA,OAfA;AAgBA,MAAA,QAAA,EAAA,oBAAA;AACA,QAAA,SAAA,CAAA,EAAA,EAAA,YAAA,CAAA;AACA;AAlBA,KAZA,EAgCA;AACA,MAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,iBAAA,CADA;AAEA,MAAA,IAAA,EAAA,UAFA;AAGA,MAAA,GAAA,EAAA,oCAHA;AAIA,MAAA,KAAA,EAAA,EAAA,CAAA,OAAA,CAAA,UAAA,CAAA,oCAAA;AAJA,KAhCA;AAJA,GAAA;AA4CA,SAAA,OAAA;AACA;;AACA,IAAA,YAAA,GAAA,CAAA;AACA,IAAA,MAAA,GAAA,KAAA;;AAEA,SAAA,WAAA,CAAA,EAAA,EAAA;AACA,MAAA,WAAA,GAAA;AACA,IAAA,MAAA,EAAA,kBADA;AAEA,IAAA,MAAA,EAAA,KAFA;AAGA,IAAA,UAAA,EAAA,EAAA,CAAA,cAHA;AAIA,IAAA,IAAA,EAAA;AACA,mBAAA;AADA;AAJA,GAAA;AAQA,EAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,WAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,IAAA,UAAA,CAAA,YAAA;AACA,MAAA,cAAA,CAAA,EAAA,CAAA;AACA,KAFA,EAEA,GAFA,CAAA;AAGA,GAJA;AAKA,EAAA,KAAA,CAAA,OAAA,CAAA;AACA,EAAA,eAAA,CAAA,EAAA,CAAA;AACA;;AAEA,SAAA,cAAA,CAAA,EAAA,EACA;AACA,EAAA,YAAA,GAAA,CAAA;AACA,EAAA,oBAAA,CAAA,EAAA,CAAA;AACA;;AAEA,SAAA,UAAA,CAAA,EAAA,EAAA;AACA,MAAA,WAAA,GAAA;AACA,IAAA,MAAA,EAAA,kBADA;AAEA,IAAA,MAAA,EAAA,KAFA;AAGA,IAAA,UAAA,EAAA,EAAA,CAAA,cAHA;AAIA,IAAA,IAAA,EAAA;AACA,kBAAA;AADA;AAJA,GAAA;AAQA,EAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,WAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,IAAA,OAAA,CAAA,EAAA,CAAA;AACA,IAAA,YAAA,GAAA,CAAA;AACA,GAHA;AAIA,EAAA,KAAA,CAAA,MAAA,CAAA;AACA,EAAA,cAAA,CAAA,EAAA,CAAA;AACA;;AAEA,SAAA,oBAAA,CAAA,EAAA,EACA;AACA,MAAA,KAAA,YAAA,EAAA;AACA,IAAA,OAAA,CAAA,EAAA,CAAA;AACA,IAAA,WAAA,CAAA,EAAA,CAAA;AACA;;AACA,MAAA,KAAA,YAAA,EAAA;AACA,IAAA,UAAA,CAAA,YAAA;AACA,MAAA,oBAAA,CAAA,EAAA,CAAA;AACA,KAFA,EAEA,MAFA,CAAA;AAGA;AACA;;AAEA,SAAA,WAAA,CAAA,EAAA,EAAA;AACA,EAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,EAAA,CAAA,SAAA,CAAA,KAAA,CAAA,SAAA,IAAA,YAAA,IAAA,CAAA,EACA;AACA,MAAA,YAAA,GAAA,CAAA;AACA,MAAA,cAAA,CAAA,EAAA,CAAA;AACA,UAAA,eAAA,GAAA,MAAA;AACA,UAAA,MAAA,GAAA,uBAAA,eAAA,GAAA,wBAAA;AACA,MAAA,KAAA,CAAA,MAAA,CAAA;AACA;AACA,GATA,EASA,IATA,CAAA;AAUA;;AAEA,SAAA,eAAA,CAAA,EAAA,EAAA;AACA,MAAA,IAAA,GAAA,YAAA,CACA,EAAA,CAAA,IADA,EAEA,MAFA,EAGA,SAHA,CAAA;AAKA,EAAA,IAAA,CAAA,aAAA,GAAA,IAAA;AACA,EAAA,IAAA,CAAA,YAAA,GAAA,KAAA;AACA,EAAA,IAAA,CAAA,cAAA,GAAA,IAAA;AACA;;AAEA,SAAA,cAAA,CAAA,EAAA,EAAA;AACA,MAAA,IAAA,GAAA,YAAA,CACA,EAAA,CAAA,IADA,EAEA,MAFA,EAGA,SAHA,CAAA;AAKA,EAAA,IAAA,CAAA,aAAA,GAAA,KAAA;AACA,EAAA,IAAA,CAAA,YAAA,GAAA,IAAA;AACA,EAAA,IAAA,CAAA,cAAA,GAAA,KAAA;AACA","sourcesContent":["<template>\n  <CommonPage :data=\"data\" @onDataChange=\"onCommonPageDataChange($event)\"></CommonPage>\n</template>\n\n<script>\nimport CommonPage from \"@/components/CommonPage.vue\";\nimport { \n  showRequestSuccess,\n  deepClone,\n  getIndexByKey,\n  getItemByKey,\n  isPort\n} from \"@/js/common.js\";\n\nexport default {\n  components: {\n    CommonPage,\n  },\n  data() {\n    return {\n      changedCfgData:{},\n      submitCfgData:{},\n      submitData:{},\n      apiData: {},\n      stateData:{},\n      data: {\n        getDataSuccess: false,\n      },\n    };\n  },\n  created() {\n    getData(this);\n  },\n  methods: {\n    onCommonPageDataChange: function (event) {\n      if(event.itemKey == \"Config.Settings.LOGLEVEL.Level\"){\n        this.changedCfgData[event.itemKey] = event.newVal;\n        changeSystemLogLevel(this);\n      }\n      else if(event.itemKey == \"Config.Settings.LOGLEVEL.RemoteSyslog\"){\n        this.changedCfgData[event.itemKey] = event.newVal;\n        changeSystemServerDisabled(this);\n      }\n      else{\n        this.changedCfgData[event.itemKey] = event.newVal;\n      }\n    },\n  },\n};\n\nfunction getData(vm) {\n  vm.$axios.get(\"api/upgradeDiagnosis/info\").then((response) => {\n    vm.getDataSuccess = true;\n    vm.apiData = response.data;\n    vm.stateData = response.data.data;\n    vm.changedCfgData = deepClone(response.data.configData);\n\n    createPageData(vm);\n    changeSystemServerDisabled(vm);\n\n    if(vm.stateData.State.PCAPState == 1){\n      setStartPCAPSts(vm);\n    } else{\n      setStopPCAPSts(vm);\n    }\n  });\n}\n\nfunction submitData(vm) {\n  vm.data.submitLoading = true;\n\n  let requestData = {\n    target: \"upgradeDiagnosis\",\n    action: \"set\",\n    configData: vm.submitCfgData,\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm);\n    vm.data.submitLoading = false;\n  });\n}\n\nfunction getCommitData(vm){\n  vm.submitCfgData = {};\n  for (var changedKey in vm.changedCfgData) {\n    if(vm.apiData.configData[changedKey] != vm.changedCfgData[changedKey]){\n      vm.submitCfgData[changedKey] = vm.changedCfgData[changedKey]\n    }\n  }\n}\n\nfunction changeSystemLogLevel(vm){\n  let requestData = {\n    target: \"upgradeDiagnosis\",\n    action: \"set\",\n    configData: {\n      \"Config.Settings.LOGLEVEL.Level\": vm.changedCfgData[\"Config.Settings.LOGLEVEL.Level\"],\n    },\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm,vm.$t(\"Success\"));\n  });\n}\n\nfunction changeSystemServerDisabled(vm){\n  let item = getItemByKey(\n    vm.data,\n    \"systemLog\",\n    \"Config.Settings.LOGLEVEL.RemoteServer\"\n  );\n  if(vm.changedCfgData[\"Config.Settings.LOGLEVEL.RemoteSyslog\"] == 0){\n    item.disabled = true;\n  } else{\n    item.disabled = false;\n  }\n}\n\nfunction onExport(vm, type) {\n  let requestData = {\n    target: \"upgradeDiagnosis\",\n    action: \"export\",\n    data: {\n      type: type,\n    },\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm, vm.$t(\"ExportSuccess\"));\n    let address = response.data.data.address;\n    window.open(address);\n  });\n}\n\nfunction checkCommitData(vm){\n  let success = true;\n  //SystemServer校验\n  if(vm.changedCfgData[\"Config.Settings.LOGLEVEL.RemoteSyslog\"] == 1 && vm.changedCfgData[\"Config.Settings.LOGLEVEL.RemoteServer\"] == \"\"){\n    let item = getItemByKey(\n      vm.data,\n      \"systemLog\",\n      \"Config.Settings.LOGLEVEL.RemoteServer\"\n    );\n    item.isWarn = true;\n    success = false;\n  }\n\n  //PCAP Specific Port校验\n  if(\"undefined\" != typeof(vm.submitCfgData[\"Config.Settings.PCAP.SpecificPort\"])){\n    if(vm.submitCfgData[\"Config.Settings.PCAP.SpecificPort\"].length != 0 && !isPort(vm.submitCfgData[\"Config.Settings.PCAP.SpecificPort\"])){\n      let item = getItemByKey(\n        vm.data,\n        \"pcap\",\n        \"Config.Settings.PCAP.SpecificPort\"\n      );\n      item.isWarn = true;\n      success = false;\n    }\n  }\n  return success;\n}\n\nfunction createPageData(vm) {\n  vm.data = {\n    getDataSuccess: true,\n    breadCrumb: {\n      firstTitle: vm.$t(\"Upgrade\"),\n      secondTitle: vm.$t(\"Diagnosis\"),\n    },\n    onSubmit: function () {\n      getCommitData(vm);\n      if (!checkCommitData(vm)) {\n        return;\n      }\n      submitData(vm);\n    },\n    onCancel: function () {\n      vm.data.cancelLoading = true;\n      getData(vm);\n    },\n    submitLoading: false,\n    cancelLoading: false,\n    contents: [],\n  };\n  vm.data.contents.push(createSystemLogContent(vm));\n  vm.data.contents.push(createPCAPContent(vm));\n}\n\nfunction createSystemLogContent(vm) {\n  let content = {\n    key: \"systemLog\",\n    title: vm.$t(\"SystemLog\"),\n    titleDescription: vm.$t(\"SystemLog\"),\n    items: [\n      {\n        title: vm.$t(\"LogLevel\"),\n        type: \"select\",\n        key: \"Config.Settings.LOGLEVEL.Level\",\n        value: vm.apiData.configData[\"Config.Settings.LOGLEVEL.Level\"],\n        selectItems: [\n          {\"key\": 0, \"label\": \"0\"},\n          {\"key\": 1, \"label\": \"1\"},\n          {\"key\": 2, \"label\": \"2\"},\n          {\"key\": 3, \"label\": \"3\"},\n          {\"key\": 4, \"label\": \"4\"},\n          {\"key\": 5, \"label\": \"5\"},\n          {\"key\": 6, \"label\": \"6\"},\n          {\"key\": 7, \"label\": \"7\"},\n        ],\n      },\n      {\n        title: vm.$t(\"ExportLog\"),\n        type: \"button\",\n        key: \"exportLog\",\n        onClick: function () {\n          onExport(vm,\"ExportLog\");\n        },\n        isShowPopover: true,\n        buttonName: vm.$t(\"Export\"),\n      },\n      {\n        title: vm.$t(\"RemoteSystemLog\"),\n        type: \"checkbox\",\n        key: \"Config.Settings.LOGLEVEL.RemoteSyslog\",\n        value: vm.apiData.configData[\"Config.Settings.LOGLEVEL.RemoteSyslog\"],\n      },\n      {\n        title: vm.$t(\"RemoteSystemServer\"),\n        type: \"input\",\n        disabled: false,\n        isWarn: false,\n        maxLength:127,\n        warnLabel: vm.$t(\"error\"),\n        key: \"Config.Settings.LOGLEVEL.RemoteServer\",\n        value: vm.apiData.configData[\"Config.Settings.LOGLEVEL.RemoteServer\"],\n      },\n    ],\n  };\n  return content;\n}\n\nfunction createPCAPContent(vm) {\n  let content = {\n    key: \"pcap\",\n    title: vm.$t(\"PCAP\"),\n    titleDescription: vm.$t(\"PCAP\"),\n    items: [\n      {\n        title: vm.$t(\"PCAPSpecificPort\"),\n        type: \"input\",\n        showHint:true,\n        disabled: false,\n        isWarn: false,\n        hintContent:vm.$t(\"(1~65535)\"),\n        warnLabel: vm.$t(\"1~65535\"),\n        key: \"Config.Settings.PCAP.SpecificPort\",\n        value: vm.apiData.configData[\"Config.Settings.PCAP.SpecificPort\"],\n      },\n      {\n        title: vm.$t(\"PCAP\"),\n        type: \"multilple-button\",\n        key: \"pcapLog\",\n        startDisabled: false,\n        stopDisabled: true,\n        exportDisabled: false,\n        startBtnName: vm.$t(\"Start\"),\n        stopBtnName: vm.$t(\"Stop\"),\n        exportBtnName: vm.$t(\"Export\"),\n        onStart: function(){\n          onStartPCAP(vm);\n        },\n        onStop: function(){\n          onStopPCAP(vm);\n        },\n        onExport: function(){\n          onExport(vm,\"ExportPCAP\");\n        },\n      },\n      {\n        title: vm.$t(\"PCAPAutoRefresh\"),\n        type: \"checkbox\",\n        key: \"Config.Settings.PCAP.RefreshEnable\",\n        value: vm.apiData.configData[\"Config.Settings.PCAP.RefreshEnable\"],\n      },\n    ],\n  };\n  return content;\n}\nvar PCAPStopType = 1;\nvar mSecs0 = 10000;\n\nfunction onStartPCAP(vm){\n  let requestData = {\n    target: \"upgradeDiagnosis\",\n    action: \"set\",\n    configData: vm.changedCfgData,\n    data: {\n      \"startPCAP\": \"1\",\n    },\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    setTimeout(()=>{\n      startPCAPCheck(vm);\n    },500);\n  });\n  alert(\"start\");\n  setStartPCAPSts(vm);\n}\n\nfunction startPCAPCheck(vm)\n{\n  PCAPStopType = 0;\n  intervCheckStsOfPCAP(vm);\t\n}\n\nfunction onStopPCAP(vm){\n  let requestData = {\n    target: \"upgradeDiagnosis\",\n    action: \"set\",\n    configData: vm.changedCfgData,\n    data: {\n      \"stopPCAP\": \"1\",\n    },\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    getData(vm);\n    PCAPStopType = 1;\n  });\n  alert(\"stop\");\n  setStopPCAPSts(vm);\n}\n\nfunction intervCheckStsOfPCAP(vm)\n{\n  if(1 != PCAPStopType){\n    getData(vm);\n    onStsOfPCAP(vm);\n  }\n  if(0 == PCAPStopType){\n    setTimeout(()=>{\n      intervCheckStsOfPCAP(vm);\n    },mSecs0);\n  }\n}\n\nfunction onStsOfPCAP(vm){\n  setTimeout(()=>{\n    if(0 == vm.stateData.State.PCAPState && PCAPStopType == 0)\n    {\n      PCAPStopType = 2;\n      setStopPCAPSts(vm);\n      var maxPCAPFileSize = \"50MB\";\n      var tmpStr = \"PCAP file is over \"+maxPCAPFileSize+\", PCAP will be stopped\";\n      alert(tmpStr);\n    }\n  },5000);\n}\n\nfunction setStartPCAPSts(vm){\n  let item = getItemByKey(\n    vm.data,\n    \"pcap\",\n    \"pcapLog\"\n  );\n  item.startDisabled = true;\n  item.stopDisabled = false;\n  item.exportDisabled = true;\n}\n\nfunction setStopPCAPSts(vm){\n  let item = getItemByKey(\n    vm.data,\n    \"pcap\",\n    \"pcapLog\"\n  );\n  item.startDisabled = false;\n  item.stopDisabled = true;\n  item.exportDisabled = false;\n}\n</script>"],"sourceRoot":"src/views"}]}