{"remainingRequest":"G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\babel-loader\\lib\\index.js!G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\src\\views\\UpgradeDiagnosis.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\src\\views\\UpgradeDiagnosis.vue","mtime":1625716298470},{"path":"G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624613261239},{"path":"G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\babel-loader\\lib\\index.js","mtime":1624613260275},{"path":"G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624613261239},{"path":"G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\vue-loader\\lib\\index.js","mtime":1624613274496}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UpgradeDiagnosis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <CommonPage :data=\"data\" @onDataChange=\"onCommonPageDataChange($event)\"></CommonPage>\r\n</template>\r\n\r\n<script>\r\nimport CommonPage from \"@/components/CommonPage.vue\";\r\nimport {\r\n  showRequestSuccess,\r\n  deepClone,\r\n  getIndexByKey,\r\n  getItemByKey,\r\n  isPort,\r\n  showErrorInfo,\r\n  checkShellRule,\r\n} from \"@/js/common.js\";\r\n\r\nexport default {\r\n  components: {\r\n    CommonPage,\r\n  },\r\n  data() {\r\n    return {\r\n      changedCfgData: {},\r\n      submitCfgData: {},\r\n      submitData: {},\r\n      apiData: {},\r\n      stateData: {},\r\n      data: {\r\n        getDataSuccess: false,\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    getData(this);\r\n  },\r\n  methods: {\r\n    onCommonPageDataChange: function (event) {\r\n      if (event.itemKey == \"Config.Settings.LOGLEVEL.Level\") {\r\n        this.changedCfgData[event.itemKey] = event.newVal;\r\n        changeSystemLogLevel(this);\r\n      } else if (event.itemKey == \"Config.Settings.LOGLEVEL.RemoteSyslog\") {\r\n        this.changedCfgData[event.itemKey] = event.newVal;\r\n        changeSystemServerDisabled(this);\r\n      } else {\r\n        this.changedCfgData[event.itemKey] = event.newVal;\r\n      }\r\n    },\r\n  },\r\n};\r\n\r\nfunction getData(vm) {\r\n  vm.$axios.get(\"api/upgradeDiagnosis/info\").then((response) => {\r\n    if(response.data.retcode == -1){\r\n      vm.data= {\r\n        showNoPermission: true,\r\n      };\r\n      return;\r\n    }\r\n    vm.getDataSuccess = true;\r\n    vm.apiData = response.data;\r\n    vm.stateData = response.data.data;\r\n    vm.changedCfgData = deepClone(response.data.configData);\r\n\r\n    createPageData(vm);\r\n    changeSystemServerDisabled(vm);\r\n\r\n    if (vm.stateData.State.PCAPState == 1) {\r\n      setStartPCAPSts(vm);\r\n    } else {\r\n      setStopPCAPSts(vm);\r\n    }\r\n  });\r\n}\r\n\r\nfunction submitData(vm) {\r\n  vm.data.submitLoading = true;\r\n\r\n  let requestData = {\r\n    target: \"upgradeDiagnosis\",\r\n    action: \"set\",\r\n    configData: vm.submitCfgData,\r\n  };\r\n  vm.$axios.post(\"api\", requestData).then((response) => {\r\n    if (response.data.retcode == -1) {\r\n      showErrorInfo(vm, vm.$t(\"RemoteServerError\"));\r\n    } else {\r\n      showRequestSuccess(vm);\r\n    }\r\n    vm.data.submitLoading = false;\r\n  });\r\n}\r\n\r\nfunction getCommitData(vm) {\r\n  vm.submitCfgData = {};\r\n  for (var changedKey in vm.changedCfgData) {\r\n    if (vm.apiData.configData[changedKey] != vm.changedCfgData[changedKey]) {\r\n      vm.submitCfgData[changedKey] = vm.changedCfgData[changedKey];\r\n    }\r\n  }\r\n}\r\n\r\nfunction changeSystemLogLevel(vm) {\r\n  let requestData = {\r\n    target: \"upgradeDiagnosis\",\r\n    action: \"set\",\r\n    configData: {\r\n      \"Config.Settings.LOGLEVEL.Level\":\r\n        vm.changedCfgData[\"Config.Settings.LOGLEVEL.Level\"],\r\n    },\r\n  };\r\n  vm.$axios.post(\"api\", requestData).then((response) => {\r\n    showRequestSuccess(vm, vm.$t(\"Success\"));\r\n  });\r\n}\r\n\r\nfunction changeSystemServerDisabled(vm) {\r\n  let item = getItemByKey(\r\n    vm.data,\r\n    \"systemLog\",\r\n    \"Config.Settings.LOGLEVEL.RemoteServer\"\r\n  );\r\n  if (vm.changedCfgData[\"Config.Settings.LOGLEVEL.RemoteSyslog\"] == 0) {\r\n    item.disabled = true;\r\n  } else {\r\n    item.disabled = false;\r\n  }\r\n}\r\n\r\nfunction onExport(vm, type) {\r\n  let requestData = {\r\n    target: \"upgradeDiagnosis\",\r\n    action: \"export\",\r\n    data: {\r\n      type: type,\r\n    },\r\n  };\r\n  vm.$axios.post(\"api\", requestData).then((response) => {\r\n    showRequestSuccess(vm, vm.$t(\"ExportSuccess\"));\r\n    let address = response.data.data.address;\r\n    window.open(address);\r\n  });\r\n}\r\n\r\nfunction checkCommitData(vm) {\r\n  let success = true;\r\n  //SystemServer校验\r\n  if (\r\n    vm.changedCfgData[\"Config.Settings.LOGLEVEL.RemoteSyslog\"] == 1 &&\r\n    (vm.changedCfgData[\"Config.Settings.LOGLEVEL.RemoteServer\"] == \"\" ||\r\n      !checkShellRule(\r\n        vm.changedCfgData[\"Config.Settings.LOGLEVEL.RemoteServer\"]\r\n      ))\r\n  ) {\r\n    let item = getItemByKey(\r\n      vm.data,\r\n      \"systemLog\",\r\n      \"Config.Settings.LOGLEVEL.RemoteServer\"\r\n    );\r\n    item.isWarn = true;\r\n    success = false;\r\n  }\r\n\r\n  //PCAP Specific Port校验\r\n  if (\r\n    \"undefined\" != typeof vm.submitCfgData[\"Config.Settings.PCAP.SpecificPort\"]\r\n  ) {\r\n    if (\r\n      vm.submitCfgData[\"Config.Settings.PCAP.SpecificPort\"].length != 0 &&\r\n      !isPort(vm.submitCfgData[\"Config.Settings.PCAP.SpecificPort\"])\r\n    ) {\r\n      let item = getItemByKey(\r\n        vm.data,\r\n        \"pcap\",\r\n        \"Config.Settings.PCAP.SpecificPort\"\r\n      );\r\n      item.isWarn = true;\r\n      success = false;\r\n    }\r\n  }\r\n  return success;\r\n}\r\n\r\nfunction createPageData(vm) {\r\n  vm.data = {\r\n    getDataSuccess: true,\r\n    breadCrumb: {\r\n      firstTitle: vm.$t(\"Upgrade\"),\r\n      secondTitle: vm.$t(\"Diagnosis\"),\r\n    },\r\n    onSubmit: function () {\r\n      getCommitData(vm);\r\n      if (!checkCommitData(vm)) {\r\n        return;\r\n      }\r\n      submitData(vm);\r\n    },\r\n    onCancel: function () {\r\n      vm.data.cancelLoading = true;\r\n      getData(vm);\r\n    },\r\n    submitLoading: false,\r\n    cancelLoading: false,\r\n    contents: [],\r\n  };\r\n  vm.data.contents.push(createSystemLogContent(vm));\r\n  vm.data.contents.push(createPCAPContent(vm));\r\n}\r\n\r\nfunction createSystemLogContent(vm) {\r\n  let content = {\r\n    key: \"systemLog\",\r\n    title: vm.$t(\"SystemLog\"),\r\n    titleDescription: vm.$t(\"SystemLogDesc\"),\r\n    items: [\r\n      {\r\n        title: vm.$t(\"LogLevel\"),\r\n        type: \"select\",\r\n        key: \"Config.Settings.LOGLEVEL.Level\",\r\n        value: vm.apiData.configData[\"Config.Settings.LOGLEVEL.Level\"],\r\n        selectItems: [\r\n          { key: 0, label: \"0\" },\r\n          { key: 1, label: \"1\" },\r\n          { key: 2, label: \"2\" },\r\n          { key: 3, label: \"3\" },\r\n          { key: 4, label: \"4\" },\r\n          { key: 5, label: \"5\" },\r\n          { key: 6, label: \"6\" },\r\n          { key: 7, label: \"7\" },\r\n        ],\r\n        description: vm.$t(\"LogLevelDesc\"),\r\n      },\r\n      {\r\n        title: vm.$t(\"ExportLog\"),\r\n        type: \"button\",\r\n        key: \"exportLog\",\r\n        onClick: function () {\r\n          onExport(vm, \"ExportLog\");\r\n        },\r\n        isShowPopover: true,\r\n        buttonName: vm.$t(\"Export\"),\r\n        buttonIcon: \"iconexport\",\r\n        description: vm.$t(\"ExportLogDesc\"),\r\n      },\r\n      {\r\n        title: vm.$t(\"RemoteSystemLog\"),\r\n        type: \"checkbox\",\r\n        key: \"Config.Settings.LOGLEVEL.RemoteSyslog\",\r\n        value: vm.apiData.configData[\"Config.Settings.LOGLEVEL.RemoteSyslog\"],\r\n        description: vm.$t(\"RemoteLogEnabled\"),\r\n      },\r\n      {\r\n        title: vm.$t(\"RemoteSystemServer\"),\r\n        type: \"input\",\r\n        disabled: false,\r\n        isWarn: false,\r\n        maxLength: 127,\r\n        warnLabel: vm.$t(\"PleaseCheckSubmitData\"),\r\n        key: \"Config.Settings.LOGLEVEL.RemoteServer\",\r\n        value: vm.apiData.configData[\"Config.Settings.LOGLEVEL.RemoteServer\"],\r\n        description: vm.$t(\"RemoteSystemServerDesc\"),\r\n      },\r\n    ],\r\n  };\r\n  return content;\r\n}\r\n\r\nfunction createPCAPContent(vm) {\r\n  let content = {\r\n    key: \"pcap\",\r\n    title: vm.$t(\"PCAP\"),\r\n    titleDescription: vm.$t(\"PCAPDesc\"),\r\n    items: [\r\n      {\r\n        title: vm.$t(\"PCAPSpecificPort\"),\r\n        type: \"input\",\r\n        showHint: true,\r\n        disabled: false,\r\n        isWarn: false,\r\n        hintContent: vm.$t(\"(1~65535)\"),\r\n        warnLabel: vm.$t(\"PCAPPortRangeError\"),\r\n        key: \"Config.Settings.PCAP.SpecificPort\",\r\n        value: vm.apiData.configData[\"Config.Settings.PCAP.SpecificPort\"],\r\n        description: vm.$t(\"PCAPSpecificPortDesc\"),\r\n      },\r\n      {\r\n        title: vm.$t(\"PCAP\"),\r\n        type: \"multilple-button\",\r\n        key: \"pcapLog\",\r\n        startDisabled: false,\r\n        stopDisabled: true,\r\n        exportDisabled: false,\r\n        startBtnName: vm.$t(\"StartLabel\"),\r\n        stopBtnName: vm.$t(\"StopLabel\"),\r\n        exportBtnName: vm.$t(\"Export\"),\r\n        onStart: function () {\r\n          onStartPCAP(vm);\r\n        },\r\n        onStop: function () {\r\n          onStopPCAP(vm);\r\n        },\r\n        onExport: function () {\r\n          onExport(vm, \"ExportPCAP\");\r\n        },\r\n        description: vm.$t(\"PCAPDesc\"),\r\n      },\r\n      {\r\n        title: vm.$t(\"PCAPAutoRefresh\"),\r\n        type: \"checkbox\",\r\n        key: \"Config.Settings.PCAP.RefreshEnable\",\r\n        value: vm.apiData.configData[\"Config.Settings.PCAP.RefreshEnable\"],\r\n        description: vm.$t(\"PCAPAutoRefreshDesc\"),\r\n      },\r\n    ],\r\n  };\r\n  return content;\r\n}\r\nvar PCAPStopType = 1;\r\nvar mSecs0 = 10000;\r\n\r\nfunction onStartPCAP(vm) {\r\n  let requestData = {\r\n    target: \"upgradeDiagnosis\",\r\n    action: \"pcap\",\r\n    configData: vm.changedCfgData,\r\n    data: {\r\n      startPCAP: \"1\",\r\n    },\r\n  };\r\n  vm.$axios.post(\"api\", requestData).then((response) => {\r\n    setTimeout(() => {\r\n      startPCAPCheck(vm);\r\n    }, 500);\r\n  });\r\n  alert(\"start\");\r\n  setStartPCAPSts(vm);\r\n}\r\n\r\nfunction startPCAPCheck(vm) {\r\n  PCAPStopType = 0;\r\n  intervCheckStsOfPCAP(vm);\r\n}\r\n\r\nfunction onStopPCAP(vm) {\r\n  let requestData = {\r\n    target: \"upgradeDiagnosis\",\r\n    action: \"pcap\",\r\n    configData: vm.changedCfgData,\r\n    data: {\r\n      stopPCAP: \"1\",\r\n    },\r\n  };\r\n  vm.$axios.post(\"api\", requestData).then((response) => {\r\n    getData(vm);\r\n    PCAPStopType = 1;\r\n  });\r\n  alert(\"stop\");\r\n  setStopPCAPSts(vm);\r\n}\r\n\r\nfunction intervCheckStsOfPCAP(vm) {\r\n  if (1 != PCAPStopType) {\r\n    getData(vm);\r\n    onStsOfPCAP(vm);\r\n  }\r\n  if (0 == PCAPStopType) {\r\n    setTimeout(() => {\r\n      intervCheckStsOfPCAP(vm);\r\n    }, mSecs0);\r\n  }\r\n}\r\n\r\nfunction onStsOfPCAP(vm) {\r\n  setTimeout(() => {\r\n    if (0 == vm.stateData.State.PCAPState && PCAPStopType == 0) {\r\n      PCAPStopType = 2;\r\n      setStopPCAPSts(vm);\r\n      var maxPCAPFileSize = \"50MB\";\r\n      var tmpStr =\r\n        \"PCAP file is over \" + maxPCAPFileSize + \", PCAP will be stopped\";\r\n      alert(tmpStr);\r\n    }\r\n  }, 5000);\r\n}\r\n\r\nfunction setStartPCAPSts(vm) {\r\n  let item = getItemByKey(vm.data, \"pcap\", \"pcapLog\");\r\n  item.startDisabled = true;\r\n  item.stopDisabled = false;\r\n  item.exportDisabled = true;\r\n}\r\n\r\nfunction setStopPCAPSts(vm) {\r\n  let item = getItemByKey(vm.data, \"pcap\", \"pcapLog\");\r\n  item.startDisabled = false;\r\n  item.stopDisabled = true;\r\n  item.exportDisabled = false;\r\n}\r\n</script>"],"sourceRoot":"src/views"}]}