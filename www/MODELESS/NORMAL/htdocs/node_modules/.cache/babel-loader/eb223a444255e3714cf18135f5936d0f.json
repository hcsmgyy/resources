{"remainingRequest":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/ContactsLocalContacts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/ContactsLocalContacts.vue","mtime":1600155105014},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js","mtime":1600155105338},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js","mtime":1600155105414}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ContactsLocalContacts.vue"],"names":[],"mappings":";;;;;AAKA,OAAA,UAAA,MAAA,6BAAA;AACA,SACA,kBADA,EAEA,SAFA,EAGA,YAHA,EAIA,aAJA,EAKA,oBALA,QAMA,gBANA;AAQA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,cAAA,EAAA,EAFA;AAGA,MAAA,aAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA,EAJA;AAKA,MAAA,IAAA,EAAA;AACA,QAAA,cAAA,EAAA;AADA,OALA;AAQA,MAAA,kBAAA,EAAA;AARA,KAAA;AAUA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AACA,IAAA,OAAA,CAAA,IAAA,CAAA;AACA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,sBAAA,EAAA,gCAAA,KAAA,EAAA;AACA,MAAA,cAAA,CAAA,IAAA,EAAA,KAAA,CAAA;AACA;AAHA;AAnBA,CAAA;;AA0BA,SAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AACA,MACA,KAAA,CAAA,UAAA,IAAA,cAAA,IACA,KAAA,CAAA,OAAA,IAAA,mBAFA,EAGA;AACA,IAAA,oBAAA,CAAA,EAAA,EAAA,CAAA,CAAA;AACA;AACA;;AAEA,SAAA,UAAA,CAAA,EAAA,EAAA;AACA,EAAA,EAAA,CAAA,IAAA,CAAA,aAAA,GAAA,IAAA;AAEA,MAAA,WAAA,GAAA;AACA,IAAA,MAAA,EAAA,mBADA;AAEA,IAAA,MAAA,EAAA,KAFA;AAGA,IAAA,UAAA,EAAA,EAAA,CAAA;AAHA,GAAA;AAKA,EAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,WAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,IAAA,kBAAA,CAAA,EAAA,CAAA;AACA,IAAA,EAAA,CAAA,IAAA,CAAA,aAAA,GAAA,KAAA;AACA,GAHA;AAIA;;AAEA,SAAA,OAAA,CAAA,EAAA,EAAA;AACA,EAAA,EAAA,CAAA,MAAA,CAAA,GAAA,CAAA,4BAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,IAAA,EAAA,CAAA,cAAA,GAAA,IAAA;AACA,IAAA,EAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA;AACA,IAAA,EAAA,CAAA,cAAA,GAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AACA,IAAA,cAAA,CAAA,EAAA,CAAA;AACA,GALA;AAMA;;AAEA,SAAA,aAAA,CAAA,EAAA,EAAA;AACA,EAAA,EAAA,CAAA,aAAA,GAAA,EAAA;;AACA,OAAA,IAAA,UAAA,IAAA,EAAA,CAAA,cAAA,EAAA;AACA,QAAA,EAAA,CAAA,OAAA,CAAA,UAAA,CAAA,UAAA,KAAA,EAAA,CAAA,cAAA,CAAA,UAAA,CAAA,EAAA;AACA,MAAA,EAAA,CAAA,aAAA,CAAA,UAAA,IAAA,EAAA,CAAA,cAAA,CAAA,UAAA,CAAA;AACA;AACA;AACA;;AAEA,SAAA,cAAA,CAAA,EAAA,EAAA;AACA,EAAA,EAAA,CAAA,IAAA,GAAA;AACA,IAAA,cAAA,EAAA,IADA;AAEA,IAAA,UAAA,EAAA;AACA,MAAA,UAAA,EAAA,EAAA,CAAA,EAAA,CAAA,UAAA,CADA;AAEA,MAAA,WAAA,EAAA,EAAA,CAAA,EAAA,CAAA,eAAA;AAFA,KAFA;AAMA,IAAA,QAAA,EAAA,oBAAA;AACA,MAAA,aAAA,CAAA,EAAA,CAAA;AACA,MAAA,UAAA,CAAA,EAAA,CAAA;AACA,KATA;AAUA,IAAA,QAAA,EAAA,oBAAA;AACA,MAAA,EAAA,CAAA,IAAA,CAAA,aAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,EAAA,CAAA;AACA,KAbA;AAcA,IAAA,aAAA,EAAA,KAdA;AAeA,IAAA,aAAA,EAAA,KAfA;AAgBA,IAAA,QAAA,EAAA;AAhBA,GAAA;AAmBA,EAAA,EAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,wBAAA,CAAA,EAAA,CAAA;AACA,EAAA,EAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,uBAAA,CAAA,EAAA,CAAA;AACA,EAAA,oBAAA,CAAA,EAAA,EAAA,CAAA,CAAA;AACA;;AAEA,SAAA,uBAAA,CAAA,EAAA,EAAA;AACA,MAAA,YAAA,GAAA,CAAA;AAAA,IAAA,GAAA,EAAA,CAAA;AAAA,IAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,MAAA;AAAA,GAAA,CAAA;;AACA,OAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,IAAA,GAAA;AACA,MAAA,GAAA,EAAA,EAAA,CAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA,EAAA,KADA;AAEA,MAAA,KAAA,EACA,EAAA,CAAA,EAAA,CAAA,MAAA,IACA,EAAA,CAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA,EAAA,KADA,GAEA,IAFA,GAGA,EAAA,CAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA,EAAA;AANA,KAAA;AAQA,IAAA,YAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AAEA,MAAA,OAAA,GAAA;AACA,IAAA,GAAA,EAAA,YADA;AAEA,IAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,YAAA,CAFA;AAGA,IAAA,gBAAA,EAAA,EAAA,CAAA,EAAA,CAAA,YAAA,CAHA;AAIA,IAAA,KAAA,EAAA,CACA;AACA,MAAA,IAAA,EAAA,WADA;AAEA,MAAA,GAAA,EAAA,WAFA;AAGA;AACA,MAAA,WAAA,EAAA;AAJA,KADA;AAJA,GAAA;AAaA,SAAA,OAAA;AACA;;AAEA,SAAA,wBAAA,CAAA,EAAA,EAAA;AACA;AACA,MAAA,YAAA,GAAA;AACA,IAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,YAAA,IAAA,KADA;AAEA,IAAA,GAAA,EAAA,CAAA,CAFA;AAGA,IAAA,cAAA,EAAA,EAAA,CAAA,EAAA,CAAA,QAAA,CAHA;AAIA,IAAA,cAAA,EAAA,EAAA,CAAA,EAAA,CAAA,QAAA,CAJA;AAKA,IAAA,OAAA,EAAA,KALA;AAMA,IAAA,UAAA,EAAA,IANA;AAOA,IAAA,KAAA,EAAA,CACA;AACA,MAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CADA;AAEA,MAAA,IAAA,EAAA,OAFA;AAGA,MAAA,GAAA,EAAA,MAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,MAAA,EAAA,KALA;AAMA,MAAA,SAAA,EAAA,EAAA,CAAA,EAAA,CAAA,kBAAA;AANA,KADA,EASA;AACA,MAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,QAAA,CADA;AAEA,MAAA,IAAA,EAAA,OAFA;AAGA,MAAA,GAAA,EAAA,QAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,MAAA,EAAA,KALA;AAMA,MAAA,SAAA,EAAA,EAAA,CAAA,EAAA,CAAA,uBAAA;AANA,KATA,EAiBA;AACA,MAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,OAAA,CADA;AAEA,MAAA,IAAA,EAAA,QAFA;AAGA,MAAA,GAAA,EAAA,OAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,YAAA,EAAA,CALA;AAMA,MAAA,WAAA,EAAA,CACA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,SAAA;AAAA,OADA,EAEA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,WAAA;AAAA,OAFA;AANA,KAjBA,EA4BA;AACA,MAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,aAAA,CADA;AAEA,MAAA,IAAA,EAAA,QAFA;AAGA,MAAA,GAAA,EAAA,SAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,YAAA,EAAA,CALA;AAMA,MAAA,WAAA,EAAA,CACA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,SAAA,IAAA;AAAA,OADA,EAEA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,SAAA,IAAA;AAAA,OAFA;AANA,KA5BA,CAPA;AA+CA,IAAA,SAAA,EAAA,qBAAA;AACA,MAAA,eAAA,CAAA,EAAA,CAAA;AACA;AAjDA,GAAA,CAFA,CAsDA;;AACA,MAAA,eAAA,GAAA;AACA,IAAA,KAAA,EAAA,GADA;AAEA,IAAA,cAAA,EAAA,EAAA,CAAA,EAAA,CAAA,QAAA,CAFA;AAGA,IAAA,cAAA,EAAA,EAAA,CAAA,EAAA,CAAA,QAAA,CAHA;AAIA,IAAA,UAAA,EAAA,IAJA;AAKA,IAAA,OAAA,EAAA,KALA;AAMA,IAAA,KAAA,EAAA,CACA;AACA,MAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,WAAA,IAAA,cADA;AAEA,MAAA,IAAA,EAAA,YAFA;AAGA,MAAA,GAAA,EAAA,QAHA;AAIA,MAAA,cAAA,EAAA,WAJA;AAKA,MAAA,OAAA,EAAA,KALA;AAMA,MAAA,KAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,EAAA,CAAA,EAAA,CAAA,iBAAA;AAFA,OANA;AAUA,MAAA,aAAA,EAAA,EAAA,CAAA,EAAA,CAAA,OAAA;AAVA,KADA,CANA;AAoBA,IAAA,SAAA,EAAA,qBAAA;AACA,MAAA,QAAA,CAAA,EAAA,CAAA;AACA,KAtBA;AAuBA,IAAA,cAAA,EAAA;AAvBA,GAAA,CAvDA,CAgFA;;AACA,MAAA,aAAA,GAAA;AACA,IAAA,YAAA,EAAA,YADA;AAEA,IAAA,eAAA,EAAA,eAFA;AAGA,IAAA,WAAA,EAAA,CACA;AAAA,MAAA,GAAA,EAAA,KAAA;AAAA,MAAA,KAAA,EAAA;AAAA,KADA,EAEA;AAAA,MAAA,GAAA,EAAA,KAAA;AAAA,MAAA,KAAA,EAAA;AAAA,KAFA,CAHA;AAOA,IAAA,QAAA,EAAA,kBAAA,IAAA,EAAA;AACA,MAAA,SAAA,CAAA,EAAA,EAAA,IAAA,CAAA;AACA;AATA,GAAA,CAjFA,CA4FA;;AACA,MAAA,eAAA,GAAA;AACA,IAAA,QAAA,EAAA,oBAAA;AACA,MAAA,eAAA,CAAA,EAAA,EAAA,QAAA,CAAA;AACA,KAHA;AAIA,IAAA,WAAA,EAAA,uBAAA;AACA,MAAA,eAAA,CAAA,EAAA,EAAA,KAAA,CAAA;AACA,KANA;AAOA,IAAA,YAAA,EAAA,sBAAA,IAAA,EAAA;AACA,MAAA,oBAAA,CAAA,EAAA,EAAA,IAAA,CAAA;AACA,KATA;AAUA,IAAA,GAAA,EAAA,CAVA;AAWA,IAAA,UAAA,EAAA,CAXA;AAYA,IAAA,OAAA,EAAA,CAZA;AAaA,IAAA,cAAA,EAAA,IAbA;AAcA,IAAA,iBAAA,EAAA;AAdA,GAAA,CA7FA,CA6GA;;AACA,MAAA,OAAA,GAAA;AACA,IAAA,GAAA,EAAA,cADA;AAEA,IAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,qBAAA,CAFA;AAGA,IAAA,gBAAA,EAAA,EAAA,CAAA,EAAA,CAAA,qBAAA,CAHA;AAIA,IAAA,KAAA,EAAA,CACA;AACA,MAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,cAAA,CADA;AAEA,MAAA,IAAA,EAAA,QAFA;AAGA,MAAA,GAAA,EAAA,mBAHA;AAIA,MAAA,KAAA,EAAA,aAJA;AAKA,MAAA,WAAA,EAAA,CACA;AAAA,QAAA,GAAA,EAAA,aAAA;AAAA,QAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,aAAA;AAAA,OADA,EAEA;AAAA,QAAA,GAAA,EAAA,WAAA;AAAA,QAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,WAAA;AAAA,OAFA;AALA,KADA,EAWA;AACA,MAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,QAAA,CADA;AAEA,MAAA,IAAA,EAAA,OAFA;AAGA,MAAA,GAAA,EAAA,QAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,OAAA,EAAA,IALA;AAMA,MAAA,MAAA,EAAA,KANA;AAOA,MAAA,SAAA,EAAA,EAAA,CAAA,EAAA,CAAA,iBAAA,CAPA;AAQA,MAAA,QAAA,EAAA,kBAAA,KAAA,EAAA;AACA,QAAA,eAAA,CAAA,EAAA,EAAA,KAAA,CAAA;AACA,OAVA;AAWA,MAAA,OAAA,EAAA,mBAAA;AACA,QAAA,oBAAA,CAAA,EAAA,CAAA;AACA;AAbA,KAXA,EA0BA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,GAAA,EAAA,kBAFA;AAGA,MAAA,QAAA,EAAA,IAHA;AAIA,MAAA,UAAA,EAAA,IAJA;AAKA,MAAA,gBAAA,EAAA,IALA;AAMA,MAAA,eAAA,EAAA,EANA;AAOA,MAAA,aAAA,EAAA,aAPA;AAQA,MAAA,eAAA,EAAA,eARA;AASA,MAAA,SAAA,EAAA,EATA;AAUA,MAAA,YAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,OAAA,CAFA;AAGA,QAAA,SAAA,EAAA,OAHA;AAIA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA,SAJA;AAKA,QAAA,KAAA,EAAA,QALA;AAMA,QAAA,KAAA,EAAA;AANA,OADA,EASA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAFA;AAGA,QAAA,SAAA,EAAA,MAHA;AAIA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA,SAJA;AAKA,QAAA,KAAA,EAAA,QALA;AAMA,QAAA,KAAA,EAAA;AANA,OATA,EAiBA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,QAAA,CAFA;AAGA,QAAA,SAAA,EAAA,QAHA;AAIA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA,SAJA;AAKA,QAAA,KAAA,EAAA,QALA;AAMA,QAAA,KAAA,EAAA;AANA,OAjBA,EAyBA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,OAAA,CAFA;AAGA,QAAA,SAAA,EAAA,OAHA;AAIA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA,SAJA;AAKA,QAAA,KAAA,EAAA,QALA;AAMA,QAAA,KAAA,EAAA;AANA,OAzBA,EAiCA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,SAAA,CAFA;AAGA,QAAA,SAAA,EAAA,SAHA;AAIA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA,SAJA;AAKA,QAAA,KAAA,EAAA,QALA;AAMA,QAAA,KAAA,EAAA;AANA,OAjCA,EAyCA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,WAAA,CAFA;AAGA,QAAA,SAAA,EAAA,MAHA;AAIA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA,SAJA;AAKA,QAAA,KAAA,EAAA,QALA;AAMA,QAAA,KAAA,EAAA,KANA;AAOA,QAAA,MAAA,EAAA,gBAAA,KAAA,EAAA,GAAA,EAAA;AACA,UAAA,cAAA,CAAA,KAAA,EAAA,GAAA,EAAA,EAAA,CAAA;AACA;AATA,OAzCA;AAVA,KA1BA;AAJA,GAAA;AAgGA,SAAA,OAAA;AACA;;AAEA,SAAA,oBAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AACA,MAAA,KAAA,GAAA,YAAA,CAAA,EAAA,CAAA,IAAA,EAAA,cAAA,EAAA,mBAAA,CAAA,CAAA,KAAA;AACA,EAAA,EAAA,CAAA,MAAA,CACA,GADA,CAEA,oCACA,IADA,GAEA,SAFA,GAGA,KAHA,GAIA,UAJA,GAKA,EAAA,CAAA,WAPA,EASA,IATA,CASA,UAAA,QAAA,EAAA;AACA,QAAA,SAAA,GAAA,EAAA;AACA,QAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,IAAA,EAAA,CAAA,kBAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,WAAA;;AACA,SAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,WAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,IAAA,GAAA;AACA,QAAA,GAAA,EAAA,IAAA,CAAA,WAAA,CAAA,CAAA,EAAA,EADA;AAEA,QAAA,KAAA,EAAA,CAAA,GAAA,CAFA;AAGA,QAAA,IAAA,EAAA,IAAA,CAAA,WAAA,CAAA,CAAA,EAAA,IAHA;AAIA,QAAA,MAAA,EAAA,IAAA,CAAA,WAAA,CAAA,CAAA,EAAA,MAJA;AAKA,QAAA,KAAA,EACA,IAAA,CAAA,WAAA,CAAA,CAAA,EAAA,KAAA,IAAA,EAAA,GACA,EAAA,CAAA,EAAA,CAAA,SAAA,CADA,GAEA,IAAA,CAAA,WAAA,CAAA,CAAA,EAAA,KAAA,IAAA,WAAA,GACA,EAAA,CAAA,EAAA,CAAA,WAAA,CADA,GAEA,IAAA,CAAA,WAAA,CAAA,CAAA,EAAA,KAVA;AAWA,QAAA,OAAA,EAAA,EAAA,CAAA,EAAA,CAAA,SAAA,KAAA,IAAA,CAAA,WAAA,CAAA,CAAA,EAAA,OAAA,GAAA,CAAA,CAXA;AAYA,QAAA,IAAA,EAAA;AAZA,OAAA;AAcA,MAAA,SAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA,IAAA,YAAA,CACA,EAAA,CAAA,IADA,EAEA,cAFA,EAGA,kBAHA,CAAA,CAIA,SAJA,GAIA,SAJA;AAKA,IAAA,YAAA,CACA,EAAA,CAAA,IADA,EAEA,cAFA,EAGA,kBAHA,CAAA,CAIA,eAJA,CAIA,GAJA,GAIA,IAAA,CAAA,GAJA;AAKA,IAAA,YAAA,CACA,EAAA,CAAA,IADA,EAEA,cAFA,EAGA,kBAHA,CAAA,CAIA,eAJA,CAIA,UAJA,GAIA,IAAA,CAAA,OAJA;AAKA,IAAA,YAAA,CACA,EAAA,CAAA,IADA,EAEA,cAFA,EAGA,kBAHA,CAAA,CAIA,eAJA,CAIA,OAJA,GAIA,IAJA;AAKA,IAAA,YAAA,CACA,EAAA,CAAA,IADA,EAEA,cAFA,EAGA,kBAHA,CAAA,CAIA,eAJA,GAIA,EAJA;AAKA,GAvDA;AAwDA;;AAEA,SAAA,eAAA,CAAA,EAAA,EAAA;AACA,MAAA,YAAA,GAAA,YAAA,CAAA,EAAA,CAAA,IAAA,EAAA,cAAA,EAAA,kBAAA,CAAA,CACA,aADA,CACA,YADA;AAEA,MAAA,IAAA,GAAA,YAAA,CAAA,KAAA,CAAA,aAAA,CAAA,YAAA,CAAA,KAAA,EAAA,MAAA,CAAA,CAAA;AACA,MAAA,MAAA,GAAA,YAAA,CAAA,KAAA,CAAA,aAAA,CAAA,YAAA,CAAA,KAAA,EAAA,QAAA,CAAA,CAAA;AACA,MAAA,KAAA,GAAA,YAAA,CAAA,KAAA,CAAA,aAAA,CAAA,YAAA,CAAA,KAAA,EAAA,OAAA,CAAA,CAAA;AACA,MAAA,OAAA,GACA,YAAA,CAAA,KAAA,CAAA,aAAA,CAAA,YAAA,CAAA,KAAA,EAAA,SAAA,CAAA,CADA;AAEA,MAAA,EAAA,GAAA,YAAA,CAAA,GAAA;AAEA,MAAA,OAAA,GAAA,KAAA;;AACA,MAAA,IAAA,CAAA,KAAA,IAAA,EAAA,EAAA;AACA,IAAA,IAAA,CAAA,MAAA,GAAA,IAAA;AACA,IAAA,IAAA,CAAA,SAAA,GAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA;AACA,IAAA,OAAA,GAAA,IAAA;AACA;;AACA,MAAA,CAAA,oBAAA,CAAA,MAAA,CAAA,KAAA,CAAA,EAAA;AACA,IAAA,MAAA,CAAA,MAAA,GAAA,IAAA;AACA,IAAA,OAAA,GAAA,IAAA;AACA;;AAEA,MAAA,OAAA,EAAA;AACA;AACA;;AAEA,MAAA,QAAA,GAAA,CAAA;;AACA,MAAA,EAAA,IAAA,CAAA,EAAA;AACA,SAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,EAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA;AACA,QAAA,QAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,KAAA,IAAA,WAAA,GAAA,CAAA,GAAA,CAAA;AACA;AACA;AACA;;AAEA,MAAA,IAAA,GAAA;AACA,IAAA,IAAA,EAAA,IAAA,CAAA,KADA;AAEA,IAAA,MAAA,EAAA,MAAA,CAAA,KAFA;AAGA,IAAA,KAAA,EAAA,KAAA,CAAA,KAHA;AAIA,IAAA,QAAA,EAAA,QAJA;AAKA,IAAA,OAAA,EAAA,OAAA,CAAA,KALA;AAMA,IAAA,EAAA,EAAA;AANA,GAAA;AAQA,MAAA,MAAA,GAAA,EAAA,IAAA,CAAA,GAAA,MAAA,GAAA,KAAA;AAEA,MAAA,WAAA,GAAA;AACA,IAAA,MAAA,EAAA,mBADA;AAEA,IAAA,MAAA,EAAA,MAFA;AAGA,IAAA,IAAA,EAAA;AAHA,GAAA;AAKA,EAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,WAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,GAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;;AACA,QAAA,GAAA,IAAA,CAAA,EAAA;AACA,MAAA,IAAA,CAAA,KAAA,GAAA,EAAA;AACA,MAAA,MAAA,CAAA,KAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,KAAA,GAAA,CAAA;AACA,MAAA,OAAA,CAAA,KAAA,GAAA,CAAA;AACA,UAAA,IAAA,GAAA,CAAA;AACA,UAAA,SAAA,GAAA,YAAA,CAAA,EAAA,CAAA,IAAA,EAAA,cAAA,EAAA,kBAAA,CAAA;;AACA,UAAA,MAAA,IAAA,KAAA,EAAA;AACA;AACA,QAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CACA,CAAA,SAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,IACA,SAAA,CAAA,eAAA,CAAA,UAFA,CAAA;AAIA,OANA,MAMA;AACA,QAAA,IAAA,GAAA,SAAA,CAAA,eAAA,CAAA,OAAA;AACA;;AACA,MAAA,oBAAA,CAAA,EAAA,EAAA,IAAA,CAAA,CAhBA,CAiBA;;AACA,MAAA,YAAA,CAAA,OAAA,GAAA,KAAA;AACA,MAAA,kBAAA,CAAA,EAAA,CAAA;AACA,KApBA,MAoBA,IAAA,GAAA,IAAA,CAAA,EAAA;AACA,MAAA,IAAA,CAAA,MAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,SAAA,GAAA,EAAA,CAAA,EAAA,CAAA,iBAAA,CAAA;AACA,KAHA,MAGA,IAAA,GAAA,IAAA,EAAA,EAAA;AACA,MAAA,aAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,wBAAA,CAAA,CAAA;AACA,KAFA,MAEA,IAAA,GAAA,IAAA,EAAA,EAAA;AACA,MAAA,aAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAA;AACA;AACA,GA9BA;AA+BA;;AAEA,SAAA,cAAA,CAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA;AACA,MAAA,SAAA,GAAA,YAAA,CAAA,EAAA,CAAA,IAAA,EAAA,cAAA,EAAA,kBAAA,CAAA;AACA,EAAA,SAAA,CAAA,aAAA,CAAA,YAAA,CAAA,KAAA,CACA,aAAA,CAAA,SAAA,CAAA,aAAA,CAAA,YAAA,CAAA,KAAA,EAAA,QAAA,CADA,EAEA,KAFA,GAEA,SAAA,CAAA,SAAA,CAAA,KAAA,EAAA,MAFA;AAGA,EAAA,SAAA,CAAA,aAAA,CAAA,YAAA,CAAA,KAAA,CACA,aAAA,CAAA,SAAA,CAAA,aAAA,CAAA,YAAA,CAAA,KAAA,EAAA,MAAA,CADA,EAEA,KAFA,GAEA,SAAA,CAAA,SAAA,CAAA,KAAA,EAAA,IAFA;AAGA,EAAA,SAAA,CAAA,aAAA,CAAA,YAAA,CAAA,KAAA,CACA,aAAA,CAAA,SAAA,CAAA,aAAA,CAAA,YAAA,CAAA,KAAA,EAAA,SAAA,CADA,EAEA,KAFA,GAEA,SAAA,CAAA,SAAA,CAAA,KAAA,EAAA,OAFA;AAGA,EAAA,SAAA,CAAA,aAAA,CAAA,YAAA,CAAA,KAAA,CACA,aAAA,CAAA,SAAA,CAAA,aAAA,CAAA,YAAA,CAAA,KAAA,EAAA,OAAA,CADA,EAEA,KAFA,GAEA,SAAA,CAAA,SAAA,CAAA,KAAA,EAAA,KAFA;AAGA;;AAEA,SAAA,eAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AACA,MACA,CAAA,OAAA,CACA,IAAA,IAAA,KAAA,GAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,CAAA,EAAA,CAAA,uBAAA,CADA,CADA,EAIA;AACA;AACA;;AACA,MAAA,eAAA,GAAA,YAAA,CACA,EAAA,CAAA,IADA,EAEA,cAFA,EAGA,kBAHA,CAAA,CAIA,eAJA;AAKA,MAAA,WAAA,GAAA;AACA,IAAA,MAAA,EAAA,mBADA;AAEA,IAAA,MAAA,EAAA,KAFA;AAGA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,GAAA,EAAA;AAFA;AAHA,GAAA;AAQA,EAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,WAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,IAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,mBAAA,CAAA,CAAA;AACA,QAAA,eAAA,GAAA,YAAA,CACA,EAAA,CAAA,IADA,EAEA,cAFA,EAGA,kBAHA,CAAA,CAIA,eAJA;;AAKA,QAAA,IAAA,IAAA,KAAA,EAAA;AACA,UAAA,OAAA,GAAA,IAAA,CAAA,IAAA,CACA,CAAA,eAAA,CAAA,GAAA,GAAA,eAAA,CAAA,MAAA,IACA,eAAA,CAAA,UAFA,CAAA;AAIA,MAAA,OAAA,GAAA,OAAA,IAAA,CAAA,GAAA,CAAA,GAAA,OAAA;AACA,UAAA,IAAA,GACA,eAAA,CAAA,OAAA,IAAA,OAAA,GAAA,OAAA,GAAA,eAAA,CAAA,OADA;AAEA,MAAA,oBAAA,CAAA,EAAA,EAAA,IAAA,CAAA;AACA,KATA,MASA;AACA,MAAA,oBAAA,CAAA,EAAA,EAAA,CAAA,CAAA;AACA;AACA,GAnBA;AAoBA;;AAEA,SAAA,SAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AACA,MAAA,WAAA,GAAA;AACA,IAAA,MAAA,EAAA,mBADA;AAEA,IAAA,MAAA,EAAA,QAFA;AAGA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AAHA,GAAA;AAOA,EAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,WAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,IAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,eAAA,CAAA,CAAA;AACA,QAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,OAAA;AACA,GAJA;AAKA;;AAEA,SAAA,QAAA,CAAA,EAAA,EAAA;AACA,MAAA,KAAA,GAAA,YAAA,CAAA,EAAA,CAAA,IAAA,EAAA,cAAA,EAAA,kBAAA,CAAA,CACA,aADA,CACA,eADA;AAEA,MAAA,IAAA,GAAA,KAAA,CAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,KAAA,EAAA,QAAA,CAAA,CAAA;AACA,MAAA,QAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA;;AACA,MAAA,QAAA,IAAA,EAAA,IAAA,QAAA,IAAA,EAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,EAAA;AACA;AACA;;AAEA,EAAA,KAAA,CAAA,cAAA,GAAA,IAAA;AACA,MAAA,MAAA,GAAA,IAAA,QAAA,EAAA;AACA,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,EAAA,IAAA,CAAA,KAAA,CAAA,QAAA;AACA,EAAA,KAAA,CACA,IADA,CACA,8BADA,EACA,MADA,EACA;AACA,IAAA,OAAA,EAAA;AACA,sBAAA;AADA;AADA,GADA,EAMA,IANA,CAMA,UAAA,GAAA,EAAA;AACA,QAAA,GAAA,CAAA,IAAA,CAAA,OAAA,IAAA,CAAA,CAAA,EAAA;AACA,MAAA,eAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,sBAAA,CAAA,CAAA;AACA,MAAA,IAAA,CAAA,KAAA,CAAA,QAAA,GAAA,EAAA,CAAA,EAAA,CAAA,iBAAA,CAAA;AACA,MAAA,IAAA,CAAA,KAAA,CAAA,QAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,KALA,MAKA,IAAA,GAAA,CAAA,IAAA,CAAA,OAAA,IAAA,CAAA,EAAA;AACA,MAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,sBAAA,CAAA,CAAA;AACA,MAAA,IAAA,CAAA,KAAA,CAAA,QAAA,GAAA,EAAA,CAAA,EAAA,CAAA,iBAAA,CAAA;AACA,MAAA,IAAA,CAAA,KAAA,CAAA,QAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,KALA,MAKA;AACA,MAAA,aAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,mBAAA,CAAA,CAAA;AACA;;AACA,IAAA,KAAA,CAAA,cAAA,GAAA,KAAA;AACA,QAAA,IAAA,GAAA,YAAA,CAAA,EAAA,CAAA,IAAA,EAAA,cAAA,EAAA,kBAAA,CAAA,CACA,eADA,CACA,OADA;AAEA,IAAA,oBAAA,CAAA,EAAA,EAAA,IAAA,CAAA;AACA,GAxBA;AAyBA;;AAEA,SAAA,eAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AACA,MAAA,KAAA,IAAA,EAAA,EAAA;AACA,IAAA,YAAA,CAAA,EAAA,CAAA,IAAA,EAAA,cAAA,EAAA,QAAA,CAAA,CAAA,MAAA,GAAA,IAAA;AACA;AACA;;AACA,MAAA,eAAA,GAAA,YAAA,CACA,EAAA,CAAA,IADA,EAEA,cAFA,EAGA,mBAHA,CAAA;AAKA,EAAA,eAAA,CAAA,WAAA,GAAA,CACA;AAAA,IAAA,GAAA,EAAA,aAAA;AAAA,IAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,aAAA;AAAA,GADA,CAAA;AAGA,EAAA,eAAA,CAAA,KAAA,GAAA,aAAA;AACA,EAAA,EAAA,CAAA,WAAA,GAAA,KAAA;AACA,EAAA,oBAAA,CAAA,EAAA,EAAA,CAAA,CAAA;AACA;;AAEA,SAAA,oBAAA,CAAA,EAAA,EAAA;AACA,MAAA,eAAA,GAAA,YAAA,CACA,EAAA,CAAA,IADA,EAEA,cAFA,EAGA,mBAHA,CAAA;AAKA,EAAA,eAAA,CAAA,WAAA,GAAA,CACA;AAAA,IAAA,GAAA,EAAA,aAAA;AAAA,IAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,aAAA;AAAA,GADA,EAEA;AAAA,IAAA,GAAA,EAAA,WAAA;AAAA,IAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,WAAA;AAAA,GAFA,CAAA;AAIA,EAAA,eAAA,CAAA,KAAA,GAAA,aAAA;AACA,EAAA,EAAA,CAAA,WAAA,GAAA,EAAA;AACA,EAAA,YAAA,CAAA,EAAA,CAAA,IAAA,EAAA,cAAA,EAAA,QAAA,CAAA,CAAA,KAAA,GAAA,EAAA;AACA,EAAA,oBAAA,CAAA,EAAA,EAAA,CAAA,CAAA;AACA","sourcesContent":["<template>\n  <CommonPage :data=\"data\" @onDataChange=\"onCommonPageDataChange($event)\"></CommonPage>\n</template>\n\n<script>\nimport CommonPage from \"@/components/CommonPage.vue\";\nimport {\n  showRequestSuccess,\n  deepClone,\n  getItemByKey,\n  getIndexByKey,\n  isAValidDialedNumber,\n} from \"@/js/common.js\";\n\nexport default {\n  components: {\n    CommonPage,\n  },\n  data() {\n    return {\n      searchValue: \"\",\n      changedCfgData: {},\n      submitCfgData: {},\n      apiData: {},\n      data: {\n        getDataSuccess: false,\n      },\n      currentContactList: [],\n    };\n  },\n  created() {\n    getData(this);\n  },\n  methods: {\n    onCommonPageDataChange: function (event) {\n      setChangedData(this, event);\n    },\n  },\n};\n\nfunction setChangedData(vm, event) {\n  if (\n    event.contentKey == \"contactsList\" &&\n    event.itemKey == \"contactListSelect\"\n  ) {\n    getContactsTableData(vm, 1);\n  }\n}\n\nfunction submitData(vm) {\n  vm.data.submitLoading = true;\n\n  let requestData = {\n    target: \"phoneLocalContact\",\n    action: \"set\",\n    configData: vm.submitCfgData,\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm);\n    vm.data.submitLoading = false;\n  });\n}\n\nfunction getData(vm) {\n  vm.$axios.get(\"api/phoneLocalContact/info\").then((response) => {\n    vm.getDataSuccess = true;\n    vm.apiData = response.data;\n    vm.changedCfgData = deepClone(response.data.configData);\n    createPageData(vm);\n  });\n}\n\nfunction getCommitData(vm) {\n  vm.submitCfgData = {};\n  for (var changedKey in vm.changedCfgData) {\n    if (vm.apiData.configData[changedKey] != vm.changedCfgData[changedKey]) {\n      vm.submitCfgData[changedKey] = vm.changedCfgData[changedKey];\n    }\n  }\n}\n\nfunction createPageData(vm) {\n  vm.data = {\n    getDataSuccess: true,\n    breadCrumb: {\n      firstTitle: vm.$t(\"Contacts\"),\n      secondTitle: vm.$t(\"LocalContacts\"),\n    },\n    onSubmit: function () {\n      getCommitData(vm);\n      submitData(vm);\n    },\n    onCancel: function () {\n      vm.data.cancelLoading = true;\n      getData(vm);\n    },\n    submitLoading: false,\n    cancelLoading: false,\n    contents: [],\n  };\n\n  vm.data.contents.push(createContactListContent(vm));\n  vm.data.contents.push(createDialNumberContent(vm));\n  getContactsTableData(vm, 1);\n}\n\nfunction createDialNumberContent(vm) {\n  let accountItems = [{ key: 0, label: vm.$t(\"Auto\") }];\n  for (let i = 0; i < vm.apiData.data.accountList.length; i++) {\n    let item = {\n      key: vm.apiData.data.accountList[i].index,\n      label:\n        vm.$t(\"Line\") +\n        vm.apiData.data.accountList[i].index +\n        \": \" +\n        vm.apiData.data.accountList[i].name,\n    };\n    accountItems.push(item);\n  }\n\n  let content = {\n    key: \"dialNumber\",\n    title: vm.$t(\"DialNumber\"),\n    titleDescription: vm.$t(\"DialNumber\"),\n    items: [\n      {\n        type: \"dialInput\",\n        key: \"dialInput\",\n        // selectValue: 0,\n        selectItems: accountItems,\n      },\n    ],\n  };\n  return content;\n}\n\nfunction createContactListContent(vm) {\n  //添加框\n  let addModalData = {\n    title: vm.$t(\"AddContact\") + \" >>\",\n    key: -1,\n    cancelBtnLabel: vm.$t(\"Cancel\"),\n    submitBtnLabel: vm.$t(\"Submit\"),\n    visible: false,\n    showFooter: true,\n    items: [\n      {\n        title: vm.$t(\"Name\"),\n        type: \"input\",\n        key: \"name\",\n        value: \"\",\n        isWarn: false,\n        warnLabel: vm.$t(\"NameEmptyWarning\"),\n      },\n      {\n        title: vm.$t(\"Number\"),\n        type: \"input\",\n        key: \"number\",\n        value: \"\",\n        isWarn: false,\n        warnLabel: vm.$t(\"PleaseCheckSubmitData\"),\n      },\n      {\n        title: vm.$t(\"Group\"),\n        type: \"select\",\n        key: \"group\",\n        value: \"\",\n        defaultValue: 0,\n        selectItems: [\n          { key: 0, label: vm.$t(\"Default\") },\n          { key: 1, label: vm.$t(\"BlackList\") },\n        ],\n      },\n      {\n        title: vm.$t(\"DialAccount\"),\n        type: \"select\",\n        key: \"account\",\n        value: \"\",\n        defaultValue: 0,\n        selectItems: [\n          { key: 0, label: vm.$t(\"Account\") + 1 },\n          { key: 1, label: vm.$t(\"Account\") + 2 },\n        ],\n      },\n    ],\n    onConfirm: function () {\n      onChangeContact(vm);\n    },\n  };\n\n  //导入框\n  let importModalData = {\n    title: \" \",\n    cancelBtnLabel: vm.$t(\"Cancel\"),\n    submitBtnLabel: vm.$t(\"Import\"),\n    showFooter: true,\n    visible: false,\n    items: [\n      {\n        title: vm.$t(\"FileLabel\") + \" (.Xml/.Csv)\",\n        type: \"file-input\",\n        key: \"import\",\n        acceptFileType: \".xml,.csv\",\n        loading: false,\n        value: {\n          fileData: {},\n          fileName: vm.$t(\"UpgradeFilePath\"),\n        },\n        importBtnName: vm.$t(\"Reset\"),\n      },\n    ],\n    onConfirm: function () {\n      onImport(vm);\n    },\n    confirmLoading: false,\n  };\n  //table head\n  let tableHeadData = {\n    addModalData: addModalData,\n    importModalData: importModalData,\n    exportItems: [\n      { key: \"xml\", label: \"xml\" },\n      { key: \"csv\", label: \"csv\" },\n    ],\n    onExport: function (type) {\n      onExport(vm, type);\n    },\n  };\n  //table footer\n  let tableFooterData = {\n    onDelete: function () {\n      onDeleteContact(vm, \"select\");\n    },\n    onDeleteAll: function () {\n      onDeleteContact(vm, \"all\");\n    },\n    onPageChange: function (page) {\n      getContactsTableData(vm, page);\n    },\n    sum: 0,\n    pageNumber: 5,\n    curPage: 0,\n    deleteDisabled: true,\n    deleteAllDisabled: false,\n  };\n  //content\n  let content = {\n    key: \"contactsList\",\n    title: vm.$t(\"ContactsListSetting\"),\n    titleDescription: vm.$t(\"ContactsListSetting\"),\n    items: [\n      {\n        title: vm.$t(\"ContactsList\"),\n        type: \"select\",\n        key: \"contactListSelect\",\n        value: \"AllContacts\",\n        selectItems: [\n          { key: \"AllContacts\", label: vm.$t(\"AllContacts\") },\n          { key: \"BlackList\", label: vm.$t(\"BlackList\") },\n        ],\n      },\n      {\n        title: vm.$t(\"Search\"),\n        type: \"input\",\n        key: \"search\",\n        value: \"\",\n        showBtn: true,\n        isWarn: false,\n        warnLabel: vm.$t(\"ConSearchPrompt\"),\n        onSearch: function (value) {\n          onContactSearch(vm, value);\n        },\n        onReset: function () {\n          onContactSearchReset(vm);\n        },\n      },\n      {\n        type: \"table\",\n        key: \"contactListTable\",\n        showHead: true,\n        showFooter: true,\n        showRowSelection: true,\n        selectedRowKeys: [],\n        tableHeadData: tableHeadData,\n        tableFooterData: tableFooterData,\n        tableData: [],\n        tableColumns: [\n          {\n            type: \"label\",\n            title: vm.$t(\"Index\"),\n            dataIndex: \"index\",\n            scopedSlots: { customRender: \"index\" },\n            align: \"center\",\n            width: \"10%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"Name\"),\n            dataIndex: \"name\",\n            scopedSlots: { customRender: \"name\" },\n            align: \"center\",\n            width: \"20%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"Number\"),\n            dataIndex: \"number\",\n            scopedSlots: { customRender: \"number\" },\n            align: \"center\",\n            width: \"20%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"Group\"),\n            dataIndex: \"group\",\n            scopedSlots: { customRender: \"group\" },\n            align: \"center\",\n            width: \"20%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"Account\"),\n            dataIndex: \"account\",\n            scopedSlots: { customRender: \"account\" },\n            align: \"center\",\n            width: \"20%\",\n          },\n          {\n            type: \"edit\",\n            title: vm.$t(\"EditLabel\"),\n            dataIndex: \"edit\",\n            scopedSlots: { customRender: \"edit\" },\n            align: \"center\",\n            width: \"10%\",\n            onEdit: function (index, key) {\n              onSetEditValue(index, key, vm);\n            },\n          },\n        ],\n      },\n    ],\n  };\n  return content;\n}\n\nfunction getContactsTableData(vm, page) {\n  let group = getItemByKey(vm.data, \"contactsList\", \"contactListSelect\").value;\n  vm.$axios\n    .get(\n      \"api/phoneLocalContact/get?page=\" +\n        page +\n        \"&group=\" +\n        group +\n        \"&search=\" +\n        vm.searchValue\n    )\n    .then((response) => {\n      let tableData = [];\n      let data = response.data.data;\n      vm.currentContactList = response.data.data.contactList;\n      for (let i = 0; i < data.contactList.length; i++) {\n        let item = {\n          key: data.contactList[i].id,\n          index: i + 1,\n          name: data.contactList[i].name,\n          number: data.contactList[i].number,\n          group:\n            data.contactList[i].group == \"\"\n              ? vm.$t(\"Default\")\n              : data.contactList[i].group == \"BlockList\"\n              ? vm.$t(\"BlackList\")\n              : data.contactList[i].group,\n          account: vm.$t(\"Account\") + (data.contactList[i].account + 1),\n          edit: i,\n        };\n        tableData.push(item);\n      }\n      getItemByKey(\n        vm.data,\n        \"contactsList\",\n        \"contactListTable\"\n      ).tableData = tableData;\n      getItemByKey(\n        vm.data,\n        \"contactsList\",\n        \"contactListTable\"\n      ).tableFooterData.sum = data.sum;\n      getItemByKey(\n        vm.data,\n        \"contactsList\",\n        \"contactListTable\"\n      ).tableFooterData.pageNumber = data.pageNum;\n      getItemByKey(\n        vm.data,\n        \"contactsList\",\n        \"contactListTable\"\n      ).tableFooterData.curPage = page;\n      getItemByKey(\n        vm.data,\n        \"contactsList\",\n        \"contactListTable\"\n      ).selectedRowKeys = [];\n    });\n}\n\nfunction onChangeContact(vm) {\n  let addModalData = getItemByKey(vm.data, \"contactsList\", \"contactListTable\")\n    .tableHeadData.addModalData;\n  let name = addModalData.items[getIndexByKey(addModalData.items, \"name\")];\n  let number = addModalData.items[getIndexByKey(addModalData.items, \"number\")];\n  let group = addModalData.items[getIndexByKey(addModalData.items, \"group\")];\n  let account =\n    addModalData.items[getIndexByKey(addModalData.items, \"account\")];\n  let id = addModalData.key;\n\n  let errFlag = false;\n  if (name.value == \"\") {\n    name.isWarn = true;\n    name.warnLabel = vm.$t(\"NameEmptyWarning\");\n    errFlag = true;\n  }\n  if (!isAValidDialedNumber(number.value)) {\n    number.isWarn = true;\n    errFlag = true;\n  }\n\n  if (errFlag) {\n    return;\n  }\n\n  let oriGroup = 0;\n  if (id >= 0) {\n    for (let i = 0; i < vm.currentContactList.length; i++) {\n      if (vm.currentContactList[i].id == id) {\n        oriGroup = vm.currentContactList[i].group == \"BlockList\" ? 1 : 0;\n      }\n    }\n  }\n\n  let data = {\n    name: name.value,\n    number: number.value,\n    group: group.value,\n    oriGroup: oriGroup,\n    account: account.value,\n    id: id,\n  };\n  let action = id >= 0 ? \"edit\" : \"add\";\n\n  let requestData = {\n    target: \"phoneLocalContact\",\n    action: action,\n    data: data,\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    let ret = response.data.retcode;\n    if (ret == 0) {\n      name.value = \"\";\n      number.value = \"\";\n      group.value = 0;\n      account.value = 0;\n      let page = 0;\n      let tableItem = getItemByKey(vm.data, \"contactsList\", \"contactListTable\");\n      if (action == \"add\") {\n        //页面数据变化\n        page = Math.ceil(\n          (tableItem.tableFooterData.sum + 1) /\n            tableItem.tableFooterData.pageNumber\n        );\n      } else {\n        page = tableItem.tableFooterData.curPage;\n      }\n      getContactsTableData(vm, page);\n      //关闭窗口并展示成功\n      addModalData.visible = false;\n      showRequestSuccess(vm);\n    } else if (ret == 7) {\n      name.isWarn = true;\n      name.warnLabel = vm.$t(\"SameNameWarning\");\n    } else if (ret == 17) {\n      showErrorInfo(vm, vm.$t(\"TooManyContactsWarning\"));\n    } else if (ret == 18) {\n      showErrorInfo(vm, vm.$t(\"TooManyBLWarning\"));\n    }\n  });\n}\n\nfunction onSetEditValue(index, key, vm) {\n  let tableItem = getItemByKey(vm.data, \"contactsList\", \"contactListTable\");\n  tableItem.tableHeadData.addModalData.items[\n    getIndexByKey(tableItem.tableHeadData.addModalData.items, \"number\")\n  ].value = tableItem.tableData[index].number;\n  tableItem.tableHeadData.addModalData.items[\n    getIndexByKey(tableItem.tableHeadData.addModalData.items, \"name\")\n  ].value = tableItem.tableData[index].name;\n  tableItem.tableHeadData.addModalData.items[\n    getIndexByKey(tableItem.tableHeadData.addModalData.items, \"account\")\n  ].value = tableItem.tableData[index].account;\n  tableItem.tableHeadData.addModalData.items[\n    getIndexByKey(tableItem.tableHeadData.addModalData.items, \"group\")\n  ].value = tableItem.tableData[index].group;\n}\n\nfunction onDeleteContact(vm, type) {\n  if (\n    !confirm(\n      type == \"all\" ? vm.$t(\"DeleteAllConfirm\") : vm.$t(\"DeleteSelectedConfirm\")\n    )\n  ) {\n    return;\n  }\n  let selectedRowKeys = getItemByKey(\n    vm.data,\n    \"contactsList\",\n    \"contactListTable\"\n  ).selectedRowKeys;\n  let requestData = {\n    target: \"phoneLocalContact\",\n    action: \"del\",\n    data: {\n      type: type,\n      ids: selectedRowKeys,\n    },\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm, vm.$t(\"HintDeleteSuccess\"));\n    let tableFooterData = getItemByKey(\n      vm.data,\n      \"contactsList\",\n      \"contactListTable\"\n    ).tableFooterData;\n    if (type != \"all\") {\n      let sumPage = Math.ceil(\n        (tableFooterData.sum - selectedRowKeys.length) /\n          tableFooterData.pageNumber\n      );\n      sumPage = sumPage == 0 ? 1 : sumPage;\n      let page =\n        tableFooterData.curPage >= sumPage ? sumPage : tableFooterData.curPage;\n      getContactsTableData(vm, page);\n    } else {\n      getContactsTableData(vm, 1);\n    }\n  });\n}\n\nfunction onExport(vm, type) {\n  let requestData = {\n    target: \"phoneLocalContact\",\n    action: \"export\",\n    data: {\n      type: type,\n    },\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm, vm.$t(\"ExportSuccess\"));\n    let address = response.data.data.address;\n    window.open(address);\n  });\n}\n\nfunction onImport(vm) {\n  let modal = getItemByKey(vm.data, \"contactsList\", \"contactListTable\")\n    .tableHeadData.importModalData;\n  let item = modal.items[getIndexByKey(modal.items, \"import\")];\n  let fileName = item.value.fileName;\n  if (fileName == \"\" || fileName == vm.$t(\"UpgradeFilePath\")) {\n    return;\n  }\n\n  modal.confirmLoading = true;\n  const upData = new FormData();\n  upData.append(\"file\", item.value.fileData);\n  axios\n    .post(\"api/phoneLocalContact/import\", upData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    })\n    .then((res) => {\n      if (res.data.retcode == -2) {\n        showWarningInfo(vm, vm.$t(\"TooManyGroupsWarning\"));\n        item.value.fileName = vm.$t(\"UpgradeFilePath\");\n        item.value.fileData = {};\n        modal.visible = false;\n      } else if (res.data.retcode == 0) {\n        showRequestSuccess(vm, vm.$t(\"ContactImportSuccess\"));\n        item.value.fileName = vm.$t(\"UpgradeFilePath\");\n        item.value.fileData = {};\n        modal.visible = false;\n      } else {\n        showErrorInfo(vm, vm.$t(\"ContactImportFail\"));\n      }\n      modal.confirmLoading = false;\n      let page = getItemByKey(vm.data, \"contactsList\", \"contactListTable\")\n        .tableFooterData.curPage;\n      getContactsTableData(vm, page);\n    });\n}\n\nfunction onContactSearch(vm, value) {\n  if (value == \"\") {\n    getItemByKey(vm.data, \"contactsList\", \"search\").isWarn = true;\n    return;\n  }\n  let groupSelectItem = getItemByKey(\n    vm.data,\n    \"contactsList\",\n    \"contactListSelect\"\n  );\n  groupSelectItem.selectItems = [\n    { key: \"AllContacts\", label: vm.$t(\"AllContacts\") },\n  ];\n  groupSelectItem.value = \"AllContacts\";\n  vm.searchValue = value;\n  getContactsTableData(vm, 1);\n}\n\nfunction onContactSearchReset(vm) {\n  let groupSelectItem = getItemByKey(\n    vm.data,\n    \"contactsList\",\n    \"contactListSelect\"\n  );\n  groupSelectItem.selectItems = [\n    { key: \"AllContacts\", label: vm.$t(\"AllContacts\") },\n    { key: \"BlackList\", label: vm.$t(\"BlackList\") },\n  ];\n  groupSelectItem.value = \"AllContacts\";\n  vm.searchValue = \"\";\n  getItemByKey(vm.data, \"contactsList\", \"search\").value = \"\";\n  getContactsTableData(vm, 1);\n}\n</script>"],"sourceRoot":"src/views"}]}