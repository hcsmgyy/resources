{"remainingRequest":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/PhoneMulicast.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/PhoneMulicast.vue","mtime":1600155105014},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js","mtime":1600155105338},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js","mtime":1600155105414}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PhoneMulicast.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <CommonPage :data=\"data\" @onDataChange=\"onCommonPageDataChange($event)\"></CommonPage>\n</template>\n\n<script>\nimport CommonPage from \"@/components/CommonPage.vue\";\nimport {\n  showRequestSuccess,\n  showErrorInfo,\n  isPort,\n  deepClone,\n} from \"@/js/common.js\";\n\nexport default {\n  components: {\n    CommonPage,\n  },\n  data() {\n    return {\n      changedCfgData: {},\n      submitCfgData: {},\n      apiData: {},\n      data: {\n        getDataSuccess: false,\n      },\n    };\n  },\n  created() {\n    getData(this);\n  },\n  methods: {\n    onCommonPageDataChange: function (event) {\n      //mulitcast List部分\n      if (event.contentKey == \"mulitcastList\") {\n        //单选逻辑\n        let falseCount = 0;\n        for (let i = 0; i < event.newVal.length; i++) {\n          this.changedCfgData[\"Config.Multicast.GROUP\" + (i + 1) + \".IP\"] =\n            event.newVal[i].multicastAddress.value;\n          if (!event.newVal[i].enabled.value) {\n            falseCount++;\n          }\n          if (event.newVal[i].enabled.value && !event.oldVal[i].enabled.value) {\n            this.changedCfgData[\n              \"Config.Multicast.SELECTEDGROUP.SelectedGroup\"\n            ] = i + 1;\n            for (let j = 0; j < event.newVal.length; j++) {\n              if (i != j) {\n                this.data.contents[event.contentIndex].items[\n                  event.itemIndex\n                ].tableData[j].enabled.value = false;\n              }\n            }\n          }\n        }\n        if (falseCount == event.newVal.length) {\n          this.changedCfgData[\"Config.Multicast.SELECTEDGROUP.SelectedGroup\"] =\n            \"0\";\n        }\n      } else if (event.contentKey == \"listenList\") {\n        //listen list 部分\n        for (let i = 0; i < event.newVal.length; i++) {\n          this.changedCfgData[\"Config.Multicast.LISTEN\" + i + \".IP\"] =\n            event.newVal[i].listeningAddress.value;\n          this.changedCfgData[\"Config.Multicast.LISTEN\" + i + \".Label\"] =\n            event.newVal[i].label.value;\n        }\n      }\n      // checkCommitData(this);\n    },\n  },\n};\nfunction checkCommitData(vm) {\n  let success = true;\n  //multicast list\n  let multicastListContentIndex = vm.data.contents\n    .map((item) => item.key)\n    .indexOf(\"mulitcastList\");\n  let multicastListItemIndex = vm.data.contents[multicastListContentIndex].items\n    .map((item) => item.key)\n    .indexOf(\"mulitcastList\");\n  let mulitcastTableData =\n    vm.data.contents[multicastListContentIndex].items[multicastListItemIndex]\n      .tableData;\n  for (let i = 0; i < mulitcastTableData.length; i++) {\n    mulitcastTableData[i].multicastAddress.isWarn = false;\n    if(mulitcastTableData[i].multicastAddress.value == \"\"){\n      continue;\n    }\n    let port = getPort(mulitcastTableData[i].multicastAddress.value);\n    if (port == \"\" || !(isPort(port) && Number(port) >= 1024)) {\n      //不允许为空\n      mulitcastTableData[i].multicastAddress.isWarn = true;\n      mulitcastTableData[i].multicastAddress.warnLabel = vm.$t(\"WrongPort\");\n      success = false;\n    } else {\n      //不允许重复\n      for (let j = 0; j < mulitcastTableData.length; j++) {\n        if (\n          i != j &&\n          getPort(mulitcastTableData[i].multicastAddress.value) ==\n            getPort(mulitcastTableData[j].multicastAddress.value)\n        ) {\n          mulitcastTableData[i].multicastAddress.isWarn = true;\n          mulitcastTableData[i].multicastAddress.warnLabel = vm.$t(\n            \"WarningSamePortExist\"\n          );\n          mulitcastTableData[j].multicastAddress.isWarn = true;\n          mulitcastTableData[j].multicastAddress.warnLabel = vm.$t(\n            \"WarningSamePortExist\"\n          );\n          success = false;\n        }\n      }\n    }\n  }\n  //listen list\n  let listenListContentIndex = vm.data.contents\n    .map((item) => item.key)\n    .indexOf(\"listenList\");\n  let listenListItemIndex = vm.data.contents[listenListContentIndex].items\n    .map((item) => item.key)\n    .indexOf(\"listenList\");\n  let listenTableData =\n    vm.data.contents[listenListContentIndex].items[listenListItemIndex]\n      .tableData;\n  for (let i = 0; i < listenTableData.length; i++) {\n    listenTableData[i].listeningAddress.isWarn = false;\n    if(listenTableData[i].listeningAddress.value == \"\"){\n      continue;\n    }\n    let port = getPort(listenTableData[i].listeningAddress.value);\n    if (port == \"\" || !(isPort(port) && Number(port) >= 1024)) {\n      //不允许为空\n      listenTableData[i].listeningAddress.isWarn = true;\n      listenTableData[i].listeningAddress.warnLabel = vm.$t(\"WrongPort\");\n      success = false;\n    } else {\n      //不允许重复\n      for (let j = 0; j < listenTableData.length; j++) {\n        if (\n          i != j &&\n          getPort(listenTableData[i].listeningAddress.value) ==\n            getPort(listenTableData[j].listeningAddress.value)\n        ) {\n          listenTableData[i].listeningAddress.isWarn = true;\n          listenTableData[i].listeningAddress.warnLabel = vm.$t(\n            \"WarningSamePortExist\"\n          );\n          listenTableData[j].listeningAddress.isWarn = true;\n          listenTableData[j].listeningAddress.warnLabel = vm.$t(\n            \"WarningSamePortExist\"\n          );\n          success = false;\n        }\n      }\n    }\n  }\n  return success;\n}\n\nfunction getPort(value) {\n  return value.indexOf(\":\") == -1\n    ? \"\"\n    : value.split(\":\")[value.split(\":\").length - 1];\n}\n\nfunction submitData(vm) {\n  vm.data.submitLoading = true;\n\n  let requestData = {\n    target: \"phoneIntercom\",\n    action: \"set\",\n    configData: vm.submitCfgData,\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm);\n    vm.data.submitLoading = false;\n  });\n}\n\nfunction getData(vm) {\n  vm.$axios.get(\"api/phoneMulticast/info\").then((response) => {\n    vm.getDataSuccess = true;\n    vm.apiData = response.data;\n    vm.changedCfgData = deepClone(response.data.configData);\n    createPageData(vm);\n  });\n}\n\nfunction getCommitData(vm) {\n  vm.submitCfgData = {};\n  for (var changedKey in vm.changedCfgData) {\n    if (vm.apiData.configData[changedKey] != vm.changedCfgData[changedKey]) {\n      vm.submitCfgData[changedKey] = vm.changedCfgData[changedKey];\n    }\n  }\n}\n\nfunction createPageData(vm) {\n  let mulitcastListTableData = [];\n  let listenListTableData = [];\n  for (let i = 1; i <= 3; i++) {\n    let mulitcastData = {\n      key: i - 1,\n      mluticastGroup: vm.$t(\"MulticastGroup\") + \" 1\",\n      multicastAddress: {\n        value: vm.apiData.configData[\"Config.Multicast.GROUP\" + i + \".IP\"],\n        isWarn: false,\n        warnLabel: \"\",\n      },\n      enabled: {\n        value:\n          vm.apiData.configData[\n            \"Config.Multicast.SELECTEDGROUP.SelectedGroup\"\n          ] == i,\n        disabled: false,\n      },\n    };\n    mulitcastListTableData.push(mulitcastData);\n\n    let listenData = {\n      key: i - 1,\n      listeningAddress: {\n        value:\n          vm.apiData.configData[\"Config.Multicast.LISTEN\" + (i - 1) + \".IP\"],\n        isWarn: false,\n        warnLabel: \"\",\n      },\n      label: {\n        value:\n          vm.apiData.configData[\"Config.Multicast.LISTEN\" + (i - 1) + \".Label\"],\n        isWarn: false,\n        warnLabel: \"\",\n      },\n      listenGroup: vm.$t(\"ListenGroup\") + \" 1\",\n    };\n    listenListTableData.push(listenData);\n  }\n\n  vm.data = {\n    getDataSuccess: true,\n    breadCrumb: {\n      firstTitle: vm.$t(\"Phone\"),\n      secondTitle: vm.$t(\"Multicast\"),\n    },\n    onSubmit: function () {\n      getCommitData(vm);\n      if (!checkCommitData(vm)) {\n        return;\n      }\n      submitData(vm);\n    },\n    onCancel: function () {\n      vm.data.cancelLoading = true;\n      getData(vm);\n    },\n    submitLoading: false,\n    cancelLoading: false,\n    contents: [\n      {\n        key: \"mulitcastList\",\n        title: vm.$t(\"MulticastList\"),\n        items: [\n          {\n            type: \"table\",\n            key: \"mulitcastList\",\n            tableColumns: [\n              {\n                type: \"label\",\n                title: vm.$t(\"MulticastGroup\"),\n                dataIndex: \"mluticastGroup\",\n                scopedSlots: { customRender: \"mluticastGroup\" },\n                align: \"center\",\n              },\n              {\n                type: \"input\",\n                title: vm.$t(\"MulticastAddress\"),\n                dataIndex: \"multicastAddress\",\n                scopedSlots: { customRender: \"multicastAddress\" },\n                align: \"center\",\n              },\n              {\n                type: \"checkbox\",\n                title: vm.$t(\"Enabled\"),\n                dataIndex: \"enabled\",\n                scopedSlots: { customRender: \"enabled\" },\n                align: \"center\",\n              },\n            ],\n            tableData: mulitcastListTableData,\n          },\n        ],\n      },\n      {\n        key: \"listenList\",\n        title: vm.$t(\"ListenList\"),\n        items: [\n          {\n            type: \"table\",\n            key: \"listenList\",\n            tableColumns: [\n              {\n                type: \"label\",\n                title: vm.$t(\"ListenGroup\"),\n                dataIndex: \"listenGroup\",\n                scopedSlots: { customRender: \"listenGroup\" },\n                align: \"center\",\n              },\n              {\n                type: \"input\",\n                title: vm.$t(\"ListeningAddress\"),\n                dataIndex: \"listeningAddress\",\n                scopedSlots: { customRender: \"listeningAddress\" },\n                align: \"center\",\n              },\n              {\n                type: \"input\",\n                title: vm.$t(\"Label\"),\n                dataIndex: \"label\",\n                scopedSlots: { customRender: \"label\" },\n                align: \"center\",\n              },\n            ],\n            tableData: listenListTableData,\n          },\n        ],\n      },\n    ],\n  };\n}\n</script>"],"sourceRoot":"src/views"}]}