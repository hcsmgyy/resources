{"remainingRequest":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/ContactsCallLog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/ContactsCallLog.vue","mtime":1600155105014},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js","mtime":1600155105338},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js","mtime":1600155105414}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ContactsCallLog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <CommonPage :data=\"data\" @onDataChange=\"onCommonPageDataChange($event)\"></CommonPage>\n</template>\n\n<script>\nimport CommonPage from \"@/components/CommonPage.vue\";\nimport {\n  showRequestSuccess,\n  deepClone,\n  isAnInterger,\n  getItemByKey,\n  dateFtt,\n  formatAMPM,\n  onWebHangup,\n} from \"@/js/common.js\";\n\nexport default {\n  components: {\n    CommonPage,\n  },\n  data() {\n    return {\n      changedCfgData: {},\n      submitCfgData: {},\n      apiData: {},\n      data: {\n        getDataSuccess: false,\n      },\n    };\n  },\n  created() {\n    getData(this);\n  },\n  methods: {\n    onCommonPageDataChange: function (event) {\n      setChangedData(this, event);\n      //this.changedCfgData[event.itemKey] = event.newVal;\n    },\n  },\n};\n\nfunction setChangedData(vm, event) {\n  if (event.contentKey == \"calllog\") {\n    if (event.itemKey == \"callHistoryType\") {\n      getCallLogsTableData(vm, 1);\n    } else {\n      vm.changedCfgData[event.itemKey] = event.newVal;\n    }\n  }\n}\n\nfunction submitData(vm) {\n  vm.data.submitLoading = true;\n\n  let requestData = {\n    target: \"phoneCallLog\",\n    action: \"set\",\n    configData: vm.submitCfgData,\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm);\n    vm.data.submitLoading = false;\n  });\n}\n\nfunction getData(vm) {\n  vm.$axios.get(\"api/phoneCallLog/info\").then((response) => {\n    vm.getDataSuccess = true;\n    vm.apiData = response.data;\n    vm.changedCfgData = deepClone(response.data.configData);\n    createPageData(vm);\n  });\n}\n\nfunction getCommitData(vm) {\n  vm.submitCfgData = {};\n  for (var changedKey in vm.changedCfgData) {\n    if (vm.apiData.configData[changedKey] != vm.changedCfgData[changedKey]) {\n      vm.submitCfgData[changedKey] = vm.changedCfgData[changedKey];\n    }\n  }\n}\n\nfunction checkCommitData(vm) {\n  return checkCallLog(vm);\n}\nfunction checkCallLog(vm) {\n  let success = true;\n  let upperLimit = getItemByKey(\n    vm.data,\n    \"calllog\",\n    \"Config.Settings.Capture.UpperLimit\"\n  );\n  if (vm.changedCfgData[\"Config.Settings.Capture.UpperLimit\"] == \"\") {\n    upperLimit.isWarn = true;\n    upperLimit.warnLabel = vm.$t(\"UpperLimitWarning\");\n    success = false;\n  }\n  if (!isAnInterger(vm.changedCfgData[\"Config.Settings.Capture.UpperLimit\"])) {\n    upperLimit.isWarn = true;\n    upperLimit.warnLabel = vm.$t(\"ValueMustBeNumber\");\n    success = false;\n  } else {\n    if (vm.changedCfgData[\"Config.Settings.Capture.UpperLimit\"] <= 0) {\n      upperLimit.isWarn = true;\n      upperLimit.warnLabel = vm.$t(\"ValueGreater0Info\");\n      success = false;\n    }\n  }\n  return success;\n}\n\nfunction createPageData(vm) {\n  vm.data = {\n    getDataSuccess: true,\n    breadCrumb: {\n      firstTitle: vm.$t(\"Contacts\"),\n      secondTitle: vm.$t(\"CallLog\"),\n    },\n    onSubmit: function () {\n      if (!checkCommitData(vm)) {\n        return;\n      }\n      getCommitData(vm);\n      submitData(vm);\n    },\n    onCancel: function () {\n      vm.data.cancelLoading = true;\n      getData(vm);\n    },\n    submitLoading: false,\n    cancelLoading: false,\n    contents: [],\n  };\n  vm.data.contents.push(createCallLogContent(vm));\n  getCallLogsTableData(vm, 1);\n}\n\nfunction createCallLogContent(vm) {\n  //call log type items\n  let callLogTypeItems = [\n    { key: 0, label: vm.$t(\"All\") },\n    { key: 1, label: vm.$t(\"Dialed\") },\n    { key: 2, label: vm.$t(\"Received\") },\n    { key: 3, label: vm.$t(\"Missed\") },\n    { key: 4, label: vm.$t(\"Forwarded\") },\n  ];\n  //capture delay items\n  let captureDelayItems = [];\n  for (let i = 0; i <= 10; i++) {\n    captureDelayItems.push({ key: i, label: i + \" \" + vm.$t(\"Second\") });\n  }\n  //table footer\n  let tableFooterData = {\n    onDelete: function () {\n      onDeleteLog(vm, \"select\");\n    },\n    onDeleteAll: function () {\n      onDeleteLog(vm, \"all\");\n    },\n    onPageChange: function (page) {\n      getCallLogsTableData(vm, page);\n    },\n    sum: 0,\n    pageNumber: 15,\n    curPage: 0,\n    deleteDisabled: true,\n    deleteAllDisabled: false,\n  };\n  //content\n  let content = {\n    key: \"calllog\",\n    title: vm.$t(\"CallLog\"),\n    titleDescription: vm.$t(\"CallLog\"),\n    items: [\n      {\n        title: vm.$t(\"CaptureDelay\"),\n        type: \"select\",\n        key: \"Config.Settings.Capture.Delay\",\n        value: vm.apiData.configData[\"Config.Settings.Capture.Delay\"],\n        selectItems: captureDelayItems,\n      },\n      {\n        title: vm.$t(\"UpperLimit\"),\n        type: \"input\",\n        key: \"Config.Settings.Capture.UpperLimit\",\n        value: vm.apiData.configData[\"Config.Settings.Capture.UpperLimit\"],\n        isWarn: false,\n        warnLabel: vm.$t(\"UpperLimitWarning\"),\n      },\n      {\n        title: vm.$t(\"CallHistory\"),\n        type: \"select\",\n        showCallLogBtn: true,\n        key: \"callHistoryType\",\n        value: \"0\",\n        selectItems: callLogTypeItems,\n        onHangup: function () {\n          onWebHangup(vm);\n        },\n        onExport: function () {\n          onExport(vm);\n        },\n      },\n      {\n        type: \"table\",\n        key: \"calllog\",\n        showFooter: true,\n        showRowSelection: true,\n        selectedRowKeys: [],\n        tableFooterData: tableFooterData,\n        tableData: [],\n        tableColumns: [\n          {\n            type: \"label\",\n            title: vm.$t(\"Index\"),\n            dataIndex: \"index\",\n            scopedSlots: { customRender: \"index\" },\n            align: \"center\",\n            width: \"10%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"Type\"),\n            dataIndex: \"type\",\n            scopedSlots: { customRender: \"type\" },\n            align: \"center\",\n            width: \"10%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"DateLabel\"),\n            dataIndex: \"date\",\n            scopedSlots: { customRender: \"date\" },\n            align: \"center\",\n            width: \"10%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"Time\"),\n            dataIndex: \"time\",\n            scopedSlots: { customRender: \"time\" },\n            align: \"center\",\n            width: \"10%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"LocalIdentity\"),\n            dataIndex: \"identity\",\n            scopedSlots: { customRender: \"identity\" },\n            align: \"center\",\n            width: \"20%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"Name\"),\n            dataIndex: \"name\",\n            scopedSlots: { customRender: \"name\" },\n            align: \"center\",\n            width: \"20%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"number\"),\n            dataIndex: \"number\",\n            scopedSlots: { customRender: \"number\" },\n            align: \"center\",\n            width: \"20%\",\n          },\n        ],\n      },\n    ],\n  };\n  return content;\n}\n\nfunction getCallLogsTableData(vm, page) {\n  var dateFormat = \"yyyy-MM-dd\";\n  let apiDateFormat =\n    vm.apiData.configData[\"Config.Settings.DATETIME.DateFormat\"];\n  if (apiDateFormat == \"0\") {\n    dateFormat = \"yyyy-MM-dd\";\n  } else if (apiDateFormat == \"1\") {\n    dateFormat = \"yyyy/MM/dd\";\n  } else if (apiDateFormat == \"2\") {\n    dateFormat = \"dd-MM-yyyy\";\n  } else if (apiDateFormat == \"3\") {\n    dateFormat = \"dd/MM/yyyy\";\n  } else if (apiDateFormat == \"6\") {\n    dateFormat = \"MM-dd-yyyy\";\n  } else if (apiDateFormat == \"7\") {\n    dateFormat = \"MM/dd/yyyy\";\n  }\n\n  vm.$axios\n    .get(\n      \"api/phoneCallLog/get?page=\" +\n        page +\n        \"&type=\" +\n        getItemByKey(vm.data, \"calllog\", \"callHistoryType\").value\n    )\n    .then((response) => {\n      let tableData = [];\n      let data = response.data.data;\n      var types = new Array(\n        vm.$t(\"All\"),\n        vm.$t(\"Dialed\"),\n        vm.$t(\"Received\"),\n        vm.$t(\"Missed\"),\n        vm.$t(\"Forwarded\")\n      );\n      for (let i = 0; i < data.callLogList.length; i++) {\n        let item = {\n          key: data.callLogList[i].id,\n          index: i + 1,\n          type: types[data.callLogList[i].type],\n          date: dateFtt(dateFormat, new Date(data.callLogList[i].date)),\n          time:\n            vm.apiData.configData[\"Config.Settings.DATETIME.TimeFormat\"] == \"0\"\n              ? formatAMPM(\n                  new Date(\n                    data.callLogList[i].date + \" \" + data.callLogList[i].time\n                  )\n                )\n              : data.callLogList[i].time,\n          identity: data.callLogList[i].identity,\n          name: data.callLogList[i].name,\n          number: data.callLogList[i].number,\n        };\n        tableData.push(item);\n      }\n      getItemByKey(vm.data, \"calllog\", \"calllog\").tableData = tableData;\n      getItemByKey(vm.data, \"calllog\", \"calllog\").tableFooterData.sum =\n        data.sum;\n      getItemByKey(vm.data, \"calllog\", \"calllog\").tableFooterData.pageNumber =\n        data.pageNum;\n      getItemByKey(\n        vm.data,\n        \"calllog\",\n        \"calllog\"\n      ).tableFooterData.curPage = page;\n      getItemByKey(vm.data, \"calllog\", \"calllog\").selectedRowKeys = [];\n    });\n}\nfunction onDeleteLog(vm, type) {\n  if (\n    !confirm(\n      type == \"all\" ? vm.$t(\"DeleteAllConfirm\") : vm.$t(\"DeleteSelectedConfirm\")\n    )\n  ) {\n    return;\n  }\n  let selectedRowKeys = getItemByKey(vm.data, \"calllog\", \"calllog\")\n    .selectedRowKeys;\n  let requestData = {\n    target: \"phoneCallLog\",\n    action: \"del\",\n    data: {\n      type: type,\n      ids: selectedRowKeys,\n      logType: getItemByKey(vm.data, \"calllog\", \"callHistoryType\").value,\n    },\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm, vm.$t(\"CallLogDeleteSuccess\"));\n    let tableFooterData = getItemByKey(vm.data, \"calllog\", \"calllog\")\n      .tableFooterData;\n    if (type != \"all\") {\n      let sumPage = Math.ceil(\n        (tableFooterData.sum - selectedRowKeys.length) /\n          tableFooterData.pageNumber\n      );\n      sumPage = sumPage == 0 ? 1 : sumPage;\n      let page =\n        tableFooterData.curPage >= sumPage ? sumPage : tableFooterData.curPage;\n      getCallLogsTableData(vm, page);\n    } else {\n      getCallLogsTableData(vm, 1);\n    }\n  });\n}\n\nfunction onExport(vm) {\n  let requestData = {\n    target: \"phoneCallLog\",\n    action: \"export\",\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm, vm.$t(\"ExportSuccess\"));\n    let address = response.data.data.address;\n    window.open(address);\n  });\n}\n</script>"],"sourceRoot":"src/views"}]}