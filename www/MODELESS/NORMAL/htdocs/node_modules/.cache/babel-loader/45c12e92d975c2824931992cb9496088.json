{"remainingRequest":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/PhoneTime.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/PhoneTime.vue","mtime":1600155105014},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js","mtime":1600155105338},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js","mtime":1600155105414}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PhoneTime.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <CommonPage :data=\"data\" @onDataChange=\"onCommonPageDataChange($event)\"></CommonPage>\n</template>\n\n<script>\nimport CommonPage from \"@/components/CommonPage.vue\";\nimport {\n  showRequestSuccess,\n  getIndexByKey,\n  getItemByKey,\n  deepClone,\n  notContainInvalid_NotEmpty,\n  isAnInterger\n} from \"@/js/common.js\";\nimport moment from 'moment';\n\nexport default {\n  components: {\n    CommonPage,\n  },\n  data(){\n    return{\n      changedCfgData:{},\n      submitCfgData:{},\n      apiData: {},\n      data: {\n        getDataSuccess: false,\n      },\n      autoDate: Boolean,\n      date: new Date(),\n      use12Hours: Boolean,\n      timeZoneItems: [],\n      dateFormatItems: [\n        {key: 0, label: \"YYYY-MM-DD\"},\n        {key: 1, label: \"YYYY/MM/DD\"},\n        {key: 2, label: \"DD-MM-YYYY\"},\n        {key: 3, label: \"DD/MM/YYYY\"},\n        {key: 6, label: \"MM-DD-YYYY\"},\n        {key: 7, label: \"MM/DD/YYYY\"},\n      ],\n    }\n  },\n  created() {\n    getData(this);\n  },\n  methods: {\n    onCommonPageDataChange: function (event) {\n      if(event.itemKey == \"automatic\"){\n        changeAutoDisabeld(this,event.newVal);\n        this.autoDate = event.newVal;\n      } else if(event.itemKey == \"Config.Settings.DATETIME.TimeFormat\"){\n        changeTimeFormat(this,event.newVal);\n        this.changedCfgData[event.itemKey] = event.newVal;\n      } else if(event.itemKey == \"Config.Settings.DATETIME.DateFormat\"){\n        changeDateFormat(this,event.newVal);\n        this.changedCfgData[event.itemKey] = event.newVal;\n      } else if(event.itemKey == \"phoneDate\"){\n        this.date = event.newVal;\n        let item = getItemByKey(\n          this.data,\n          \"timeSetting\",\n          \"phoneDate\"\n        );\n        item.value = moment(this.date);\n      } else if(event.itemKey == \"phoneTime\"){\n        this.date = event.newVal.toDate();\n        let item = getItemByKey(\n          this.data,\n          \"timeSetting\",\n          \"phoneTime\"\n        );\n        item.value = event.newVal;\n      } else if(event.itemKey == \"Config.Settings.SNTP.Name\"){\n        let itemIndex = getIndexByKey(this.timeZoneItems,event.newVal);\n        this.changedCfgData[event.itemKey] = event.newVal;\n        this.changedCfgData[\"Config.Settings.SNTP.TimeZone\"] = this.timeZoneItems[itemIndex].timeZone;\n      } else{\n        this.changedCfgData[event.itemKey] = event.newVal;\n      }\n    },\n  },\n};\n\nfunction submitData(vm) {\n  vm.data.submitLoading = true;\n\n  let requestData = {\n    target: \"phoneTime\",\n    action: \"set\",\n    configData: vm.submitCfgData,\n    data: {\n      \"Time.Year\": vm.date.getYear(),\n      \"Time.Month\": vm.date.getMonth(),\n      \"Time.Day\": vm.date.getDate(),\n      \"Time.Hour\": vm.date.getHours(),\n      \"Time.Minutes\": vm.date.getMinutes(),\n      \"Time.Seconds\": vm.date.getSeconds(),\n      \"Time.Auto\": vm.autoDate,\n    },\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm);\n    vm.data.submitLoading = false;\n  });\n}\n\nfunction getData(vm) {\n  vm.$axios.get(\"api/phoneTime/info\").then((response) => {\n    vm.getDataSuccess = true;\n    vm.apiData = response.data;\n    vm.data = response.data.data;\n    vm.changedCfgData = deepClone(response.data.configData);\n    vm.autoDate = vm.data.Time.Auto;\n\n    //获取时间\n    vm.date.setYear(vm.data.Time.Year);\n    vm.date.setMonth(vm.data.Time.Month);\n    vm.date.setDate(vm.data.Time.Day);\n    vm.date.setHours(vm.data.Time.Hour);\n    vm.date.setMinutes(vm.data.Time.Minutes);\n\n    //获取TimeZone\n    vm.timeZoneItems = [];\n    for(var i = 0; i < vm.data.TimeZones.length; i++){\n      let item = {\"key\":vm.data.TimeZones[i].TimeZoneName,\"label\":vm.data.TimeZones[i].TimeZone + ' ' +vm.data.TimeZones[i].TimeZoneName,\"timeZone\": vm.data.TimeZones[i].TimeZone};\n      vm.timeZoneItems.push(item);\n    }\n    createPageData(vm);\n\n    //判断是否自动获取时间\n    changeAutoDisabeld(vm,vm.autoDate);\n\n    //获取dateFormat\n    for(var i = 0; i < vm.dateFormatItems.length; i++){\n      if (vm.dateFormatItems[i].key.toString() == vm.apiData.configData['Config.Settings.DATETIME.DateFormat']){\n        changeDateFormat(vm, vm.dateFormatItems[i].label);\n        break;\n      }\n    }\n\n    //获取timeFormat\n    changeTimeFormat(vm,vm.apiData.configData['Config.Settings.DATETIME.TimeFormat']);\n  });\n}\n\nfunction getCommitData(vm){\n  vm.submitCfgData = {};\n  for (var changedKey in vm.changedCfgData) {\n    if(vm.apiData.configData[changedKey] != vm.changedCfgData[changedKey]){\n      vm.submitCfgData[changedKey] = vm.changedCfgData[changedKey];\n    }\n  }\n}\n\nfunction changeAutoDisabeld(vm,autoValue){\n  let item1 = getItemByKey(\n    vm.data,\n    \"timeSetting\",\n    \"phoneDate\"\n  );\n  let item2 = getItemByKey(\n    vm.data,\n    \"timeSetting\",\n    \"phoneTime\"\n  );\n  if(autoValue == 1){\n    item1.disabled = true;\n    item2.disabled = true;\n  } else{\n    item1.disabled = false;\n    item2.disabled = false;\n  }\n}\n\nfunction changeDateFormat(vm,dateFormat){\n  let item = getItemByKey(\n    vm.data,\n    \"timeSetting\",\n    \"phoneDate\"\n  );\n  item.dateFormat = dateFormat;\n}\n\nfunction changeTimeFormat(vm,timeFormat){\n  let item = getItemByKey(\n    vm.data,\n    \"timeSetting\",\n    \"phoneTime\"\n  );\n  if(timeFormat == 0){\n    item.timeFormat = 'h:mm a';\n    item.use12Hours = true;\n  } else{\n    item.timeFormat = 'HH:mm ';\n    item.use12Hours = false;\n  }\n}\n\nfunction checkCommitData(vm){\n  let success = true;\n  //ntpServer1校验\n  if(\"undefined\" != typeof(vm.submitCfgData[\"Config.Settings.SNTP.NTPServer1\"])){\n    if(!notContainInvalid_NotEmpty(vm.submitCfgData[\"Config.Settings.SNTP.NTPServer1\"])){\n      let item = getItemByKey(\n        vm.data,\n        \"ntp\",\n        \"Config.Settings.SNTP.NTPServer1\"\n      );\n      item.isWarn = true;\n      success = false;\n    }\n  }\n\n  //UpdateInterval校验\n  if(\"undefined\" != typeof(vm.submitCfgData[\"Config.Settings.SNTP.Interval\"])){\n    if(!isAnInterger(vm.submitCfgData[\"Config.Settings.SNTP.Interval\"]) || Number(vm.submitCfgData[\"Config.Settings.SNTP.Interval\"]) < 3600){\n      let item = getItemByKey(\n        vm.data,\n        \"ntp\",\n        \"Config.Settings.SNTP.Interval\"\n      );\n      item.isWarn = true;\n      success = false;\n    }\n  }\n\n  return success;\n}\n\nfunction createPageData(vm) {\n  vm.data = {\n    getDataSuccess: true,\n    breadCrumb: {\n      firstTitle: vm.$t(\"Phone\"),\n      secondTitle: vm.$t(\"Time\"),\n    },\n    onSubmit: function () {\n      getCommitData(vm);\n      if (!checkCommitData(vm)) {\n        return;\n      }\n      submitData(vm);\n    },\n    onCancel: function () {\n      vm.data.cancelLoading = true;\n      getData(vm);\n    },\n    submitLoading: false,\n    cancelLoading: false,\n    contents: [],\n  };\n  vm.data.contents.push(createTimeSettingContent(vm));\n  vm.data.contents.push(createNTPContent(vm));\n}\n\nfunction createTimeSettingContent(vm) {\n  let content = {\n    key: \"timeSetting\",\n    title: vm.$t(\"TimeSettingLabel\"),\n    titleDescription: vm.$t(\"TimeSettingLabel\"),\n    items: [\n      {\n        title: vm.$t(\"AutomaticDateTime\"),\n        type: \"checkbox\",\n        key: \"automatic\",\n        value: vm.autoDate,\n      },\n      {\n        title: vm.$t(\"TimeFormat\"),\n        type: \"select\",\n        key: \"Config.Settings.DATETIME.TimeFormat\",\n        value: vm.apiData.configData[\"Config.Settings.DATETIME.TimeFormat\"],\n        selectItems: [\n          {key: 1, label: \"24-Hour-Format\"},\n          {key: 0, label: \"12-Hour-Format\"},\n        ],\n      },\n      {\n        title: vm.$t(\"DateFormat\"),\n        type: \"select\",\n        key: \"Config.Settings.DATETIME.DateFormat\",\n        value: vm.apiData.configData[\"Config.Settings.DATETIME.DateFormat\"],\n        selectItems: vm.dateFormatItems,\n      },\n      {\n        title: vm.$t(\"DateLabel\"),\n        type: \"date\",\n        key: \"phoneDate\",\n        value: moment(vm.date),\n      },\n      {\n        title: vm.$t(\"Time\"),\n        type: \"time\",\n        key: \"phoneTime\",\n        value: moment(vm.date),\n      },\n      {\n        title: vm.$t(\"TimeZone\"),\n        type: \"select\",\n        key: \"Config.Settings.SNTP.Name\",\n        value: vm.apiData.configData[\"Config.Settings.SNTP.Name\"],\n        selectItems: vm.timeZoneItems,\n      },\n    ],\n  };\n  return content;\n}\n\nfunction createNTPContent(vm) {\n  let content = {\n    key: \"ntp\",\n    title: vm.$t(\"NTP\"),\n    titleDescription: vm.$t(\"NTP\"),\n    items: [\n      {\n        title: vm.$t(\"PreferredServer\"),\n        type: \"input\",\n        isWarn: false,\n        warnLabel: vm.$t(\"error\"),\n        key: \"Config.Settings.SNTP.NTPServer1\",\n        value: vm.apiData.configData[\"Config.Settings.SNTP.NTPServer1\"],\n      },\n      {\n        title: vm.$t(\"UpdateInterval\"),\n        type: \"input\",\n        showHint:true,\n        hintContent:vm.$t(\"(>=3600Sec)\"),\n        isWarn: false,\n        warnLabel: vm.$t(\"error\"),\n        key: \"Config.Settings.SNTP.Interval\",\n        value: vm.apiData.configData[\"Config.Settings.SNTP.Interval\"],\n      },\n    ],\n  };\n  return content;\n}\n</script>"],"sourceRoot":"src/views"}]}