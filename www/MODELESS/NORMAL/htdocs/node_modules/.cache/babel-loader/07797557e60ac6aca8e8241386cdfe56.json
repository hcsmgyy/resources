{"remainingRequest":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/StatusBasic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/StatusBasic.vue","mtime":1600155105014},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js","mtime":1600155105338},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js","mtime":1600155105414}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IENvbW1vblBhZ2UgZnJvbSAiQC9jb21wb25lbnRzL0NvbW1vblBhZ2UudnVlIjsKaW1wb3J0IHsgc2hvd1JlcXVlc3RTdWNjZXNzLCBnZXRBY2NvdW50U3RhdHVzU3RyIH0gZnJvbSAiQC9qcy9jb21tb24uanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQ29tbW9uUGFnZTogQ29tbW9uUGFnZQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFwaURhdGE6IHt9LAogICAgICBkYXRhOiB7CiAgICAgICAgZ2V0RGF0YVN1Y2Nlc3M6IGZhbHNlCiAgICAgIH0sCiAgICAgIGFjY291bnRTdGF0ZV9kYXRhOiBbXSwKICAgICAgYWNjb3VudE5hbWVfZGF0YTogW10sCiAgICAgIGFjY291bnRTZXJ2ZXJfZGF0YTogW10sCiAgICAgIGFjY291bnRJdGVtczogW10KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgZ2V0RGF0YSh0aGlzKTsKICB9Cn07CgpmdW5jdGlvbiBnZXREYXRhKHZtKSB7CiAgdm0uJGF4aW9zLmdldCgiYXBpL3N0YXR1cy9pbmZvIikudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgIHZtLmFwaURhdGEgPSByZXNwb25zZS5kYXRhOyAvL1R5cGUKCiAgICBpZiAodm0uYXBpRGF0YS5kYXRhLk5ldHdvcmsuTEFOUG9ydFR5cGUgPT0gMCkgewogICAgICB2bS5hcGlEYXRhLmRhdGEuTmV0d29yay5MQU5Qb3J0VHlwZSA9ICdESENQQVVUTyc7CiAgICB9IGVsc2UgaWYgKHZtLmFwaURhdGEuZGF0YS5OZXR3b3JrLkxBTlBvcnRUeXBlID09IDEpIHsKICAgICAgdm0uYXBpRGF0YS5kYXRhLk5ldHdvcmsuTEFOUG9ydFR5cGUgPSAnUFBQT0UnOwogICAgfSBlbHNlIGlmICh2bS5hcGlEYXRhLmRhdGEuTmV0d29yay5MQU5Qb3J0VHlwZSA9PSAyKSB7CiAgICAgIHZtLmFwaURhdGEuZGF0YS5OZXR3b3JrLkxBTlBvcnRUeXBlID0gJ1N0YXRpY0lQJzsKICAgIH0gLy9BY2NvdW50CgoKICAgIHZtLmFjY291bnRJdGVtcyA9IFtdOwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdm0uYXBpRGF0YS5kYXRhLkFjY291bnRzLmxlbmd0aDsgaSsrKSB7CiAgICAgIHZtLmFjY291bnRTZXJ2ZXJfZGF0YVtpXSA9IHZtLmFwaURhdGEuZGF0YS5BY2NvdW50c1tpXS5BY2NvdW50U2VydmVyID09ICIiID8gJ05vbmUnIDogdm0uYXBpRGF0YS5kYXRhLkFjY291bnRzW2ldLkFjY291bnRTZXJ2ZXI7CiAgICAgIHZtLmFjY291bnROYW1lX2RhdGFbaV0gPSB2bS5hcGlEYXRhLmRhdGEuQWNjb3VudHNbaV0uQWNjb3VudE5hbWUgPT0gIiIgPyAnTm9uZScgOiB2bS5hcGlEYXRhLmRhdGEuQWNjb3VudHNbaV0uQWNjb3VudE5hbWU7CiAgICAgIHZtLmFjY291bnRTdGF0ZV9kYXRhW2ldID0gZ2V0QWNjb3VudFN0YXR1c1N0cih2bSwgdm0uYXBpRGF0YS5kYXRhLkFjY291bnRzW2ldLkFjY291bnRTdGF0dWUpOwogICAgICB2YXIgaXRlbTEgPSB7CiAgICAgICAgInRpdGxlIjogdm0uJHQoJ0FjY291bnQnKSArIChpICsgMSksCiAgICAgICAgInR5cGUiOiAibGFiZWwiLAogICAgICAgICJrZXkiOiAiZGF0YS5BY2NvdW50cy5OYW1lIiArIGksCiAgICAgICAgInZhbHVlIjogdm0uYWNjb3VudE5hbWVfZGF0YVtpXSArICdAJyArIHZtLmFjY291bnRTZXJ2ZXJfZGF0YVtpXQogICAgICB9OwogICAgICB2YXIgaXRlbTIgPSB7CiAgICAgICAgInRpdGxlIjogIiIsCiAgICAgICAgInR5cGUiOiAibGFiZWwiLAogICAgICAgICJrZXkiOiAiZGF0YS5BY2NvdW50cy5TdGF0ZSIgKyBpLAogICAgICAgICJ2YWx1ZSI6IHZtLmFjY291bnRTdGF0ZV9kYXRhW2ldCiAgICAgIH07CiAgICAgIHZtLmFjY291bnRJdGVtcy5wdXNoKGl0ZW0xKTsKICAgICAgdm0uYWNjb3VudEl0ZW1zLnB1c2goaXRlbTIpOwogICAgfQoKICAgIGNyZWF0ZVBhZ2VEYXRhKHZtKTsKICAgIHZtLmdldERhdGFTdWNjZXNzID0gdHJ1ZTsKICB9KTsKfQoKZnVuY3Rpb24gY3JlYXRlUGFnZURhdGEodm0pIHsKICB2bS5kYXRhID0gewogICAgZ2V0RGF0YVN1Y2Nlc3M6IHRydWUsCiAgICBicmVhZENydW1iOiB7CiAgICAgIGZpcnN0VGl0bGU6IHZtLiR0KCJTdGF0dXMiKSwKICAgICAgc2Vjb25kVGl0bGU6IHZtLiR0KCJCYXNpYyIpCiAgICB9LAogICAgb25TdWJtaXQ6IGZ1bmN0aW9uIG9uU3VibWl0KCkgewogICAgICBzdWJtaXREYXRhKHZtKTsKICAgIH0sCiAgICBvbkNhbmNlbDogZnVuY3Rpb24gb25DYW5jZWwoKSB7CiAgICAgIHZtLmRhdGEuY2FuY2VsTG9hZGluZyA9IHRydWU7CiAgICAgIGdldERhdGEodm0pOwogICAgfSwKICAgIHN1Ym1pdExvYWRpbmc6IGZhbHNlLAogICAgY2FuY2VsTG9hZGluZzogZmFsc2UsCiAgICBzaG93U3VibWl0OiBmYWxzZSwKICAgIGNvbnRlbnRzOiBbewogICAgICBrZXk6ICJwcm9kdWN0SW5mbyIsCiAgICAgIHRpdGxlOiB2bS4kdCgiUHJvZHVjdEluZm8iKSwKICAgICAgdGl0bGVEZXNjcmlwdGlvbjogdm0uJHQoIlByb2R1Y3RJbmZvcm1hdGlvbkRlc2MiKSwKICAgICAgaXRlbXM6IFt7CiAgICAgICAgdGl0bGU6IHZtLiR0KCdQcm9kdWN0UmVsZWFzZU5hbWUnKSwKICAgICAgICB0eXBlOiAibGFiZWwiLAogICAgICAgIGtleTogImRhdGEuUHJvZHVjdC5Qcm9kdWN0TmFtZSIsCiAgICAgICAgdmFsdWU6IHZtLmFwaURhdGEuZGF0YS5Qcm9kdWN0LlByb2R1Y3ROYW1lCiAgICAgIH0sIHsKICAgICAgICB0aXRsZTogdm0uJHQoJ0hhcmR3YXJlTW9kZWwnKSwKICAgICAgICB0eXBlOiAibGFiZWwiLAogICAgICAgIGtleTogImRhdGEuUHJvZHVjdC5IYXJkd2FyZU1vZGVsIiwKICAgICAgICB2YWx1ZTogdm0uYXBpRGF0YS5kYXRhLlByb2R1Y3QuSGFyZHdhcmVNb2RlbAogICAgICB9LCB7CiAgICAgICAgdGl0bGU6IHZtLiR0KCdNQUNBZGRyZXNzJyksCiAgICAgICAgdHlwZTogImxhYmVsIiwKICAgICAgICBrZXk6ICJkYXRhLlByb2R1Y3QuTUFDQWRkcmVzcyIsCiAgICAgICAgdmFsdWU6IHZtLmFwaURhdGEuZGF0YS5Qcm9kdWN0Lk1BQ0FkZHJlc3MKICAgICAgfSwgewogICAgICAgIHRpdGxlOiB2bS4kdCgnRmlybXdhcmVWZXJzaW9uJyksCiAgICAgICAgdHlwZTogImxhYmVsIiwKICAgICAgICBrZXk6ICJkYXRhLlByb2R1Y3QuRmlybXdhcmVWZXJzaW9uIiwKICAgICAgICB2YWx1ZTogdm0uYXBpRGF0YS5kYXRhLlByb2R1Y3QuRmlybXdhcmVWZXJzaW9uCiAgICAgIH0sIHsKICAgICAgICB0aXRsZTogdm0uJHQoJ0hhcmR3YXJlVmVyc2lvbicpLAogICAgICAgIHR5cGU6ICJsYWJlbCIsCiAgICAgICAga2V5OiAiZGF0YS5Qcm9kdWN0LkhhcmR3YXJlVmVyc2lvbiIsCiAgICAgICAgdmFsdWU6IHZtLmFwaURhdGEuZGF0YS5Qcm9kdWN0LkhhcmR3YXJlVmVyc2lvbgogICAgICB9XQogICAgfSwgewogICAgICBrZXk6ICJuZXR3b3JrSW5mbyIsCiAgICAgIHRpdGxlOiB2bS4kdCgiTmV0d29ya0luZm8iKSwKICAgICAgdGl0bGVEZXNjcmlwdGlvbjogdm0uJHQoIk5ldHdvcmtJbmZvcm1hdGlvbkRlc2MiKSwKICAgICAgaXRlbXM6IFt7CiAgICAgICAgdGl0bGU6IHZtLiR0KCdMQU5Qb3J0VHlwZScpLAogICAgICAgIHR5cGU6ICJsYWJlbCIsCiAgICAgICAga2V5OiAiZGF0YS5OZXR3b3JrLkxBTlBvcnRUeXBlIiwKICAgICAgICB2YWx1ZTogdm0uJHQodm0uYXBpRGF0YS5kYXRhLk5ldHdvcmsuTEFOUG9ydFR5cGUpCiAgICAgIH0sIHsKICAgICAgICB0aXRsZTogdm0uJHQoJ0xpbmtTdGF0dXMnKSwKICAgICAgICB0eXBlOiAibGFiZWwiLAogICAgICAgIGtleTogImRhdGEuTmV0d29yay5MaW5rU3RhdHVzIiwKICAgICAgICB2YWx1ZTogdm0uYXBpRGF0YS5kYXRhLk5ldHdvcmsuTGlua1N0YXR1cyA9PSAxID8gdm0uJHQoJ0Nvbm5lY3RlZCcpIDogdm0uJHQoJ0Rpc2Nvbm5lY3QnKQogICAgICB9LCB7CiAgICAgICAgdGl0bGU6IHZtLiR0KCdJUEFkZHJlc3MnKSwKICAgICAgICB0eXBlOiAibGFiZWwiLAogICAgICAgIGtleTogImRhdGEuTmV0d29yay5JUEFkZHJlc3MiLAogICAgICAgIHZhbHVlOiB2bS5hcGlEYXRhLmRhdGEuTmV0d29yay5JUEFkZHJlc3MKICAgICAgfSwgewogICAgICAgIHRpdGxlOiB2bS4kdCgnU3VibmV0TWFzaycpLAogICAgICAgIHR5cGU6ICJsYWJlbCIsCiAgICAgICAga2V5OiAiZGF0YS5OZXR3b3JrLlN1Ym5ldE1hc2siLAogICAgICAgIHZhbHVlOiB2bS5hcGlEYXRhLmRhdGEuTmV0d29yay5TdWJuZXRNYXNrCiAgICAgIH0sIHsKICAgICAgICB0aXRsZTogdm0uJHQoJ0dhdGVXYXknKSwKICAgICAgICB0eXBlOiAibGFiZWwiLAogICAgICAgIGtleTogImRhdGEuTmV0d29yay5HYXRld2F5IiwKICAgICAgICB2YWx1ZTogdm0uYXBpRGF0YS5kYXRhLk5ldHdvcmsuR2F0ZXdheQogICAgICB9LCB7CiAgICAgICAgdGl0bGU6IHZtLiR0KCdQcmVmZXJyZWRETlMnKSwKICAgICAgICB0eXBlOiAibGFiZWwiLAogICAgICAgIGtleTogImRhdGEuTmV0d29yay5QcmVmZXJyZWRETlMiLAogICAgICAgIHZhbHVlOiB2bS5hcGlEYXRhLmRhdGEuTmV0d29yay5QcmVmZXJyZWRETlMKICAgICAgfSwgewogICAgICAgIHRpdGxlOiB2bS4kdCgnQWx0ZXJuYXRlRE5TJyksCiAgICAgICAgdHlwZTogImxhYmVsIiwKICAgICAgICBrZXk6ICJkYXRhLk5ldHdvcmsuQWx0ZXJuYXRlRE5TIiwKICAgICAgICB2YWx1ZTogdm0uYXBpRGF0YS5kYXRhLk5ldHdvcmsuQWx0ZXJuYXRlRE5TCiAgICAgIH1dCiAgICB9LCB7CiAgICAgIGtleTogImFjY291bnRJbmZvIiwKICAgICAgdGl0bGU6IHZtLiR0KCJBY2NvdW50SW5mbyIpLAogICAgICB0aXRsZURlc2NyaXB0aW9uOiB2bS4kdCgiQWNjb3VudEluZm9ybWF0aW9uRGVzYyIpLAogICAgICBpdGVtczogdm0uYWNjb3VudEl0ZW1zCiAgICB9XQogIH07Cn0="},{"version":3,"sources":["StatusBasic.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <CommonPage :data=\"data\"></CommonPage>\n  </div>\n</template>\n\n<script>\nimport CommonPage from \"@/components/CommonPage.vue\";\nimport { showRequestSuccess,getAccountStatusStr } from \"@/js/common.js\";\n\nexport default {\n  components: {\n    CommonPage,\n  },\n  data() {\n    return {\n      apiData: {},\n      data: {\n        getDataSuccess: false,\n      },\n      accountState_data: [],\n      accountName_data: [],\n      accountServer_data: [],\n      accountItems: [],\n    };\n  },\n  created() {\n    getData(this);\n  },\n};\n\nfunction getData(vm) {\n  vm.$axios.get(\"api/status/info\").then((response) => {\n    vm.apiData = response.data;\n    //Type\n    if (vm.apiData.data.Network.LANPortType == 0){\n      vm.apiData.data.Network.LANPortType = 'DHCPAUTO';\n    } else if (vm.apiData.data.Network.LANPortType == 1){\n      vm.apiData.data.Network.LANPortType = 'PPPOE';\n    } else if (vm.apiData.data.Network.LANPortType == 2){\n      vm.apiData.data.Network.LANPortType = 'StaticIP';\n    }\n    //Account\n\n    vm.accountItems = [];\n    for (var i = 0; i < vm.apiData.data.Accounts.length; i++){\n      vm.accountServer_data[i] = vm.apiData.data.Accounts[i].AccountServer == \"\" ? 'None' : vm.apiData.data.Accounts[i].AccountServer;\n      vm.accountName_data[i] = vm.apiData.data.Accounts[i].AccountName == \"\" ? 'None' : vm.apiData.data.Accounts[i].AccountName;\n      vm.accountState_data[i] = getAccountStatusStr(vm,vm.apiData.data.Accounts[i].AccountStatue);\n      let item1 = {\"title\": vm.$t('Account')+(i+1),\"type\": \"label\",\"key\":\"data.Accounts.Name\"+i,\"value\": vm.accountName_data[i]+'@'+vm.accountServer_data[i]};\n      let item2 = {\"title\": \"\",\"type\": \"label\",\"key\":\"data.Accounts.State\"+i,\"value\": vm.accountState_data[i]};\n      vm.accountItems.push(item1);\n      vm.accountItems.push(item2);\n    }\n\n    createPageData(vm);\n    vm.getDataSuccess = true;\n  });\n}\n\nfunction createPageData(vm) {\n  vm.data = {\n    getDataSuccess: true,\n    breadCrumb: {\n      firstTitle: vm.$t(\"Status\"),\n      secondTitle: vm.$t(\"Basic\"),\n    },\n    onSubmit: function () {\n      submitData(vm);\n    },\n    onCancel: function () {\n      vm.data.cancelLoading = true;\n      getData(vm);\n    },\n    submitLoading: false,\n    cancelLoading: false,\n    showSubmit: false,\n    contents: [\n      {\n        key: \"productInfo\",\n        title: vm.$t(\"ProductInfo\"),\n        titleDescription: vm.$t(\"ProductInformationDesc\"),\n        items: [\n          {\n            title: vm.$t('ProductReleaseName'),\n            type: \"label\",\n            key: \"data.Product.ProductName\",\n            value: vm.apiData.data.Product.ProductName,\n          },\n          {\n            title: vm.$t('HardwareModel'),\n            type: \"label\",\n            key: \"data.Product.HardwareModel\",\n            value: vm.apiData.data.Product.HardwareModel,\n          },\n          {\n            title: vm.$t('MACAddress'),\n            type: \"label\",\n            key: \"data.Product.MACAddress\",\n            value: vm.apiData.data.Product.MACAddress,\n          },\n          {\n            title: vm.$t('FirmwareVersion'),\n            type: \"label\",\n            key: \"data.Product.FirmwareVersion\",\n            value: vm.apiData.data.Product.FirmwareVersion,\n          },\n          {\n            title: vm.$t('HardwareVersion'),\n            type: \"label\",\n            key: \"data.Product.HardwareVersion\",\n            value: vm.apiData.data.Product.HardwareVersion,\n          },\n        ],\n      },\n      {\n        key: \"networkInfo\",\n        title: vm.$t(\"NetworkInfo\"),\n        titleDescription: vm.$t(\"NetworkInformationDesc\"),\n        items: [\n          {\n            title: vm.$t('LANPortType'),\n            type: \"label\",\n            key: \"data.Network.LANPortType\",\n            value: vm.$t(vm.apiData.data.Network.LANPortType),\n          },\n          {\n            title: vm.$t('LinkStatus'),\n            type: \"label\",\n            key: \"data.Network.LinkStatus\",\n            value: vm.apiData.data.Network.LinkStatus==1 ? vm.$t('Connected') : vm.$t('Disconnect'),\n          },\n          {\n            title: vm.$t('IPAddress'),\n            type: \"label\",\n            key: \"data.Network.IPAddress\",\n            value: vm.apiData.data.Network.IPAddress,\n          },\n          {\n            title: vm.$t('SubnetMask'),\n            type: \"label\",\n            key: \"data.Network.SubnetMask\",\n            value: vm.apiData.data.Network.SubnetMask,\n          },\n          {\n            title: vm.$t('GateWay'),\n            type: \"label\",\n            key: \"data.Network.Gateway\",\n            value: vm.apiData.data.Network.Gateway,\n          },\n          {\n            title: vm.$t('PreferredDNS'),\n            type: \"label\",\n            key: \"data.Network.PreferredDNS\",\n            value: vm.apiData.data.Network.PreferredDNS,\n          },\n          {\n            title: vm.$t('AlternateDNS'),\n            type: \"label\",\n            key: \"data.Network.AlternateDNS\",\n            value: vm.apiData.data.Network.AlternateDNS,\n          },\n        ],\n      },\n      {\n        key: \"accountInfo\",\n        title: vm.$t(\"AccountInfo\"),\n        titleDescription: vm.$t(\"AccountInformationDesc\"),\n        items: vm.accountItems,\n      },\n    ],\n  };\n}\n\n</script>"],"sourceRoot":"src/views"}]}