{"remainingRequest":"E:\\code\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\resources\\www\\MODELESS\\NORMAL\\htdocs\\src\\views\\PhoneMulicast.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\resources\\www\\MODELESS\\NORMAL\\htdocs\\src\\views\\PhoneMulicast.vue","mtime":1624613275301},{"path":"E:\\code\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624613261239},{"path":"E:\\code\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\babel-loader\\lib\\index.js","mtime":1624613260275},{"path":"E:\\code\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624613261239},{"path":"E:\\code\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\vue-loader\\lib\\index.js","mtime":1624613274496}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PhoneMulicast.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PhoneMulicast.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <CommonPage :data=\"data\" @onDataChange=\"onCommonPageDataChange($event)\"></CommonPage>\r\n</template>\r\n\r\n<script>\r\nimport CommonPage from \"@/components/CommonPage.vue\";\r\nimport {\r\n  showRequestSuccess,\r\n  showErrorInfo,\r\n  isPort,\r\n  deepClone,\r\n} from \"@/js/common.js\";\r\n\r\nexport default {\r\n  components: {\r\n    CommonPage,\r\n  },\r\n  data() {\r\n    return {\r\n      changedCfgData: {},\r\n      submitCfgData: {},\r\n      apiData: {},\r\n      data: {\r\n        getDataSuccess: false,\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    getData(this);\r\n  },\r\n  methods: {\r\n    onCommonPageDataChange: function (event) {\r\n      //mulitcast List部分\r\n      if (event.contentKey == \"mulitcastList\") {\r\n        //单选逻辑\r\n        let falseCount = 0;\r\n        for (let i = 0; i < event.newVal.length; i++) {\r\n          this.changedCfgData[\"Config.Multicast.GROUP\" + (i + 1) + \".IP\"] =\r\n            event.newVal[i].multicastAddress.value;\r\n          if (!event.newVal[i].enabled.value) {\r\n            falseCount++;\r\n          }\r\n          if (event.newVal[i].enabled.value && !event.oldVal[i].enabled.value) {\r\n            this.changedCfgData[\r\n              \"Config.Multicast.SELECTEDGROUP.SelectedGroup\"\r\n            ] = i + 1;\r\n            for (let j = 0; j < event.newVal.length; j++) {\r\n              if (i != j) {\r\n                this.data.contents[event.contentIndex].items[\r\n                  event.itemIndex\r\n                ].tableData[j].enabled.value = false;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (falseCount == event.newVal.length) {\r\n          this.changedCfgData[\"Config.Multicast.SELECTEDGROUP.SelectedGroup\"] =\r\n            \"0\";\r\n        }\r\n      } else if (event.contentKey == \"listenList\") {\r\n        //listen list 部分\r\n        for (let i = 0; i < event.newVal.length; i++) {\r\n          this.changedCfgData[\"Config.Multicast.LISTEN\" + i + \".IP\"] =\r\n            event.newVal[i].listeningAddress.value;\r\n          this.changedCfgData[\"Config.Multicast.LISTEN\" + i + \".Label\"] =\r\n            event.newVal[i].label.value;\r\n        }\r\n      }\r\n      // checkCommitData(this);\r\n    },\r\n  },\r\n};\r\nfunction checkCommitData(vm) {\r\n  let success = true;\r\n  //multicast list\r\n  let multicastListContentIndex = vm.data.contents\r\n    .map((item) => item.key)\r\n    .indexOf(\"mulitcastList\");\r\n  let multicastListItemIndex = vm.data.contents[multicastListContentIndex].items\r\n    .map((item) => item.key)\r\n    .indexOf(\"mulitcastList\");\r\n  let mulitcastTableData =\r\n    vm.data.contents[multicastListContentIndex].items[multicastListItemIndex]\r\n      .tableData;\r\n  for (let i = 0; i < mulitcastTableData.length; i++) {\r\n    mulitcastTableData[i].multicastAddress.isWarn = false;\r\n    if (mulitcastTableData[i].enabled.value == true && mulitcastTableData[i].multicastAddress.value == \"\") {\r\n      //address不允许为null\r\n      mulitcastTableData[i].multicastAddress.isWarn = true;\r\n      mulitcastTableData[i].multicastAddress.warnLabel = vm.$t(\"MulticastGroupNoEmpty\");\r\n      success = false;\r\n    }\r\n    if (mulitcastTableData[i].multicastAddress.value == \"\") {\r\n      continue;\r\n    }\r\n    let port = getPort(mulitcastTableData[i].multicastAddress.value);\r\n    if (port == \"\" || !(isPort(port) && Number(port) >= 1024)) {\r\n      //不允许为空\r\n      mulitcastTableData[i].multicastAddress.isWarn = true;\r\n      mulitcastTableData[i].multicastAddress.warnLabel = vm.$t(\"MulticastGroupUnvalid\");\r\n      success = false;\r\n    } else {\r\n      //不允许重复\r\n      for (let j = 0; j < mulitcastTableData.length; j++) {\r\n        if (\r\n          i != j &&\r\n          getPort(mulitcastTableData[i].multicastAddress.value) ==\r\n            getPort(mulitcastTableData[j].multicastAddress.value)\r\n        ) {\r\n          mulitcastTableData[i].multicastAddress.isWarn = true;\r\n          mulitcastTableData[i].multicastAddress.warnLabel = vm.$t(\r\n            \"WarningSamePortExist\"\r\n          );\r\n          mulitcastTableData[j].multicastAddress.isWarn = true;\r\n          mulitcastTableData[j].multicastAddress.warnLabel = vm.$t(\r\n            \"WarningSamePortExist\"\r\n          );\r\n          success = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //listen list\r\n  let listenListContentIndex = vm.data.contents\r\n    .map((item) => item.key)\r\n    .indexOf(\"listenList\");\r\n  let listenListItemIndex = vm.data.contents[listenListContentIndex].items\r\n    .map((item) => item.key)\r\n    .indexOf(\"listenList\");\r\n  let listenTableData =\r\n    vm.data.contents[listenListContentIndex].items[listenListItemIndex]\r\n      .tableData;\r\n  for (let i = 0; i < listenTableData.length; i++) {\r\n    listenTableData[i].listeningAddress.isWarn = false;\r\n    if (listenTableData[i].listeningAddress.value == \"\") {\r\n      continue;\r\n    }\r\n    let port = getPort(listenTableData[i].listeningAddress.value);\r\n    if (port == \"\" || !(isPort(port) && Number(port) >= 1024)) {\r\n      //不允许为空\r\n      listenTableData[i].listeningAddress.isWarn = true;\r\n      listenTableData[i].listeningAddress.warnLabel = vm.$t(\"ListenGroupUnvalid\");\r\n      success = false;\r\n    } else {\r\n      //不允许重复\r\n      for (let j = 0; j < listenTableData.length; j++) {\r\n        if (\r\n          i != j &&\r\n          getPort(listenTableData[i].listeningAddress.value) ==\r\n            getPort(listenTableData[j].listeningAddress.value)\r\n        ) {\r\n          listenTableData[i].listeningAddress.isWarn = true;\r\n          listenTableData[i].listeningAddress.warnLabel = vm.$t(\r\n            \"WarningSamePortExist\"\r\n          );\r\n          listenTableData[j].listeningAddress.isWarn = true;\r\n          listenTableData[j].listeningAddress.warnLabel = vm.$t(\r\n            \"WarningSamePortExist\"\r\n          );\r\n          success = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return success;\r\n}\r\n\r\nfunction getPort(value) {\r\n  return value.indexOf(\":\") == -1\r\n    ? \"\"\r\n    : value.split(\":\")[value.split(\":\").length - 1];\r\n}\r\n\r\nfunction submitData(vm) {\r\n  vm.data.submitLoading = true;\r\n\r\n  let requestData = {\r\n    target: \"phoneIntercom\",\r\n    action: \"set\",\r\n    configData: vm.submitCfgData,\r\n  };\r\n  vm.$axios.post(\"api\", requestData).then((response) => {\r\n    if (\"undefined\" != typeof response) {\r\n      showRequestSuccess(vm);\r\n    }\r\n    vm.data.submitLoading = false;\r\n  });\r\n}\r\n\r\nfunction getData(vm) {\r\n  vm.$axios.get(\"api/phoneMulticast/info\").then((response) => {\r\n    vm.getDataSuccess = true;\r\n    vm.apiData = response.data;\r\n    vm.changedCfgData = deepClone(response.data.configData);\r\n    createPageData(vm);\r\n  });\r\n}\r\n\r\nfunction getCommitData(vm) {\r\n  vm.submitCfgData = {};\r\n  for (var changedKey in vm.changedCfgData) {\r\n    if (vm.apiData.configData[changedKey] != vm.changedCfgData[changedKey]) {\r\n      vm.submitCfgData[changedKey] = vm.changedCfgData[changedKey];\r\n    }\r\n  }\r\n}\r\n\r\nfunction createPageData(vm) {\r\n  let mulitcastListTableData = [];\r\n  let listenListTableData = [];\r\n  for (let i = 1; i <= 3; i++) {\r\n    let mulitcastData = {\r\n      key: i - 1,\r\n      mluticastGroup: vm.$t(\"MulticastGroup\") + \" \" + i,\r\n      multicastAddress: {\r\n        value: vm.apiData.configData[\"Config.Multicast.GROUP\" + i + \".IP\"],\r\n        isWarn: false,\r\n        warnLabel: \"\",\r\n      },\r\n      enabled: {\r\n        value:\r\n          vm.apiData.configData[\r\n            \"Config.Multicast.SELECTEDGROUP.SelectedGroup\"\r\n          ] == i,\r\n        disabled: false,\r\n      },\r\n    };\r\n    mulitcastListTableData.push(mulitcastData);\r\n\r\n    let listenData = {\r\n      key: i - 1,\r\n      listeningAddress: {\r\n        value:\r\n          vm.apiData.configData[\"Config.Multicast.LISTEN\" + (i - 1) + \".IP\"],\r\n        isWarn: false,\r\n        warnLabel: \"\",\r\n      },\r\n      label: {\r\n        value:\r\n          vm.apiData.configData[\"Config.Multicast.LISTEN\" + (i - 1) + \".Label\"],\r\n        isWarn: false,\r\n        warnLabel: \"\",\r\n      },\r\n      listenGroup: vm.$t(\"ListenGroup\") + \" \" + i,\r\n    };\r\n    listenListTableData.push(listenData);\r\n  }\r\n\r\n  vm.data = {\r\n    getDataSuccess: true,\r\n    breadCrumb: {\r\n      firstTitle: vm.$t(\"Phone\"),\r\n      secondTitle: vm.$t(\"Multicast\"),\r\n    },\r\n    onSubmit: function () {\r\n      getCommitData(vm);\r\n      if (!checkCommitData(vm)) {\r\n        return;\r\n      }\r\n      submitData(vm);\r\n    },\r\n    onCancel: function () {\r\n      vm.data.cancelLoading = true;\r\n      getData(vm);\r\n    },\r\n    submitLoading: false,\r\n    cancelLoading: false,\r\n    contents: [\r\n      {\r\n        key: \"mulitcastList\",\r\n        title: vm.$t(\"MulticastList\"),\r\n        titleDescription: vm.$t(\"MulticastListDesc\"),\r\n        items: [\r\n          {\r\n            type: \"table\",\r\n            key: \"mulitcastList\",\r\n            tableColumns: [\r\n              {\r\n                type: \"label\",\r\n                title: vm.$t(\"MulticastGroup\"),\r\n                dataIndex: \"mluticastGroup\",\r\n                scopedSlots: { customRender: \"mluticastGroup\" },\r\n                align: \"center\",\r\n                width: \"20%\",\r\n              },\r\n              {\r\n                type: \"input\",\r\n                title: vm.$t(\"MulticastAddress\"),\r\n                dataIndex: \"multicastAddress\",\r\n                scopedSlots: { customRender: \"multicastAddress\" },\r\n                align: \"center\",\r\n                width: \"50%\",\r\n              },\r\n              {\r\n                type: \"checkbox\",\r\n                title: vm.$t(\"Enabled\"),\r\n                dataIndex: \"enabled\",\r\n                scopedSlots: { customRender: \"enabled\" },\r\n                align: \"center\",\r\n                width: \"30%\",\r\n              },\r\n            ],\r\n            tableData: mulitcastListTableData,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: \"listenList\",\r\n        title: vm.$t(\"ListenList\"),\r\n        titleDescription: vm.$t(\"ListenListDesc\"),\r\n        items: [\r\n          {\r\n            type: \"table\",\r\n            key: \"listenList\",\r\n            tableColumns: [\r\n              {\r\n                type: \"label\",\r\n                title: vm.$t(\"ListenGroup\"),\r\n                dataIndex: \"listenGroup\",\r\n                scopedSlots: { customRender: \"listenGroup\" },\r\n                align: \"center\",\r\n                width: \"20%\",\r\n              },\r\n              {\r\n                type: \"input\",\r\n                title: vm.$t(\"ListeningAddress\"),\r\n                dataIndex: \"listeningAddress\",\r\n                scopedSlots: { customRender: \"listeningAddress\" },\r\n                align: \"center\",\r\n                width: \"50%\",\r\n              },\r\n              {\r\n                type: \"input\",\r\n                title: vm.$t(\"Label\"),\r\n                dataIndex: \"label\",\r\n                scopedSlots: { customRender: \"label\" },\r\n                align: \"center\",\r\n                width: \"30%\",\r\n              },\r\n            ],\r\n            tableData: listenListTableData,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n}\r\n</script>"]}]}