{"remainingRequest":"E:\\code\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\resources\\www\\MODELESS\\NORMAL\\htdocs\\src\\views\\UpgradeDiagnosis.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\resources\\www\\MODELESS\\NORMAL\\htdocs\\src\\views\\UpgradeDiagnosis.vue","mtime":1625716298470},{"path":"E:\\code\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632654448000},{"path":"E:\\code\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\babel-loader\\lib\\index.js","mtime":1632654448000},{"path":"E:\\code\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632654448000},{"path":"E:\\code\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\vue-loader\\lib\\index.js","mtime":1624613274496}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UpgradeDiagnosis.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"UpgradeDiagnosis.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <CommonPage :data=\"data\" @onDataChange=\"onCommonPageDataChange($event)\"></CommonPage>\r\n</template>\r\n\r\n<script>\r\nimport CommonPage from \"@/components/CommonPage.vue\";\r\nimport {\r\n  showRequestSuccess,\r\n  deepClone,\r\n  getIndexByKey,\r\n  getItemByKey,\r\n  isPort,\r\n  showErrorInfo,\r\n  checkShellRule,\r\n} from \"@/js/common.js\";\r\n\r\nexport default {\r\n  components: {\r\n    CommonPage,\r\n  },\r\n  data() {\r\n    return {\r\n      changedCfgData: {},\r\n      submitCfgData: {},\r\n      submitData: {},\r\n      apiData: {},\r\n      stateData: {},\r\n      data: {\r\n        getDataSuccess: false,\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    getData(this);\r\n  },\r\n  methods: {\r\n    onCommonPageDataChange: function (event) {\r\n      if (event.itemKey == \"Config.Settings.LOGLEVEL.Level\") {\r\n        this.changedCfgData[event.itemKey] = event.newVal;\r\n        changeSystemLogLevel(this);\r\n      } else if (event.itemKey == \"Config.Settings.LOGLEVEL.RemoteSyslog\") {\r\n        this.changedCfgData[event.itemKey] = event.newVal;\r\n        changeSystemServerDisabled(this);\r\n      } else {\r\n        this.changedCfgData[event.itemKey] = event.newVal;\r\n      }\r\n    },\r\n  },\r\n};\r\n\r\nfunction getData(vm) {\r\n  vm.$axios.get(\"api/upgradeDiagnosis/info\").then((response) => {\r\n    if(response.data.retcode == -1){\r\n      vm.data= {\r\n        showNoPermission: true,\r\n      };\r\n      return;\r\n    }\r\n    vm.getDataSuccess = true;\r\n    vm.apiData = response.data;\r\n    vm.stateData = response.data.data;\r\n    vm.changedCfgData = deepClone(response.data.configData);\r\n\r\n    createPageData(vm);\r\n    changeSystemServerDisabled(vm);\r\n\r\n    if (vm.stateData.State.PCAPState == 1) {\r\n      setStartPCAPSts(vm);\r\n    } else {\r\n      setStopPCAPSts(vm);\r\n    }\r\n  });\r\n}\r\n\r\nfunction submitData(vm) {\r\n  vm.data.submitLoading = true;\r\n\r\n  let requestData = {\r\n    target: \"upgradeDiagnosis\",\r\n    action: \"set\",\r\n    configData: vm.submitCfgData,\r\n  };\r\n  vm.$axios.post(\"api\", requestData).then((response) => {\r\n    if (response.data.retcode == -1) {\r\n      showErrorInfo(vm, vm.$t(\"RemoteServerError\"));\r\n    } else {\r\n      showRequestSuccess(vm);\r\n    }\r\n    vm.data.submitLoading = false;\r\n  });\r\n}\r\n\r\nfunction getCommitData(vm) {\r\n  vm.submitCfgData = {};\r\n  for (var changedKey in vm.changedCfgData) {\r\n    if (vm.apiData.configData[changedKey] != vm.changedCfgData[changedKey]) {\r\n      vm.submitCfgData[changedKey] = vm.changedCfgData[changedKey];\r\n    }\r\n  }\r\n}\r\n\r\nfunction changeSystemLogLevel(vm) {\r\n  let requestData = {\r\n    target: \"upgradeDiagnosis\",\r\n    action: \"set\",\r\n    configData: {\r\n      \"Config.Settings.LOGLEVEL.Level\":\r\n        vm.changedCfgData[\"Config.Settings.LOGLEVEL.Level\"],\r\n    },\r\n  };\r\n  vm.$axios.post(\"api\", requestData).then((response) => {\r\n    showRequestSuccess(vm, vm.$t(\"Success\"));\r\n  });\r\n}\r\n\r\nfunction changeSystemServerDisabled(vm) {\r\n  let item = getItemByKey(\r\n    vm.data,\r\n    \"systemLog\",\r\n    \"Config.Settings.LOGLEVEL.RemoteServer\"\r\n  );\r\n  if (vm.changedCfgData[\"Config.Settings.LOGLEVEL.RemoteSyslog\"] == 0) {\r\n    item.disabled = true;\r\n  } else {\r\n    item.disabled = false;\r\n  }\r\n}\r\n\r\nfunction onExport(vm, type) {\r\n  let requestData = {\r\n    target: \"upgradeDiagnosis\",\r\n    action: \"export\",\r\n    data: {\r\n      type: type,\r\n    },\r\n  };\r\n  vm.$axios.post(\"api\", requestData).then((response) => {\r\n    showRequestSuccess(vm, vm.$t(\"ExportSuccess\"));\r\n    let address = response.data.data.address;\r\n    window.open(address);\r\n  });\r\n}\r\n\r\nfunction checkCommitData(vm) {\r\n  let success = true;\r\n  //SystemServer校验\r\n  if (\r\n    vm.changedCfgData[\"Config.Settings.LOGLEVEL.RemoteSyslog\"] == 1 &&\r\n    (vm.changedCfgData[\"Config.Settings.LOGLEVEL.RemoteServer\"] == \"\" ||\r\n      !checkShellRule(\r\n        vm.changedCfgData[\"Config.Settings.LOGLEVEL.RemoteServer\"]\r\n      ))\r\n  ) {\r\n    let item = getItemByKey(\r\n      vm.data,\r\n      \"systemLog\",\r\n      \"Config.Settings.LOGLEVEL.RemoteServer\"\r\n    );\r\n    item.isWarn = true;\r\n    success = false;\r\n  }\r\n\r\n  //PCAP Specific Port校验\r\n  if (\r\n    \"undefined\" != typeof vm.submitCfgData[\"Config.Settings.PCAP.SpecificPort\"]\r\n  ) {\r\n    if (\r\n      vm.submitCfgData[\"Config.Settings.PCAP.SpecificPort\"].length != 0 &&\r\n      !isPort(vm.submitCfgData[\"Config.Settings.PCAP.SpecificPort\"])\r\n    ) {\r\n      let item = getItemByKey(\r\n        vm.data,\r\n        \"pcap\",\r\n        \"Config.Settings.PCAP.SpecificPort\"\r\n      );\r\n      item.isWarn = true;\r\n      success = false;\r\n    }\r\n  }\r\n  return success;\r\n}\r\n\r\nfunction createPageData(vm) {\r\n  vm.data = {\r\n    getDataSuccess: true,\r\n    breadCrumb: {\r\n      firstTitle: vm.$t(\"Upgrade\"),\r\n      secondTitle: vm.$t(\"Diagnosis\"),\r\n    },\r\n    onSubmit: function () {\r\n      getCommitData(vm);\r\n      if (!checkCommitData(vm)) {\r\n        return;\r\n      }\r\n      submitData(vm);\r\n    },\r\n    onCancel: function () {\r\n      vm.data.cancelLoading = true;\r\n      getData(vm);\r\n    },\r\n    submitLoading: false,\r\n    cancelLoading: false,\r\n    contents: [],\r\n  };\r\n  vm.data.contents.push(createSystemLogContent(vm));\r\n  vm.data.contents.push(createPCAPContent(vm));\r\n}\r\n\r\nfunction createSystemLogContent(vm) {\r\n  let content = {\r\n    key: \"systemLog\",\r\n    title: vm.$t(\"SystemLog\"),\r\n    titleDescription: vm.$t(\"SystemLogDesc\"),\r\n    items: [\r\n      {\r\n        title: vm.$t(\"LogLevel\"),\r\n        type: \"select\",\r\n        key: \"Config.Settings.LOGLEVEL.Level\",\r\n        value: vm.apiData.configData[\"Config.Settings.LOGLEVEL.Level\"],\r\n        selectItems: [\r\n          { key: 0, label: \"0\" },\r\n          { key: 1, label: \"1\" },\r\n          { key: 2, label: \"2\" },\r\n          { key: 3, label: \"3\" },\r\n          { key: 4, label: \"4\" },\r\n          { key: 5, label: \"5\" },\r\n          { key: 6, label: \"6\" },\r\n          { key: 7, label: \"7\" },\r\n        ],\r\n        description: vm.$t(\"LogLevelDesc\"),\r\n      },\r\n      {\r\n        title: vm.$t(\"ExportLog\"),\r\n        type: \"button\",\r\n        key: \"exportLog\",\r\n        onClick: function () {\r\n          onExport(vm, \"ExportLog\");\r\n        },\r\n        isShowPopover: true,\r\n        buttonName: vm.$t(\"Export\"),\r\n        buttonIcon: \"iconexport\",\r\n        description: vm.$t(\"ExportLogDesc\"),\r\n      },\r\n      {\r\n        title: vm.$t(\"RemoteSystemLog\"),\r\n        type: \"checkbox\",\r\n        key: \"Config.Settings.LOGLEVEL.RemoteSyslog\",\r\n        value: vm.apiData.configData[\"Config.Settings.LOGLEVEL.RemoteSyslog\"],\r\n        description: vm.$t(\"RemoteLogEnabled\"),\r\n      },\r\n      {\r\n        title: vm.$t(\"RemoteSystemServer\"),\r\n        type: \"input\",\r\n        disabled: false,\r\n        isWarn: false,\r\n        maxLength: 127,\r\n        warnLabel: vm.$t(\"PleaseCheckSubmitData\"),\r\n        key: \"Config.Settings.LOGLEVEL.RemoteServer\",\r\n        value: vm.apiData.configData[\"Config.Settings.LOGLEVEL.RemoteServer\"],\r\n        description: vm.$t(\"RemoteSystemServerDesc\"),\r\n      },\r\n    ],\r\n  };\r\n  return content;\r\n}\r\n\r\nfunction createPCAPContent(vm) {\r\n  let content = {\r\n    key: \"pcap\",\r\n    title: vm.$t(\"PCAP\"),\r\n    titleDescription: vm.$t(\"PCAPDesc\"),\r\n    items: [\r\n      {\r\n        title: vm.$t(\"PCAPSpecificPort\"),\r\n        type: \"input\",\r\n        showHint: true,\r\n        disabled: false,\r\n        isWarn: false,\r\n        hintContent: vm.$t(\"(1~65535)\"),\r\n        warnLabel: vm.$t(\"PCAPPortRangeError\"),\r\n        key: \"Config.Settings.PCAP.SpecificPort\",\r\n        value: vm.apiData.configData[\"Config.Settings.PCAP.SpecificPort\"],\r\n        description: vm.$t(\"PCAPSpecificPortDesc\"),\r\n      },\r\n      {\r\n        title: vm.$t(\"PCAP\"),\r\n        type: \"multilple-button\",\r\n        key: \"pcapLog\",\r\n        startDisabled: false,\r\n        stopDisabled: true,\r\n        exportDisabled: false,\r\n        startBtnName: vm.$t(\"StartLabel\"),\r\n        stopBtnName: vm.$t(\"StopLabel\"),\r\n        exportBtnName: vm.$t(\"Export\"),\r\n        onStart: function () {\r\n          onStartPCAP(vm);\r\n        },\r\n        onStop: function () {\r\n          onStopPCAP(vm);\r\n        },\r\n        onExport: function () {\r\n          onExport(vm, \"ExportPCAP\");\r\n        },\r\n        description: vm.$t(\"PCAPDesc\"),\r\n      },\r\n      {\r\n        title: vm.$t(\"PCAPAutoRefresh\"),\r\n        type: \"checkbox\",\r\n        key: \"Config.Settings.PCAP.RefreshEnable\",\r\n        value: vm.apiData.configData[\"Config.Settings.PCAP.RefreshEnable\"],\r\n        description: vm.$t(\"PCAPAutoRefreshDesc\"),\r\n      },\r\n    ],\r\n  };\r\n  return content;\r\n}\r\nvar PCAPStopType = 1;\r\nvar mSecs0 = 10000;\r\n\r\nfunction onStartPCAP(vm) {\r\n  let requestData = {\r\n    target: \"upgradeDiagnosis\",\r\n    action: \"pcap\",\r\n    configData: vm.changedCfgData,\r\n    data: {\r\n      startPCAP: \"1\",\r\n    },\r\n  };\r\n  vm.$axios.post(\"api\", requestData).then((response) => {\r\n    setTimeout(() => {\r\n      startPCAPCheck(vm);\r\n    }, 500);\r\n  });\r\n  alert(\"start\");\r\n  setStartPCAPSts(vm);\r\n}\r\n\r\nfunction startPCAPCheck(vm) {\r\n  PCAPStopType = 0;\r\n  intervCheckStsOfPCAP(vm);\r\n}\r\n\r\nfunction onStopPCAP(vm) {\r\n  let requestData = {\r\n    target: \"upgradeDiagnosis\",\r\n    action: \"pcap\",\r\n    configData: vm.changedCfgData,\r\n    data: {\r\n      stopPCAP: \"1\",\r\n    },\r\n  };\r\n  vm.$axios.post(\"api\", requestData).then((response) => {\r\n    getData(vm);\r\n    PCAPStopType = 1;\r\n  });\r\n  alert(\"stop\");\r\n  setStopPCAPSts(vm);\r\n}\r\n\r\nfunction intervCheckStsOfPCAP(vm) {\r\n  if (1 != PCAPStopType) {\r\n    getData(vm);\r\n    onStsOfPCAP(vm);\r\n  }\r\n  if (0 == PCAPStopType) {\r\n    setTimeout(() => {\r\n      intervCheckStsOfPCAP(vm);\r\n    }, mSecs0);\r\n  }\r\n}\r\n\r\nfunction onStsOfPCAP(vm) {\r\n  setTimeout(() => {\r\n    if (0 == vm.stateData.State.PCAPState && PCAPStopType == 0) {\r\n      PCAPStopType = 2;\r\n      setStopPCAPSts(vm);\r\n      var maxPCAPFileSize = \"50MB\";\r\n      var tmpStr =\r\n        \"PCAP file is over \" + maxPCAPFileSize + \", PCAP will be stopped\";\r\n      alert(tmpStr);\r\n    }\r\n  }, 5000);\r\n}\r\n\r\nfunction setStartPCAPSts(vm) {\r\n  let item = getItemByKey(vm.data, \"pcap\", \"pcapLog\");\r\n  item.startDisabled = true;\r\n  item.stopDisabled = false;\r\n  item.exportDisabled = true;\r\n}\r\n\r\nfunction setStopPCAPSts(vm) {\r\n  let item = getItemByKey(vm.data, \"pcap\", \"pcapLog\");\r\n  item.startDisabled = false;\r\n  item.stopDisabled = true;\r\n  item.exportDisabled = false;\r\n}\r\n</script>"]}]}