{"remainingRequest":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/ContactsCallLog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/ContactsCallLog.vue","mtime":1600155105014},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js","mtime":1600155105338},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js","mtime":1600155105414}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ContactsCallLog.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ContactsCallLog.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <CommonPage :data=\"data\" @onDataChange=\"onCommonPageDataChange($event)\"></CommonPage>\n</template>\n\n<script>\nimport CommonPage from \"@/components/CommonPage.vue\";\nimport {\n  showRequestSuccess,\n  deepClone,\n  isAnInterger,\n  getItemByKey,\n  dateFtt,\n  formatAMPM,\n  onWebHangup,\n} from \"@/js/common.js\";\n\nexport default {\n  components: {\n    CommonPage,\n  },\n  data() {\n    return {\n      changedCfgData: {},\n      submitCfgData: {},\n      apiData: {},\n      data: {\n        getDataSuccess: false,\n      },\n    };\n  },\n  created() {\n    getData(this);\n  },\n  methods: {\n    onCommonPageDataChange: function (event) {\n      setChangedData(this, event);\n      //this.changedCfgData[event.itemKey] = event.newVal;\n    },\n  },\n};\n\nfunction setChangedData(vm, event) {\n  if (event.contentKey == \"calllog\") {\n    if (event.itemKey == \"callHistoryType\") {\n      getCallLogsTableData(vm, 1);\n    } else {\n      vm.changedCfgData[event.itemKey] = event.newVal;\n    }\n  }\n}\n\nfunction submitData(vm) {\n  vm.data.submitLoading = true;\n\n  let requestData = {\n    target: \"phoneCallLog\",\n    action: \"set\",\n    configData: vm.submitCfgData,\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm);\n    vm.data.submitLoading = false;\n  });\n}\n\nfunction getData(vm) {\n  vm.$axios.get(\"api/phoneCallLog/info\").then((response) => {\n    vm.getDataSuccess = true;\n    vm.apiData = response.data;\n    vm.changedCfgData = deepClone(response.data.configData);\n    createPageData(vm);\n  });\n}\n\nfunction getCommitData(vm) {\n  vm.submitCfgData = {};\n  for (var changedKey in vm.changedCfgData) {\n    if (vm.apiData.configData[changedKey] != vm.changedCfgData[changedKey]) {\n      vm.submitCfgData[changedKey] = vm.changedCfgData[changedKey];\n    }\n  }\n}\n\nfunction checkCommitData(vm) {\n  return checkCallLog(vm);\n}\nfunction checkCallLog(vm) {\n  let success = true;\n  let upperLimit = getItemByKey(\n    vm.data,\n    \"calllog\",\n    \"Config.Settings.Capture.UpperLimit\"\n  );\n  if (vm.changedCfgData[\"Config.Settings.Capture.UpperLimit\"] == \"\") {\n    upperLimit.isWarn = true;\n    upperLimit.warnLabel = vm.$t(\"UpperLimitWarning\");\n    success = false;\n  }\n  if (!isAnInterger(vm.changedCfgData[\"Config.Settings.Capture.UpperLimit\"])) {\n    upperLimit.isWarn = true;\n    upperLimit.warnLabel = vm.$t(\"ValueMustBeNumber\");\n    success = false;\n  } else {\n    if (vm.changedCfgData[\"Config.Settings.Capture.UpperLimit\"] <= 0) {\n      upperLimit.isWarn = true;\n      upperLimit.warnLabel = vm.$t(\"ValueGreater0Info\");\n      success = false;\n    }\n  }\n  return success;\n}\n\nfunction createPageData(vm) {\n  vm.data = {\n    getDataSuccess: true,\n    breadCrumb: {\n      firstTitle: vm.$t(\"Contacts\"),\n      secondTitle: vm.$t(\"CallLog\"),\n    },\n    onSubmit: function () {\n      if (!checkCommitData(vm)) {\n        return;\n      }\n      getCommitData(vm);\n      submitData(vm);\n    },\n    onCancel: function () {\n      vm.data.cancelLoading = true;\n      getData(vm);\n    },\n    submitLoading: false,\n    cancelLoading: false,\n    contents: [],\n  };\n  vm.data.contents.push(createCallLogContent(vm));\n  getCallLogsTableData(vm, 1);\n}\n\nfunction createCallLogContent(vm) {\n  //call log type items\n  let callLogTypeItems = [\n    { key: 0, label: vm.$t(\"All\") },\n    { key: 1, label: vm.$t(\"Dialed\") },\n    { key: 2, label: vm.$t(\"Received\") },\n    { key: 3, label: vm.$t(\"Missed\") },\n    { key: 4, label: vm.$t(\"Forwarded\") },\n  ];\n  //capture delay items\n  let captureDelayItems = [];\n  for (let i = 0; i <= 10; i++) {\n    captureDelayItems.push({ key: i, label: i + \" \" + vm.$t(\"Second\") });\n  }\n  //table footer\n  let tableFooterData = {\n    onDelete: function () {\n      onDeleteLog(vm, \"select\");\n    },\n    onDeleteAll: function () {\n      onDeleteLog(vm, \"all\");\n    },\n    onPageChange: function (page) {\n      getCallLogsTableData(vm, page);\n    },\n    sum: 0,\n    pageNumber: 15,\n    curPage: 0,\n    deleteDisabled: true,\n    deleteAllDisabled: false,\n  };\n  //content\n  let content = {\n    key: \"calllog\",\n    title: vm.$t(\"CallLog\"),\n    titleDescription: vm.$t(\"CallLog\"),\n    items: [\n      {\n        title: vm.$t(\"CaptureDelay\"),\n        type: \"select\",\n        key: \"Config.Settings.Capture.Delay\",\n        value: vm.apiData.configData[\"Config.Settings.Capture.Delay\"],\n        selectItems: captureDelayItems,\n      },\n      {\n        title: vm.$t(\"UpperLimit\"),\n        type: \"input\",\n        key: \"Config.Settings.Capture.UpperLimit\",\n        value: vm.apiData.configData[\"Config.Settings.Capture.UpperLimit\"],\n        isWarn: false,\n        warnLabel: vm.$t(\"UpperLimitWarning\"),\n      },\n      {\n        title: vm.$t(\"CallHistory\"),\n        type: \"select\",\n        showCallLogBtn: true,\n        key: \"callHistoryType\",\n        value: \"0\",\n        selectItems: callLogTypeItems,\n        onHangup: function () {\n          onWebHangup(vm);\n        },\n        onExport: function () {\n          onExport(vm);\n        },\n      },\n      {\n        type: \"table\",\n        key: \"calllog\",\n        showFooter: true,\n        showRowSelection: true,\n        selectedRowKeys: [],\n        tableFooterData: tableFooterData,\n        tableData: [],\n        tableColumns: [\n          {\n            type: \"label\",\n            title: vm.$t(\"Index\"),\n            dataIndex: \"index\",\n            scopedSlots: { customRender: \"index\" },\n            align: \"center\",\n            width: \"10%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"Type\"),\n            dataIndex: \"type\",\n            scopedSlots: { customRender: \"type\" },\n            align: \"center\",\n            width: \"10%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"DateLabel\"),\n            dataIndex: \"date\",\n            scopedSlots: { customRender: \"date\" },\n            align: \"center\",\n            width: \"10%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"Time\"),\n            dataIndex: \"time\",\n            scopedSlots: { customRender: \"time\" },\n            align: \"center\",\n            width: \"10%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"LocalIdentity\"),\n            dataIndex: \"identity\",\n            scopedSlots: { customRender: \"identity\" },\n            align: \"center\",\n            width: \"20%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"Name\"),\n            dataIndex: \"name\",\n            scopedSlots: { customRender: \"name\" },\n            align: \"center\",\n            width: \"20%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"number\"),\n            dataIndex: \"number\",\n            scopedSlots: { customRender: \"number\" },\n            align: \"center\",\n            width: \"20%\",\n          },\n        ],\n      },\n    ],\n  };\n  return content;\n}\n\nfunction getCallLogsTableData(vm, page) {\n  var dateFormat = \"yyyy-MM-dd\";\n  let apiDateFormat =\n    vm.apiData.configData[\"Config.Settings.DATETIME.DateFormat\"];\n  if (apiDateFormat == \"0\") {\n    dateFormat = \"yyyy-MM-dd\";\n  } else if (apiDateFormat == \"1\") {\n    dateFormat = \"yyyy/MM/dd\";\n  } else if (apiDateFormat == \"2\") {\n    dateFormat = \"dd-MM-yyyy\";\n  } else if (apiDateFormat == \"3\") {\n    dateFormat = \"dd/MM/yyyy\";\n  } else if (apiDateFormat == \"6\") {\n    dateFormat = \"MM-dd-yyyy\";\n  } else if (apiDateFormat == \"7\") {\n    dateFormat = \"MM/dd/yyyy\";\n  }\n\n  vm.$axios\n    .get(\n      \"api/phoneCallLog/get?page=\" +\n        page +\n        \"&type=\" +\n        getItemByKey(vm.data, \"calllog\", \"callHistoryType\").value\n    )\n    .then((response) => {\n      let tableData = [];\n      let data = response.data.data;\n      var types = new Array(\n        vm.$t(\"All\"),\n        vm.$t(\"Dialed\"),\n        vm.$t(\"Received\"),\n        vm.$t(\"Missed\"),\n        vm.$t(\"Forwarded\")\n      );\n      for (let i = 0; i < data.callLogList.length; i++) {\n        let item = {\n          key: data.callLogList[i].id,\n          index: i + 1,\n          type: types[data.callLogList[i].type],\n          date: dateFtt(dateFormat, new Date(data.callLogList[i].date)),\n          time:\n            vm.apiData.configData[\"Config.Settings.DATETIME.TimeFormat\"] == \"0\"\n              ? formatAMPM(\n                  new Date(\n                    data.callLogList[i].date + \" \" + data.callLogList[i].time\n                  )\n                )\n              : data.callLogList[i].time,\n          identity: data.callLogList[i].identity,\n          name: data.callLogList[i].name,\n          number: data.callLogList[i].number,\n        };\n        tableData.push(item);\n      }\n      getItemByKey(vm.data, \"calllog\", \"calllog\").tableData = tableData;\n      getItemByKey(vm.data, \"calllog\", \"calllog\").tableFooterData.sum =\n        data.sum;\n      getItemByKey(vm.data, \"calllog\", \"calllog\").tableFooterData.pageNumber =\n        data.pageNum;\n      getItemByKey(\n        vm.data,\n        \"calllog\",\n        \"calllog\"\n      ).tableFooterData.curPage = page;\n      getItemByKey(vm.data, \"calllog\", \"calllog\").selectedRowKeys = [];\n    });\n}\nfunction onDeleteLog(vm, type) {\n  if (\n    !confirm(\n      type == \"all\" ? vm.$t(\"DeleteAllConfirm\") : vm.$t(\"DeleteSelectedConfirm\")\n    )\n  ) {\n    return;\n  }\n  let selectedRowKeys = getItemByKey(vm.data, \"calllog\", \"calllog\")\n    .selectedRowKeys;\n  let requestData = {\n    target: \"phoneCallLog\",\n    action: \"del\",\n    data: {\n      type: type,\n      ids: selectedRowKeys,\n      logType: getItemByKey(vm.data, \"calllog\", \"callHistoryType\").value,\n    },\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm, vm.$t(\"CallLogDeleteSuccess\"));\n    let tableFooterData = getItemByKey(vm.data, \"calllog\", \"calllog\")\n      .tableFooterData;\n    if (type != \"all\") {\n      let sumPage = Math.ceil(\n        (tableFooterData.sum - selectedRowKeys.length) /\n          tableFooterData.pageNumber\n      );\n      sumPage = sumPage == 0 ? 1 : sumPage;\n      let page =\n        tableFooterData.curPage >= sumPage ? sumPage : tableFooterData.curPage;\n      getCallLogsTableData(vm, page);\n    } else {\n      getCallLogsTableData(vm, 1);\n    }\n  });\n}\n\nfunction onExport(vm) {\n  let requestData = {\n    target: \"phoneCallLog\",\n    action: \"export\",\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm, vm.$t(\"ExportSuccess\"));\n    let address = response.data.data.address;\n    window.open(address);\n  });\n}\n</script>"]}]}