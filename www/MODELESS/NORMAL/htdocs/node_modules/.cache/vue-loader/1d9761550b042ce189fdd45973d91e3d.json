{"remainingRequest":"G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\src\\views\\ContactsCallLog.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\src\\views\\ContactsCallLog.vue","mtime":1624613275293},{"path":"G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624613261239},{"path":"G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\babel-loader\\lib\\index.js","mtime":1624613260275},{"path":"G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624613261239},{"path":"G:\\LocalCode\\advance_indoor\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\vue-loader\\lib\\index.js","mtime":1624613274496}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ContactsCallLog.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ContactsCallLog.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <CommonPage :data=\"data\" @onDataChange=\"onCommonPageDataChange($event)\"></CommonPage>\r\n</template>\r\n\r\n<script>\r\nimport CommonPage from \"@/components/CommonPage.vue\";\r\nimport {\r\n  showRequestSuccess,\r\n  deepClone,\r\n  isAnInterger,\r\n  getItemByKey,\r\n  dateFtt,\r\n  formatAMPM,\r\n  onWebHangup,\r\n  onWebDial,\r\n} from \"@/js/common.js\";\r\n\r\nexport default {\r\n  components: {\r\n    CommonPage,\r\n  },\r\n  data() {\r\n    return {\r\n      changedCfgData: {},\r\n      submitCfgData: {},\r\n      apiData: {},\r\n      data: {\r\n        getDataSuccess: false,\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    getData(this);\r\n  },\r\n  methods: {\r\n    onCommonPageDataChange: function (event) {\r\n      setChangedData(this, event);\r\n      //this.changedCfgData[event.itemKey] = event.newVal;\r\n    },\r\n  },\r\n};\r\n\r\nfunction setChangedData(vm, event) {\r\n  if (event.contentKey == \"calllog\") {\r\n    if (event.itemKey == \"callHistoryType\") {\r\n      getCallLogsTableData(vm, 1);\r\n    } else {\r\n      vm.changedCfgData[event.itemKey] = event.newVal;\r\n    }\r\n  }\r\n}\r\n\r\nfunction submitData(vm) {\r\n  vm.data.submitLoading = true;\r\n\r\n  let requestData = {\r\n    target: \"phoneCallLog\",\r\n    action: \"set\",\r\n    configData: vm.submitCfgData,\r\n  };\r\n  vm.$axios.post(\"api\", requestData).then((response) => {\r\n    if (\"undefined\" != typeof response) {\r\n      showRequestSuccess(vm);\r\n    }\r\n    vm.data.submitLoading = false;\r\n  });\r\n}\r\n\r\nfunction getData(vm) {\r\n  vm.$axios.get(\"api/phoneCallLog/info\").then((response) => {\r\n    vm.getDataSuccess = true;\r\n    vm.apiData = response.data;\r\n    vm.changedCfgData = deepClone(response.data.configData);\r\n    createPageData(vm);\r\n  });\r\n}\r\n\r\nfunction getCommitData(vm) {\r\n  vm.submitCfgData = {};\r\n  for (var changedKey in vm.changedCfgData) {\r\n    if (vm.apiData.configData[changedKey] != vm.changedCfgData[changedKey]) {\r\n      vm.submitCfgData[changedKey] = vm.changedCfgData[changedKey];\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkCommitData(vm) {\r\n  return checkCallLog(vm);\r\n}\r\nfunction checkCallLog(vm) {\r\n  let success = true;\r\n  let upperLimit = getItemByKey(\r\n    vm.data,\r\n    \"calllog\",\r\n    \"Config.Settings.Capture.UpperLimit\"\r\n  );\r\n  if (vm.changedCfgData[\"Config.Settings.Capture.UpperLimit\"] == \"\") {\r\n    upperLimit.isWarn = true;\r\n    upperLimit.warnLabel = vm.$t(\"UpperLimitWarning\");\r\n    success = false;\r\n  }\r\n  if (!isAnInterger(vm.changedCfgData[\"Config.Settings.Capture.UpperLimit\"])) {\r\n    upperLimit.isWarn = true;\r\n    upperLimit.warnLabel = vm.$t(\"ValueMustBeNumber\");\r\n    success = false;\r\n  } else {\r\n    if (vm.changedCfgData[\"Config.Settings.Capture.UpperLimit\"] <= 0) {\r\n      upperLimit.isWarn = true;\r\n      upperLimit.warnLabel = vm.$t(\"ValueGreater0Info\");\r\n      success = false;\r\n    }\r\n  }\r\n  return success;\r\n}\r\n\r\nfunction createPageData(vm) {\r\n  vm.data = {\r\n    getDataSuccess: true,\r\n    breadCrumb: {\r\n      firstTitle: vm.$t(\"Contacts\"),\r\n      secondTitle: vm.$t(\"CallLog\"),\r\n    },\r\n    onSubmit: function () {\r\n      if (!checkCommitData(vm)) {\r\n        return;\r\n      }\r\n      getCommitData(vm);\r\n      submitData(vm);\r\n    },\r\n    onCancel: function () {\r\n      vm.data.cancelLoading = true;\r\n      getData(vm);\r\n    },\r\n    submitLoading: false,\r\n    cancelLoading: false,\r\n    contents: [],\r\n  };\r\n  vm.data.contents.push(createCallLogContent(vm));\r\n  getCallLogsTableData(vm, 1);\r\n}\r\n\r\nfunction createCallLogContent(vm) {\r\n  //call log type items\r\n  let callLogTypeItems = [\r\n    { key: 0, label: vm.$t(\"All\") },\r\n    { key: 1, label: vm.$t(\"Dialed\") },\r\n    { key: 2, label: vm.$t(\"Received\") },\r\n    { key: 3, label: vm.$t(\"Missed\") },\r\n    { key: 4, label: vm.$t(\"Forwarded\") },\r\n  ];\r\n  //capture delay items\r\n  let captureDelayItems = [];\r\n  for (let i = 0; i <= 10; i++) {\r\n    captureDelayItems.push({ key: i, label: i });\r\n  }\r\n  //table footer\r\n  let tableFooterData = {\r\n    onDelete: function () {\r\n      onDeleteLog(vm, \"select\");\r\n    },\r\n    onDeleteAll: function () {\r\n      onDeleteLog(vm, \"all\");\r\n    },\r\n    onPageChange: function (page) {\r\n      getCallLogsTableData(vm, page);\r\n    },\r\n    sum: 0,\r\n    pageNumber: 15,\r\n    curPage: 0,\r\n    deleteDisabled: true,\r\n    deleteAllDisabled: false,\r\n  };\r\n  //content\r\n  let content = {\r\n    key: \"calllog\",\r\n    title: vm.$t(\"CallLog\"),\r\n    titleDescription: vm.$t(\"CallLogDesc\"),\r\n    items: [\r\n      {\r\n        title: vm.$t(\"CaptureDelay\") + \" (\" + vm.$t(\"Second\") + \")\",\r\n        type: \"select\",\r\n        key: \"Config.Settings.Capture.Delay\",\r\n        value: vm.apiData.configData[\"Config.Settings.Capture.Delay\"],\r\n        selectItems: captureDelayItems,\r\n        description: vm.$t(\"CaptureDelayDesc\"),\r\n      },\r\n      {\r\n        title: vm.$t(\"UpperLimit\"),\r\n        type: \"input\",\r\n        key: \"Config.Settings.Capture.UpperLimit\",\r\n        value: vm.apiData.configData[\"Config.Settings.Capture.UpperLimit\"],\r\n        isWarn: false,\r\n        warnLabel: vm.$t(\"UpperLimitWarning\"),\r\n        description: vm.$t(\"UpperLimitDesc\"),\r\n      },\r\n      {\r\n        title: vm.$t(\"CallHistory\"),\r\n        type: \"select\",\r\n        showCallLogBtn: true,\r\n        key: \"callHistoryType\",\r\n        value: \"0\",\r\n        selectItems: callLogTypeItems,\r\n        onHangup: function () {\r\n          onWebHangup(vm);\r\n        },\r\n        onExport: function () {\r\n          onExport(vm);\r\n        },\r\n        description: vm.$t(\"CallHistoryDesc\"),\r\n      },\r\n      {\r\n        type: \"table\",\r\n        key: \"calllog\",\r\n        showFooter: true,\r\n        showRowSelection: true,\r\n        selectedRowKeys: [],\r\n        tableFooterData: tableFooterData,\r\n        tableData: [],\r\n        onClickDial: function(index){\r\n          onDial(vm,index);\r\n        },\r\n        tableColumns: [\r\n          {\r\n            type: \"label\",\r\n            title: vm.$t(\"Index\"),\r\n            dataIndex: \"index\",\r\n            scopedSlots: { customRender: \"index\" },\r\n            align: \"center\",\r\n            width: \"10%\",\r\n          },\r\n          {\r\n            type: \"label\",\r\n            title: vm.$t(\"Type\"),\r\n            dataIndex: \"type\",\r\n            scopedSlots: { customRender: \"type\" },\r\n            align: \"center\",\r\n            width: \"10%\",\r\n          },\r\n          {\r\n            type: \"label\",\r\n            title: vm.$t(\"DateLabel\"),\r\n            dataIndex: \"date\",\r\n            scopedSlots: { customRender: \"date\" },\r\n            align: \"center\",\r\n            width: \"10%\",\r\n          },\r\n          {\r\n            type: \"label\",\r\n            title: vm.$t(\"Time\"),\r\n            dataIndex: \"time\",\r\n            scopedSlots: { customRender: \"time\" },\r\n            align: \"center\",\r\n            width: \"10%\",\r\n          },\r\n          {\r\n            type: \"label\",\r\n            title: vm.$t(\"LocalIdentity\"),\r\n            dataIndex: \"identity\",\r\n            scopedSlots: { customRender: \"identity\" },\r\n            align: \"center\",\r\n            width: \"20%\",\r\n          },\r\n          {\r\n            type: \"label\",\r\n            title: vm.$t(\"Name\"),\r\n            dataIndex: \"name\",\r\n            scopedSlots: { customRender: \"name\" },\r\n            align: \"center\",\r\n            width: \"20%\",\r\n          },\r\n          {\r\n            type: \"click-label\",\r\n            title: vm.$t(\"NumberLabel\"),\r\n            dataIndex: \"number\",\r\n            scopedSlots: { customRender: \"number\" },\r\n            align: \"center\",\r\n            width: \"20%\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n  return content;\r\n}\r\n\r\nfunction onDial(vm,columnIndex){\r\n  let itemValue = getItemByKey(\r\n    vm.data,\r\n    \"calllog\",\r\n    \"calllog\"\r\n  ).tableData;\r\n  var number = itemValue[columnIndex-1].number.split(\"@\")[0];\r\n  var account = itemValue[columnIndex-1].identity.split(\"@\")[0];\r\n  if (confirm(vm.$t(\"MakeCallWarn\"))) {\r\n    onWebDial(vm,number,account,true);\r\n  }\r\n}\r\n\r\nfunction getCallLogsTableData(vm, page) {\r\n  var dateFormat = \"yyyy-MM-dd\";\r\n  let apiDateFormat =\r\n    vm.apiData.configData[\"Config.Settings.DATETIME.DateFormat\"];\r\n  if (apiDateFormat == \"0\") {\r\n    dateFormat = \"yyyy-MM-dd\";\r\n  } else if (apiDateFormat == \"1\") {\r\n    dateFormat = \"yyyy/MM/dd\";\r\n  } else if (apiDateFormat == \"2\") {\r\n    dateFormat = \"dd-MM-yyyy\";\r\n  } else if (apiDateFormat == \"3\") {\r\n    dateFormat = \"dd/MM/yyyy\";\r\n  } else if (apiDateFormat == \"6\") {\r\n    dateFormat = \"MM-dd-yyyy\";\r\n  } else if (apiDateFormat == \"7\") {\r\n    dateFormat = \"MM/dd/yyyy\";\r\n  }\r\n\r\n  vm.$axios\r\n    .get(\r\n      \"api/phoneCallLog/get?page=\" +\r\n        page +\r\n        \"&type=\" +\r\n        getItemByKey(vm.data, \"calllog\", \"callHistoryType\").value\r\n    )\r\n    .then((response) => {\r\n      let tableData = [];\r\n      let data = response.data.data;\r\n      var types = new Array(\r\n        vm.$t(\"All\"),\r\n        vm.$t(\"Dialed\"),\r\n        vm.$t(\"Received\"),\r\n        vm.$t(\"Missed\"),\r\n        vm.$t(\"Forwarded\")\r\n      );\r\n      for (let i = 0; i < data.callLogList.length; i++) {\r\n        let item = {\r\n          key: data.callLogList[i].id,\r\n          index: i + 1,\r\n          type: types[data.callLogList[i].type],\r\n          date: dateFtt(dateFormat, new Date(data.callLogList[i].date)),\r\n          time:\r\n            vm.apiData.configData[\"Config.Settings.DATETIME.TimeFormat\"] == \"0\"\r\n              ? formatAMPM(\r\n                  new Date(\r\n                    data.callLogList[i].date + \" \" + data.callLogList[i].time\r\n                  )\r\n                )\r\n              : data.callLogList[i].time,\r\n          identity: data.callLogList[i].identity,\r\n          name: data.callLogList[i].name,\r\n          number: data.callLogList[i].number,\r\n        };\r\n        tableData.push(item);\r\n      }\r\n      getItemByKey(vm.data, \"calllog\", \"calllog\").tableData = tableData;\r\n      getItemByKey(vm.data, \"calllog\", \"calllog\").tableFooterData.sum =\r\n        data.sum;\r\n      getItemByKey(vm.data, \"calllog\", \"calllog\").tableFooterData.pageNumber =\r\n        data.pageNum;\r\n      getItemByKey(\r\n        vm.data,\r\n        \"calllog\",\r\n        \"calllog\"\r\n      ).tableFooterData.curPage = page;\r\n      getItemByKey(vm.data, \"calllog\", \"calllog\").selectedRowKeys = [];\r\n    });\r\n}\r\nfunction onDeleteLog(vm, type) {\r\n  if (\r\n    !confirm(\r\n      type == \"all\" ? vm.$t(\"DeleteAllConfirm\") : vm.$t(\"DeleteSelectedConfirm\")\r\n    )\r\n  ) {\r\n    return;\r\n  }\r\n  let selectedRowKeys = getItemByKey(vm.data, \"calllog\", \"calllog\")\r\n    .selectedRowKeys;\r\n  let requestData = {\r\n    target: \"phoneCallLog\",\r\n    action: \"del\",\r\n    data: {\r\n      type: type,\r\n      ids: selectedRowKeys,\r\n      logType: getItemByKey(vm.data, \"calllog\", \"callHistoryType\").value,\r\n    },\r\n  };\r\n  vm.$axios.post(\"api\", requestData).then((response) => {\r\n    showRequestSuccess(vm, vm.$t(\"CallLogDeleteSuccess\"));\r\n    let tableFooterData = getItemByKey(vm.data, \"calllog\", \"calllog\")\r\n      .tableFooterData;\r\n    if (type != \"all\") {\r\n      let sumPage = Math.ceil(\r\n        (tableFooterData.sum - selectedRowKeys.length) /\r\n          tableFooterData.pageNumber\r\n      );\r\n      sumPage = sumPage == 0 ? 1 : sumPage;\r\n      let page =\r\n        tableFooterData.curPage >= sumPage ? sumPage : tableFooterData.curPage;\r\n      getCallLogsTableData(vm, page);\r\n    } else {\r\n      getCallLogsTableData(vm, 1);\r\n    }\r\n  });\r\n}\r\n\r\nfunction onExport(vm) {\r\n  let requestData = {\r\n    target: \"phoneCallLog\",\r\n    action: \"export\",\r\n  };\r\n  vm.$axios.post(\"api\", requestData).then((response) => {\r\n    showRequestSuccess(vm, vm.$t(\"ExportSuccess\"));\r\n    let address = response.data.data.address;\r\n    window.open(address);\r\n  });\r\n}\r\n</script>"]}]}