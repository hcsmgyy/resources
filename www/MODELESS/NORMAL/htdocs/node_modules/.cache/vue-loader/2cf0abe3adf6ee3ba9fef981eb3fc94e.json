{"remainingRequest":"E:\\workspace\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\resources\\www\\MODELESS\\NORMAL\\htdocs\\src\\views\\PhoneApp.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\resources\\www\\MODELESS\\NORMAL\\htdocs\\src\\views\\PhoneApp.vue","mtime":1624613275298},{"path":"E:\\workspace\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\babel-loader\\lib\\index.js","mtime":1624613260275},{"path":"E:\\workspace\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624613261239},{"path":"E:\\workspace\\resources\\www\\MODELESS\\NORMAL\\htdocs\\node_modules\\vue-loader\\lib\\index.js","mtime":1624613274496}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}