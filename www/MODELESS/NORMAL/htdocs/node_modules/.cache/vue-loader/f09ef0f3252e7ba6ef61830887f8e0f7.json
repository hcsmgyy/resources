{"remainingRequest":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/PhoneMulicast.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/PhoneMulicast.vue","mtime":1600155105014},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js","mtime":1600155105338},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js","mtime":1600155105414}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PhoneMulicast.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PhoneMulicast.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <CommonPage :data=\"data\" @onDataChange=\"onCommonPageDataChange($event)\"></CommonPage>\n</template>\n\n<script>\nimport CommonPage from \"@/components/CommonPage.vue\";\nimport {\n  showRequestSuccess,\n  showErrorInfo,\n  isPort,\n  deepClone,\n} from \"@/js/common.js\";\n\nexport default {\n  components: {\n    CommonPage,\n  },\n  data() {\n    return {\n      changedCfgData: {},\n      submitCfgData: {},\n      apiData: {},\n      data: {\n        getDataSuccess: false,\n      },\n    };\n  },\n  created() {\n    getData(this);\n  },\n  methods: {\n    onCommonPageDataChange: function (event) {\n      //mulitcast List部分\n      if (event.contentKey == \"mulitcastList\") {\n        //单选逻辑\n        let falseCount = 0;\n        for (let i = 0; i < event.newVal.length; i++) {\n          this.changedCfgData[\"Config.Multicast.GROUP\" + (i + 1) + \".IP\"] =\n            event.newVal[i].multicastAddress.value;\n          if (!event.newVal[i].enabled.value) {\n            falseCount++;\n          }\n          if (event.newVal[i].enabled.value && !event.oldVal[i].enabled.value) {\n            this.changedCfgData[\n              \"Config.Multicast.SELECTEDGROUP.SelectedGroup\"\n            ] = i + 1;\n            for (let j = 0; j < event.newVal.length; j++) {\n              if (i != j) {\n                this.data.contents[event.contentIndex].items[\n                  event.itemIndex\n                ].tableData[j].enabled.value = false;\n              }\n            }\n          }\n        }\n        if (falseCount == event.newVal.length) {\n          this.changedCfgData[\"Config.Multicast.SELECTEDGROUP.SelectedGroup\"] =\n            \"0\";\n        }\n      } else if (event.contentKey == \"listenList\") {\n        //listen list 部分\n        for (let i = 0; i < event.newVal.length; i++) {\n          this.changedCfgData[\"Config.Multicast.LISTEN\" + i + \".IP\"] =\n            event.newVal[i].listeningAddress.value;\n          this.changedCfgData[\"Config.Multicast.LISTEN\" + i + \".Label\"] =\n            event.newVal[i].label.value;\n        }\n      }\n      // checkCommitData(this);\n    },\n  },\n};\nfunction checkCommitData(vm) {\n  let success = true;\n  //multicast list\n  let multicastListContentIndex = vm.data.contents\n    .map((item) => item.key)\n    .indexOf(\"mulitcastList\");\n  let multicastListItemIndex = vm.data.contents[multicastListContentIndex].items\n    .map((item) => item.key)\n    .indexOf(\"mulitcastList\");\n  let mulitcastTableData =\n    vm.data.contents[multicastListContentIndex].items[multicastListItemIndex]\n      .tableData;\n  for (let i = 0; i < mulitcastTableData.length; i++) {\n    mulitcastTableData[i].multicastAddress.isWarn = false;\n    if(mulitcastTableData[i].multicastAddress.value == \"\"){\n      continue;\n    }\n    let port = getPort(mulitcastTableData[i].multicastAddress.value);\n    if (port == \"\" || !(isPort(port) && Number(port) >= 1024)) {\n      //不允许为空\n      mulitcastTableData[i].multicastAddress.isWarn = true;\n      mulitcastTableData[i].multicastAddress.warnLabel = vm.$t(\"WrongPort\");\n      success = false;\n    } else {\n      //不允许重复\n      for (let j = 0; j < mulitcastTableData.length; j++) {\n        if (\n          i != j &&\n          getPort(mulitcastTableData[i].multicastAddress.value) ==\n            getPort(mulitcastTableData[j].multicastAddress.value)\n        ) {\n          mulitcastTableData[i].multicastAddress.isWarn = true;\n          mulitcastTableData[i].multicastAddress.warnLabel = vm.$t(\n            \"WarningSamePortExist\"\n          );\n          mulitcastTableData[j].multicastAddress.isWarn = true;\n          mulitcastTableData[j].multicastAddress.warnLabel = vm.$t(\n            \"WarningSamePortExist\"\n          );\n          success = false;\n        }\n      }\n    }\n  }\n  //listen list\n  let listenListContentIndex = vm.data.contents\n    .map((item) => item.key)\n    .indexOf(\"listenList\");\n  let listenListItemIndex = vm.data.contents[listenListContentIndex].items\n    .map((item) => item.key)\n    .indexOf(\"listenList\");\n  let listenTableData =\n    vm.data.contents[listenListContentIndex].items[listenListItemIndex]\n      .tableData;\n  for (let i = 0; i < listenTableData.length; i++) {\n    listenTableData[i].listeningAddress.isWarn = false;\n    if(listenTableData[i].listeningAddress.value == \"\"){\n      continue;\n    }\n    let port = getPort(listenTableData[i].listeningAddress.value);\n    if (port == \"\" || !(isPort(port) && Number(port) >= 1024)) {\n      //不允许为空\n      listenTableData[i].listeningAddress.isWarn = true;\n      listenTableData[i].listeningAddress.warnLabel = vm.$t(\"WrongPort\");\n      success = false;\n    } else {\n      //不允许重复\n      for (let j = 0; j < listenTableData.length; j++) {\n        if (\n          i != j &&\n          getPort(listenTableData[i].listeningAddress.value) ==\n            getPort(listenTableData[j].listeningAddress.value)\n        ) {\n          listenTableData[i].listeningAddress.isWarn = true;\n          listenTableData[i].listeningAddress.warnLabel = vm.$t(\n            \"WarningSamePortExist\"\n          );\n          listenTableData[j].listeningAddress.isWarn = true;\n          listenTableData[j].listeningAddress.warnLabel = vm.$t(\n            \"WarningSamePortExist\"\n          );\n          success = false;\n        }\n      }\n    }\n  }\n  return success;\n}\n\nfunction getPort(value) {\n  return value.indexOf(\":\") == -1\n    ? \"\"\n    : value.split(\":\")[value.split(\":\").length - 1];\n}\n\nfunction submitData(vm) {\n  vm.data.submitLoading = true;\n\n  let requestData = {\n    target: \"phoneIntercom\",\n    action: \"set\",\n    configData: vm.submitCfgData,\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm);\n    vm.data.submitLoading = false;\n  });\n}\n\nfunction getData(vm) {\n  vm.$axios.get(\"api/phoneMulticast/info\").then((response) => {\n    vm.getDataSuccess = true;\n    vm.apiData = response.data;\n    vm.changedCfgData = deepClone(response.data.configData);\n    createPageData(vm);\n  });\n}\n\nfunction getCommitData(vm) {\n  vm.submitCfgData = {};\n  for (var changedKey in vm.changedCfgData) {\n    if (vm.apiData.configData[changedKey] != vm.changedCfgData[changedKey]) {\n      vm.submitCfgData[changedKey] = vm.changedCfgData[changedKey];\n    }\n  }\n}\n\nfunction createPageData(vm) {\n  let mulitcastListTableData = [];\n  let listenListTableData = [];\n  for (let i = 1; i <= 3; i++) {\n    let mulitcastData = {\n      key: i - 1,\n      mluticastGroup: vm.$t(\"MulticastGroup\") + \" 1\",\n      multicastAddress: {\n        value: vm.apiData.configData[\"Config.Multicast.GROUP\" + i + \".IP\"],\n        isWarn: false,\n        warnLabel: \"\",\n      },\n      enabled: {\n        value:\n          vm.apiData.configData[\n            \"Config.Multicast.SELECTEDGROUP.SelectedGroup\"\n          ] == i,\n        disabled: false,\n      },\n    };\n    mulitcastListTableData.push(mulitcastData);\n\n    let listenData = {\n      key: i - 1,\n      listeningAddress: {\n        value:\n          vm.apiData.configData[\"Config.Multicast.LISTEN\" + (i - 1) + \".IP\"],\n        isWarn: false,\n        warnLabel: \"\",\n      },\n      label: {\n        value:\n          vm.apiData.configData[\"Config.Multicast.LISTEN\" + (i - 1) + \".Label\"],\n        isWarn: false,\n        warnLabel: \"\",\n      },\n      listenGroup: vm.$t(\"ListenGroup\") + \" 1\",\n    };\n    listenListTableData.push(listenData);\n  }\n\n  vm.data = {\n    getDataSuccess: true,\n    breadCrumb: {\n      firstTitle: vm.$t(\"Phone\"),\n      secondTitle: vm.$t(\"Multicast\"),\n    },\n    onSubmit: function () {\n      getCommitData(vm);\n      if (!checkCommitData(vm)) {\n        return;\n      }\n      submitData(vm);\n    },\n    onCancel: function () {\n      vm.data.cancelLoading = true;\n      getData(vm);\n    },\n    submitLoading: false,\n    cancelLoading: false,\n    contents: [\n      {\n        key: \"mulitcastList\",\n        title: vm.$t(\"MulticastList\"),\n        items: [\n          {\n            type: \"table\",\n            key: \"mulitcastList\",\n            tableColumns: [\n              {\n                type: \"label\",\n                title: vm.$t(\"MulticastGroup\"),\n                dataIndex: \"mluticastGroup\",\n                scopedSlots: { customRender: \"mluticastGroup\" },\n                align: \"center\",\n              },\n              {\n                type: \"input\",\n                title: vm.$t(\"MulticastAddress\"),\n                dataIndex: \"multicastAddress\",\n                scopedSlots: { customRender: \"multicastAddress\" },\n                align: \"center\",\n              },\n              {\n                type: \"checkbox\",\n                title: vm.$t(\"Enabled\"),\n                dataIndex: \"enabled\",\n                scopedSlots: { customRender: \"enabled\" },\n                align: \"center\",\n              },\n            ],\n            tableData: mulitcastListTableData,\n          },\n        ],\n      },\n      {\n        key: \"listenList\",\n        title: vm.$t(\"ListenList\"),\n        items: [\n          {\n            type: \"table\",\n            key: \"listenList\",\n            tableColumns: [\n              {\n                type: \"label\",\n                title: vm.$t(\"ListenGroup\"),\n                dataIndex: \"listenGroup\",\n                scopedSlots: { customRender: \"listenGroup\" },\n                align: \"center\",\n              },\n              {\n                type: \"input\",\n                title: vm.$t(\"ListeningAddress\"),\n                dataIndex: \"listeningAddress\",\n                scopedSlots: { customRender: \"listeningAddress\" },\n                align: \"center\",\n              },\n              {\n                type: \"input\",\n                title: vm.$t(\"Label\"),\n                dataIndex: \"label\",\n                scopedSlots: { customRender: \"label\" },\n                align: \"center\",\n              },\n            ],\n            tableData: listenListTableData,\n          },\n        ],\n      },\n    ],\n  };\n}\n</script>"]}]}