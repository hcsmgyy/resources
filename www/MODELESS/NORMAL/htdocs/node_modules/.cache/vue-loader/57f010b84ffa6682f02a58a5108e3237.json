{"remainingRequest":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/ContactsLocalContacts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/src/views/ContactsLocalContacts.vue","mtime":1600155105014},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/babel-loader/lib/index.js","mtime":1600155105338},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/cache-loader/dist/cjs.js","mtime":1600155105894},{"path":"/workspace3/minjie.chen/gitlab-work/advance-indoor/resources/www/MODELESS/NORMAL/htdocs/node_modules/vue-loader/lib/index.js","mtime":1600155105414}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ContactsLocalContacts.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ContactsLocalContacts.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <CommonPage :data=\"data\" @onDataChange=\"onCommonPageDataChange($event)\"></CommonPage>\n</template>\n\n<script>\nimport CommonPage from \"@/components/CommonPage.vue\";\nimport {\n  showRequestSuccess,\n  deepClone,\n  getItemByKey,\n  getIndexByKey,\n  isAValidDialedNumber,\n} from \"@/js/common.js\";\n\nexport default {\n  components: {\n    CommonPage,\n  },\n  data() {\n    return {\n      searchValue: \"\",\n      changedCfgData: {},\n      submitCfgData: {},\n      apiData: {},\n      data: {\n        getDataSuccess: false,\n      },\n      currentContactList: [],\n    };\n  },\n  created() {\n    getData(this);\n  },\n  methods: {\n    onCommonPageDataChange: function (event) {\n      setChangedData(this, event);\n    },\n  },\n};\n\nfunction setChangedData(vm, event) {\n  if (\n    event.contentKey == \"contactsList\" &&\n    event.itemKey == \"contactListSelect\"\n  ) {\n    getContactsTableData(vm, 1);\n  }\n}\n\nfunction submitData(vm) {\n  vm.data.submitLoading = true;\n\n  let requestData = {\n    target: \"phoneLocalContact\",\n    action: \"set\",\n    configData: vm.submitCfgData,\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm);\n    vm.data.submitLoading = false;\n  });\n}\n\nfunction getData(vm) {\n  vm.$axios.get(\"api/phoneLocalContact/info\").then((response) => {\n    vm.getDataSuccess = true;\n    vm.apiData = response.data;\n    vm.changedCfgData = deepClone(response.data.configData);\n    createPageData(vm);\n  });\n}\n\nfunction getCommitData(vm) {\n  vm.submitCfgData = {};\n  for (var changedKey in vm.changedCfgData) {\n    if (vm.apiData.configData[changedKey] != vm.changedCfgData[changedKey]) {\n      vm.submitCfgData[changedKey] = vm.changedCfgData[changedKey];\n    }\n  }\n}\n\nfunction createPageData(vm) {\n  vm.data = {\n    getDataSuccess: true,\n    breadCrumb: {\n      firstTitle: vm.$t(\"Contacts\"),\n      secondTitle: vm.$t(\"LocalContacts\"),\n    },\n    onSubmit: function () {\n      getCommitData(vm);\n      submitData(vm);\n    },\n    onCancel: function () {\n      vm.data.cancelLoading = true;\n      getData(vm);\n    },\n    submitLoading: false,\n    cancelLoading: false,\n    contents: [],\n  };\n\n  vm.data.contents.push(createContactListContent(vm));\n  vm.data.contents.push(createDialNumberContent(vm));\n  getContactsTableData(vm, 1);\n}\n\nfunction createDialNumberContent(vm) {\n  let accountItems = [{ key: 0, label: vm.$t(\"Auto\") }];\n  for (let i = 0; i < vm.apiData.data.accountList.length; i++) {\n    let item = {\n      key: vm.apiData.data.accountList[i].index,\n      label:\n        vm.$t(\"Line\") +\n        vm.apiData.data.accountList[i].index +\n        \": \" +\n        vm.apiData.data.accountList[i].name,\n    };\n    accountItems.push(item);\n  }\n\n  let content = {\n    key: \"dialNumber\",\n    title: vm.$t(\"DialNumber\"),\n    titleDescription: vm.$t(\"DialNumber\"),\n    items: [\n      {\n        type: \"dialInput\",\n        key: \"dialInput\",\n        // selectValue: 0,\n        selectItems: accountItems,\n      },\n    ],\n  };\n  return content;\n}\n\nfunction createContactListContent(vm) {\n  //添加框\n  let addModalData = {\n    title: vm.$t(\"AddContact\") + \" >>\",\n    key: -1,\n    cancelBtnLabel: vm.$t(\"Cancel\"),\n    submitBtnLabel: vm.$t(\"Submit\"),\n    visible: false,\n    showFooter: true,\n    items: [\n      {\n        title: vm.$t(\"Name\"),\n        type: \"input\",\n        key: \"name\",\n        value: \"\",\n        isWarn: false,\n        warnLabel: vm.$t(\"NameEmptyWarning\"),\n      },\n      {\n        title: vm.$t(\"Number\"),\n        type: \"input\",\n        key: \"number\",\n        value: \"\",\n        isWarn: false,\n        warnLabel: vm.$t(\"PleaseCheckSubmitData\"),\n      },\n      {\n        title: vm.$t(\"Group\"),\n        type: \"select\",\n        key: \"group\",\n        value: \"\",\n        defaultValue: 0,\n        selectItems: [\n          { key: 0, label: vm.$t(\"Default\") },\n          { key: 1, label: vm.$t(\"BlackList\") },\n        ],\n      },\n      {\n        title: vm.$t(\"DialAccount\"),\n        type: \"select\",\n        key: \"account\",\n        value: \"\",\n        defaultValue: 0,\n        selectItems: [\n          { key: 0, label: vm.$t(\"Account\") + 1 },\n          { key: 1, label: vm.$t(\"Account\") + 2 },\n        ],\n      },\n    ],\n    onConfirm: function () {\n      onChangeContact(vm);\n    },\n  };\n\n  //导入框\n  let importModalData = {\n    title: \" \",\n    cancelBtnLabel: vm.$t(\"Cancel\"),\n    submitBtnLabel: vm.$t(\"Import\"),\n    showFooter: true,\n    visible: false,\n    items: [\n      {\n        title: vm.$t(\"FileLabel\") + \" (.Xml/.Csv)\",\n        type: \"file-input\",\n        key: \"import\",\n        acceptFileType: \".xml,.csv\",\n        loading: false,\n        value: {\n          fileData: {},\n          fileName: vm.$t(\"UpgradeFilePath\"),\n        },\n        importBtnName: vm.$t(\"Reset\"),\n      },\n    ],\n    onConfirm: function () {\n      onImport(vm);\n    },\n    confirmLoading: false,\n  };\n  //table head\n  let tableHeadData = {\n    addModalData: addModalData,\n    importModalData: importModalData,\n    exportItems: [\n      { key: \"xml\", label: \"xml\" },\n      { key: \"csv\", label: \"csv\" },\n    ],\n    onExport: function (type) {\n      onExport(vm, type);\n    },\n  };\n  //table footer\n  let tableFooterData = {\n    onDelete: function () {\n      onDeleteContact(vm, \"select\");\n    },\n    onDeleteAll: function () {\n      onDeleteContact(vm, \"all\");\n    },\n    onPageChange: function (page) {\n      getContactsTableData(vm, page);\n    },\n    sum: 0,\n    pageNumber: 5,\n    curPage: 0,\n    deleteDisabled: true,\n    deleteAllDisabled: false,\n  };\n  //content\n  let content = {\n    key: \"contactsList\",\n    title: vm.$t(\"ContactsListSetting\"),\n    titleDescription: vm.$t(\"ContactsListSetting\"),\n    items: [\n      {\n        title: vm.$t(\"ContactsList\"),\n        type: \"select\",\n        key: \"contactListSelect\",\n        value: \"AllContacts\",\n        selectItems: [\n          { key: \"AllContacts\", label: vm.$t(\"AllContacts\") },\n          { key: \"BlackList\", label: vm.$t(\"BlackList\") },\n        ],\n      },\n      {\n        title: vm.$t(\"Search\"),\n        type: \"input\",\n        key: \"search\",\n        value: \"\",\n        showBtn: true,\n        isWarn: false,\n        warnLabel: vm.$t(\"ConSearchPrompt\"),\n        onSearch: function (value) {\n          onContactSearch(vm, value);\n        },\n        onReset: function () {\n          onContactSearchReset(vm);\n        },\n      },\n      {\n        type: \"table\",\n        key: \"contactListTable\",\n        showHead: true,\n        showFooter: true,\n        showRowSelection: true,\n        selectedRowKeys: [],\n        tableHeadData: tableHeadData,\n        tableFooterData: tableFooterData,\n        tableData: [],\n        tableColumns: [\n          {\n            type: \"label\",\n            title: vm.$t(\"Index\"),\n            dataIndex: \"index\",\n            scopedSlots: { customRender: \"index\" },\n            align: \"center\",\n            width: \"10%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"Name\"),\n            dataIndex: \"name\",\n            scopedSlots: { customRender: \"name\" },\n            align: \"center\",\n            width: \"20%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"Number\"),\n            dataIndex: \"number\",\n            scopedSlots: { customRender: \"number\" },\n            align: \"center\",\n            width: \"20%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"Group\"),\n            dataIndex: \"group\",\n            scopedSlots: { customRender: \"group\" },\n            align: \"center\",\n            width: \"20%\",\n          },\n          {\n            type: \"label\",\n            title: vm.$t(\"Account\"),\n            dataIndex: \"account\",\n            scopedSlots: { customRender: \"account\" },\n            align: \"center\",\n            width: \"20%\",\n          },\n          {\n            type: \"edit\",\n            title: vm.$t(\"EditLabel\"),\n            dataIndex: \"edit\",\n            scopedSlots: { customRender: \"edit\" },\n            align: \"center\",\n            width: \"10%\",\n            onEdit: function (index, key) {\n              onSetEditValue(index, key, vm);\n            },\n          },\n        ],\n      },\n    ],\n  };\n  return content;\n}\n\nfunction getContactsTableData(vm, page) {\n  let group = getItemByKey(vm.data, \"contactsList\", \"contactListSelect\").value;\n  vm.$axios\n    .get(\n      \"api/phoneLocalContact/get?page=\" +\n        page +\n        \"&group=\" +\n        group +\n        \"&search=\" +\n        vm.searchValue\n    )\n    .then((response) => {\n      let tableData = [];\n      let data = response.data.data;\n      vm.currentContactList = response.data.data.contactList;\n      for (let i = 0; i < data.contactList.length; i++) {\n        let item = {\n          key: data.contactList[i].id,\n          index: i + 1,\n          name: data.contactList[i].name,\n          number: data.contactList[i].number,\n          group:\n            data.contactList[i].group == \"\"\n              ? vm.$t(\"Default\")\n              : data.contactList[i].group == \"BlockList\"\n              ? vm.$t(\"BlackList\")\n              : data.contactList[i].group,\n          account: vm.$t(\"Account\") + (data.contactList[i].account + 1),\n          edit: i,\n        };\n        tableData.push(item);\n      }\n      getItemByKey(\n        vm.data,\n        \"contactsList\",\n        \"contactListTable\"\n      ).tableData = tableData;\n      getItemByKey(\n        vm.data,\n        \"contactsList\",\n        \"contactListTable\"\n      ).tableFooterData.sum = data.sum;\n      getItemByKey(\n        vm.data,\n        \"contactsList\",\n        \"contactListTable\"\n      ).tableFooterData.pageNumber = data.pageNum;\n      getItemByKey(\n        vm.data,\n        \"contactsList\",\n        \"contactListTable\"\n      ).tableFooterData.curPage = page;\n      getItemByKey(\n        vm.data,\n        \"contactsList\",\n        \"contactListTable\"\n      ).selectedRowKeys = [];\n    });\n}\n\nfunction onChangeContact(vm) {\n  let addModalData = getItemByKey(vm.data, \"contactsList\", \"contactListTable\")\n    .tableHeadData.addModalData;\n  let name = addModalData.items[getIndexByKey(addModalData.items, \"name\")];\n  let number = addModalData.items[getIndexByKey(addModalData.items, \"number\")];\n  let group = addModalData.items[getIndexByKey(addModalData.items, \"group\")];\n  let account =\n    addModalData.items[getIndexByKey(addModalData.items, \"account\")];\n  let id = addModalData.key;\n\n  let errFlag = false;\n  if (name.value == \"\") {\n    name.isWarn = true;\n    name.warnLabel = vm.$t(\"NameEmptyWarning\");\n    errFlag = true;\n  }\n  if (!isAValidDialedNumber(number.value)) {\n    number.isWarn = true;\n    errFlag = true;\n  }\n\n  if (errFlag) {\n    return;\n  }\n\n  let oriGroup = 0;\n  if (id >= 0) {\n    for (let i = 0; i < vm.currentContactList.length; i++) {\n      if (vm.currentContactList[i].id == id) {\n        oriGroup = vm.currentContactList[i].group == \"BlockList\" ? 1 : 0;\n      }\n    }\n  }\n\n  let data = {\n    name: name.value,\n    number: number.value,\n    group: group.value,\n    oriGroup: oriGroup,\n    account: account.value,\n    id: id,\n  };\n  let action = id >= 0 ? \"edit\" : \"add\";\n\n  let requestData = {\n    target: \"phoneLocalContact\",\n    action: action,\n    data: data,\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    let ret = response.data.retcode;\n    if (ret == 0) {\n      name.value = \"\";\n      number.value = \"\";\n      group.value = 0;\n      account.value = 0;\n      let page = 0;\n      let tableItem = getItemByKey(vm.data, \"contactsList\", \"contactListTable\");\n      if (action == \"add\") {\n        //页面数据变化\n        page = Math.ceil(\n          (tableItem.tableFooterData.sum + 1) /\n            tableItem.tableFooterData.pageNumber\n        );\n      } else {\n        page = tableItem.tableFooterData.curPage;\n      }\n      getContactsTableData(vm, page);\n      //关闭窗口并展示成功\n      addModalData.visible = false;\n      showRequestSuccess(vm);\n    } else if (ret == 7) {\n      name.isWarn = true;\n      name.warnLabel = vm.$t(\"SameNameWarning\");\n    } else if (ret == 17) {\n      showErrorInfo(vm, vm.$t(\"TooManyContactsWarning\"));\n    } else if (ret == 18) {\n      showErrorInfo(vm, vm.$t(\"TooManyBLWarning\"));\n    }\n  });\n}\n\nfunction onSetEditValue(index, key, vm) {\n  let tableItem = getItemByKey(vm.data, \"contactsList\", \"contactListTable\");\n  tableItem.tableHeadData.addModalData.items[\n    getIndexByKey(tableItem.tableHeadData.addModalData.items, \"number\")\n  ].value = tableItem.tableData[index].number;\n  tableItem.tableHeadData.addModalData.items[\n    getIndexByKey(tableItem.tableHeadData.addModalData.items, \"name\")\n  ].value = tableItem.tableData[index].name;\n  tableItem.tableHeadData.addModalData.items[\n    getIndexByKey(tableItem.tableHeadData.addModalData.items, \"account\")\n  ].value = tableItem.tableData[index].account;\n  tableItem.tableHeadData.addModalData.items[\n    getIndexByKey(tableItem.tableHeadData.addModalData.items, \"group\")\n  ].value = tableItem.tableData[index].group;\n}\n\nfunction onDeleteContact(vm, type) {\n  if (\n    !confirm(\n      type == \"all\" ? vm.$t(\"DeleteAllConfirm\") : vm.$t(\"DeleteSelectedConfirm\")\n    )\n  ) {\n    return;\n  }\n  let selectedRowKeys = getItemByKey(\n    vm.data,\n    \"contactsList\",\n    \"contactListTable\"\n  ).selectedRowKeys;\n  let requestData = {\n    target: \"phoneLocalContact\",\n    action: \"del\",\n    data: {\n      type: type,\n      ids: selectedRowKeys,\n    },\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm, vm.$t(\"HintDeleteSuccess\"));\n    let tableFooterData = getItemByKey(\n      vm.data,\n      \"contactsList\",\n      \"contactListTable\"\n    ).tableFooterData;\n    if (type != \"all\") {\n      let sumPage = Math.ceil(\n        (tableFooterData.sum - selectedRowKeys.length) /\n          tableFooterData.pageNumber\n      );\n      sumPage = sumPage == 0 ? 1 : sumPage;\n      let page =\n        tableFooterData.curPage >= sumPage ? sumPage : tableFooterData.curPage;\n      getContactsTableData(vm, page);\n    } else {\n      getContactsTableData(vm, 1);\n    }\n  });\n}\n\nfunction onExport(vm, type) {\n  let requestData = {\n    target: \"phoneLocalContact\",\n    action: \"export\",\n    data: {\n      type: type,\n    },\n  };\n  vm.$axios.post(\"api\", requestData).then((response) => {\n    showRequestSuccess(vm, vm.$t(\"ExportSuccess\"));\n    let address = response.data.data.address;\n    window.open(address);\n  });\n}\n\nfunction onImport(vm) {\n  let modal = getItemByKey(vm.data, \"contactsList\", \"contactListTable\")\n    .tableHeadData.importModalData;\n  let item = modal.items[getIndexByKey(modal.items, \"import\")];\n  let fileName = item.value.fileName;\n  if (fileName == \"\" || fileName == vm.$t(\"UpgradeFilePath\")) {\n    return;\n  }\n\n  modal.confirmLoading = true;\n  const upData = new FormData();\n  upData.append(\"file\", item.value.fileData);\n  axios\n    .post(\"api/phoneLocalContact/import\", upData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    })\n    .then((res) => {\n      if (res.data.retcode == -2) {\n        showWarningInfo(vm, vm.$t(\"TooManyGroupsWarning\"));\n        item.value.fileName = vm.$t(\"UpgradeFilePath\");\n        item.value.fileData = {};\n        modal.visible = false;\n      } else if (res.data.retcode == 0) {\n        showRequestSuccess(vm, vm.$t(\"ContactImportSuccess\"));\n        item.value.fileName = vm.$t(\"UpgradeFilePath\");\n        item.value.fileData = {};\n        modal.visible = false;\n      } else {\n        showErrorInfo(vm, vm.$t(\"ContactImportFail\"));\n      }\n      modal.confirmLoading = false;\n      let page = getItemByKey(vm.data, \"contactsList\", \"contactListTable\")\n        .tableFooterData.curPage;\n      getContactsTableData(vm, page);\n    });\n}\n\nfunction onContactSearch(vm, value) {\n  if (value == \"\") {\n    getItemByKey(vm.data, \"contactsList\", \"search\").isWarn = true;\n    return;\n  }\n  let groupSelectItem = getItemByKey(\n    vm.data,\n    \"contactsList\",\n    \"contactListSelect\"\n  );\n  groupSelectItem.selectItems = [\n    { key: \"AllContacts\", label: vm.$t(\"AllContacts\") },\n  ];\n  groupSelectItem.value = \"AllContacts\";\n  vm.searchValue = value;\n  getContactsTableData(vm, 1);\n}\n\nfunction onContactSearchReset(vm) {\n  let groupSelectItem = getItemByKey(\n    vm.data,\n    \"contactsList\",\n    \"contactListSelect\"\n  );\n  groupSelectItem.selectItems = [\n    { key: \"AllContacts\", label: vm.$t(\"AllContacts\") },\n    { key: \"BlackList\", label: vm.$t(\"BlackList\") },\n  ];\n  groupSelectItem.value = \"AllContacts\";\n  vm.searchValue = \"\";\n  getItemByKey(vm.data, \"contactsList\", \"search\").value = \"\";\n  getContactsTableData(vm, 1);\n}\n</script>"]}]}